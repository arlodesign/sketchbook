{"version":3,"sources":["webpack:///./src/pages/sketch/2019/06/14.js","webpack:///./src/lib/polarToCartesian.js"],"names":["sketch","p","points","setup","createCanvas","stroke","strokeWeight","strokeJoin","BEVEL","fill","colorMode","HSB","initPoints","Array","from","a","random","TWO_PI","d","width","aSpeed","_loop","angle","concat","map","pt","Object","assign","draw","background","beginShape","forEach","_ref","i","vertex","apply","polarToCartesian","height","endShape","CLOSE","push","blendMode","SCREEN","sin","frameCount","rect","pop","__webpack_exports__","_ref2","location","_emotion_core__WEBPACK_IMPORTED_MODULE_4__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_6__","path","pathname","description","__webpack_require__","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","distance","Math","cos","centerX","centerY","radiusX","radiusY","asArray","x","y"],"mappings":"iKAIMA,EAAS,SAASC,GACtB,IAEIC,EAAS,GAEbD,EAAEE,MAAQ,WACRF,EAAEG,aAAa,IAAK,KACpBH,EAAEI,OAAO,KACTJ,EAAEK,aAAa,IACfL,EAAEM,WAAWN,EAAEO,OACfP,EAAEQ,KAAK,GACPR,EAAES,UAAUT,EAAEU,IAAK,KAQnB,IANA,IAAMC,EAAaC,MAAMC,KAAKD,MAAM,GAAI,iBAAO,CAC7CE,EAAGd,EAAEe,OAAOf,EAAEgB,QACdC,EAAGjB,EAAEe,OAAOf,EAAEkB,MAAQ,GAAIlB,EAAEkB,MAAQ,GACpCC,OAAQnB,EAAEe,OAAO,KAAQf,EAAEe,OAAO,EAAE,EAAG,OAXtBK,EAAA,SAcVC,GACPpB,EAASA,EAAOqB,OACdX,EAAWY,IAAI,SAAAC,GAAE,OAAIC,OAAOC,OAAO,GAAIF,EAAI,CAAEV,EAAGU,EAAGV,EAAIO,QAFlDA,EAAQ,EAAGA,EAAQrB,EAAEgB,OAAQK,GAASrB,EAAEgB,OAlBrC,EAkBqDI,EAAxDC,IAOXrB,EAAE2B,KAAO,WACP3B,EAAE4B,WAAW,KAEb5B,EAAE6B,aAEF5B,EAAO6B,QAAQ,SAAAC,EAAmBC,GAAM,IAAtBlB,EAAsBiB,EAAtBjB,EAAGG,EAAmBc,EAAnBd,EAAGE,EAAgBY,EAAhBZ,OACtBnB,EAAEiC,OAAFC,MAAAlC,EAAYmC,YAAiBnC,EAAEkB,MAAQ,EAAGlB,EAAEoC,OAAS,EAAGtB,EAAGG,GAAG,IAC9DhB,EAAO+B,GAAGlB,GAAKK,IAGjBnB,EAAEqC,SAASrC,EAAEsC,OAEbtC,EAAEuC,OACFvC,EAAEwC,UAAUxC,EAAEyC,QACdzC,EAAEQ,KAAKR,EAAEuB,IAAIvB,EAAE0C,IAAI1C,EAAE2C,WAAa,MAAO,EAAG,EAAG,EAAG,KAAM,IAAK,KAC7D3C,EAAE4C,KAAK,EAAG,EAAG5C,EAAEkB,MAAOlB,EAAEoC,QACxBpC,EAAE6C,QAISC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbvB,OAAAwB,EAAA,EAAAxB,CAACyB,EAAA,EAAD,CAAcnD,OAAQA,EAAQoD,KAAMH,EAASI,SAAUC,YAAY,wCCnDrEC,EAAArC,EAAA6B,EAAA,sBAAAS,IAAAD,EAAArC,EAAA6B,EAAA,sBAAAU,IAAAF,EAAArC,EAAA6B,EAAA,sBAAAW,IAAA,IAAMF,EAAoB,SAACG,EAAQrC,EAAOsC,GACxC,OAAOD,EAASE,KAAKC,IAAIxC,GAASsC,GAE9BH,EAAoB,SAACE,EAAQrC,EAAOsC,GACxC,OAAOD,EAASE,KAAKlB,IAAIrB,GAASsC,GAa9BF,EAA0B,SAC9BK,EACAC,EACA1C,EACA2C,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIL,EAAUF,KAAKC,IAAIxC,GAAS2C,EAChCI,EAAIL,EAAUH,KAAKlB,IAAIrB,GAAS4C,EACtC,OAAOC,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,MAIlBjC,IAzBU,SACvB2B,EACAC,EACA1C,EACAsC,EACAO,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIZ,EAAkBO,EAASzC,EAAOsC,GACtCS,EAAIZ,EAAkBO,EAAS1C,EAAOsC,GAC5C,OAAOO,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC","file":"component---src-pages-sketch-2019-06-14-js-532734f40fadf0e66aaf.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const STEPS = 3;\n\n  let points = [];\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.stroke(255);\n    p.strokeWeight(10);\n    p.strokeJoin(p.BEVEL);\n    p.fill(0);\n    p.colorMode(p.HSB, 100);\n\n    const initPoints = Array.from(Array(5), () => ({\n      a: p.random(p.TWO_PI),\n      d: p.random(p.width / 10, p.width / 2),\n      aSpeed: p.random(0.01) * p.random([-1, 1]),\n    }));\n\n    for (let angle = 0; angle < p.TWO_PI; angle += p.TWO_PI / STEPS) {\n      points = points.concat(\n        initPoints.map(pt => Object.assign({}, pt, { a: pt.a + angle }))\n      );\n    }\n  };\n\n  p.draw = function() {\n    p.background(255);\n\n    p.beginShape();\n\n    points.forEach(({ a, d, aSpeed }, i) => {\n      p.vertex(...polarToCartesian(p.width / 2, p.height / 2, a, d, true));\n      points[i].a += aSpeed;\n    });\n\n    p.endShape(p.CLOSE);\n\n    p.push();\n    p.blendMode(p.SCREEN);\n    p.fill(p.map(p.sin(p.frameCount / 500), -1, 1, 0, 100), 100, 100);\n    p.rect(0, 0, p.width, p.height);\n    p.pop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
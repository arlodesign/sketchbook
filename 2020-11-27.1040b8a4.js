(window.webpackJsonp=window.webpackJsonp||[]).push([[435],{489:function(n,e,t){"use strict";t.r(e);var r=t(0),s=t.n(r),a=t(34),i=t.n(a),o=function(){return i()('/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === \'object\' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, \'default\', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != \'string\') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module[\'default\']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, \'a\', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = "./node_modules/babel-loader/lib/index.js?!./src/sketch/2020/11/27.worker.js?80");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ "./node_modules/babel-loader/lib/index.js?!./src/sketch/2020/11/27.worker.js?80":\n/*!**************************************************************************************!*\\\n  !*** ./node_modules/babel-loader/lib??ref--5-1!./src/sketch/2020/11/27.worker.js?80 ***!\n  \\**************************************************************************************/\n/*! no exports provided */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\neval("__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var open_simplex_noise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! open-simplex-noise */ \\"./node_modules/open-simplex-noise/lib/index.js\\");\\n/* harmony import */ var open_simplex_noise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(open_simplex_noise__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var util_polarToCartesian__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util/polarToCartesian */ \\"./src/util/polarToCartesian.js\\");\\n\\n\\nvar noise = new open_simplex_noise__WEBPACK_IMPORTED_MODULE_0__[\\"makeNoise4D\\"](Date.now());\\n\\nself.onmessage = function (_ref) {\\n  var data = _ref.data;\\n  var TWO_PI = Math.PI * 2;\\n  var img = data.img,\\n      width = data.width,\\n      height = data.height,\\n      progress = data.progress,\\n      scale = data.scale,\\n      radius = data.radius;\\n\\n  var getIndex = function getIndex(x, y) {\\n    return (Math.floor(x) + Math.floor(y) * width) * 4;\\n  };\\n\\n  var noiseVal = function noiseVal(x, y, s, r) {\\n    return noise(s * x, s * y, r * Math.cos(TWO_PI * progress), r * Math.sin(TWO_PI * progress));\\n  };\\n\\n  var newImg = new Uint8ClampedArray(width * height * 4);\\n\\n  for (var y = 0; y < height; y++) {\\n    for (var x = 0; x < width; x++) {\\n      var index = getIndex(x, y);\\n      var px = Object(util_polarToCartesian__WEBPACK_IMPORTED_MODULE_1__[\\"default\\"])(x, y, TWO_PI * noiseVal(x, y, scale[0], radius[0]), width * 2 * Math.abs(noiseVal(x, y, scale[1], radius[1])));\\n      px.x = px.x < 0 ? Math.floor(width + px.x % width) : Math.floor(px.x % width);\\n      px.y = px.y < 0 ? Math.floor(height + px.y % height) : Math.floor(px.y % height);\\n      var pxIndex = getIndex(px.x, px.y);\\n      newImg[index + 0] = img[pxIndex + 0];\\n      newImg[index + 1] = img[pxIndex + 1];\\n      newImg[index + 2] = img[pxIndex + 2];\\n      newImg[index + 3] = 255;\\n    }\\n  }\\n\\n  self.postMessage(newImg);\\n};\\n\\n//# sourceURL=webpack:///./src/sketch/2020/11/27.worker.js?./node_modules/babel-loader/lib??ref--5-1");\n\n/***/ }),\n\n/***/ "./node_modules/open-simplex-noise/lib/constants.js":\n/*!**********************************************************!*\\\n  !*** ./node_modules/open-simplex-noise/lib/constants.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n"use strict";\neval("\\nObject.defineProperty(exports, \\"__esModule\\", { value: true });\\nexports.NORM_2D = 1.0 / 47.0;\\nexports.NORM_3D = 1.0 / 103.0;\\nexports.NORM_4D = 1.0 / 30.0;\\nexports.SQUISH_2D = (Math.sqrt(2 + 1) - 1) / 2;\\nexports.SQUISH_3D = (Math.sqrt(3 + 1) - 1) / 3;\\nexports.SQUISH_4D = (Math.sqrt(4 + 1) - 1) / 4;\\nexports.STRETCH_2D = (1 / Math.sqrt(2 + 1) - 1) / 2;\\nexports.STRETCH_3D = (1 / Math.sqrt(3 + 1) - 1) / 3;\\nexports.STRETCH_4D = (1 / Math.sqrt(4 + 1) - 1) / 4;\\nexports.base2D = [\\n    [1, 1, 0, 1, 0, 1, 0, 0, 0],\\n    [1, 1, 0, 1, 0, 1, 2, 1, 1]\\n];\\nexports.base3D = [\\n    [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\\n    [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1],\\n    [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1]\\n];\\nexports.base4D = [\\n    [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1],\\n    [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1],\\n    [\\n        1,\\n        1,\\n        0,\\n        0,\\n        0,\\n        1,\\n        0,\\n        1,\\n        0,\\n        0,\\n        1,\\n        0,\\n        0,\\n        1,\\n        0,\\n        1,\\n        0,\\n        0,\\n        0,\\n        1,\\n        2,\\n        1,\\n        1,\\n        0,\\n        0,\\n        2,\\n        1,\\n        0,\\n        1,\\n        0,\\n        2,\\n        1,\\n        0,\\n        0,\\n        1,\\n        2,\\n        0,\\n        1,\\n        1,\\n        0,\\n        2,\\n        0,\\n        1,\\n        0,\\n        1,\\n        2,\\n        0,\\n        0,\\n        1,\\n        1\\n    ],\\n    [\\n        3,\\n        1,\\n        1,\\n        1,\\n        0,\\n        3,\\n        1,\\n        1,\\n        0,\\n        1,\\n        3,\\n        1,\\n        0,\\n        1,\\n        1,\\n        3,\\n        0,\\n        1,\\n        1,\\n        1,\\n        2,\\n        1,\\n        1,\\n        0,\\n        0,\\n        2,\\n        1,\\n        0,\\n        1,\\n        0,\\n        2,\\n        1,\\n        0,\\n        0,\\n        1,\\n        2,\\n        0,\\n        1,\\n        1,\\n        0,\\n        2,\\n        0,\\n        1,\\n        0,\\n        1,\\n        2,\\n        0,\\n        0,\\n        1,\\n        1\\n    ]\\n];\\nexports.gradients2D = [\\n    5,\\n    2,\\n    2,\\n    5,\\n    -5,\\n    2,\\n    -2,\\n    5,\\n    5,\\n    -2,\\n    2,\\n    -5,\\n    -5,\\n    -2,\\n    -2,\\n    -5\\n];\\nexports.gradients3D = [\\n    -11,\\n    4,\\n    4,\\n    -4,\\n    11,\\n    4,\\n    -4,\\n    4,\\n    11,\\n    11,\\n    4,\\n    4,\\n    4,\\n    11,\\n    4,\\n    4,\\n    4,\\n    11,\\n    -11,\\n    -4,\\n    4,\\n    -4,\\n    -11,\\n    4,\\n    -4,\\n    -4,\\n    11,\\n    11,\\n    -4,\\n    4,\\n    4,\\n    -11,\\n    4,\\n    4,\\n    -4,\\n    11,\\n    -11,\\n    4,\\n    -4,\\n    -4,\\n    11,\\n    -4,\\n    -4,\\n    4,\\n    -11,\\n    11,\\n    4,\\n    -4,\\n    4,\\n    11,\\n    -4,\\n    4,\\n    4,\\n    -11,\\n    -11,\\n    -4,\\n    -4,\\n    -4,\\n    -11,\\n    -4,\\n    -4,\\n    -4,\\n    -11,\\n    11,\\n    -4,\\n    -4,\\n    4,\\n    -11,\\n    -4,\\n    4,\\n    -4,\\n    -11\\n];\\nexports.gradients4D = [\\n    3,\\n    1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    -3,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    3,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    3,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    -3,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    3,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    3,\\n    -3,\\n    -1,\\n    1,\\n    1,\\n    -1,\\n    -3,\\n    1,\\n    1,\\n    -1,\\n    -1,\\n    3,\\n    1,\\n    -1,\\n    -1,\\n    1,\\n    3,\\n    3,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    3,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    -3,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    3,\\n    -3,\\n    1,\\n    -1,\\n    1,\\n    -1,\\n    3,\\n    -1,\\n    1,\\n    -1,\\n    1,\\n    -3,\\n    1,\\n    -1,\\n    1,\\n    -1,\\n    3,\\n    3,\\n    -1,\\n    -1,\\n    1,\\n    1,\\n    -3,\\n    -1,\\n    1,\\n    1,\\n    -1,\\n    -3,\\n    1,\\n    1,\\n    -1,\\n    -1,\\n    3,\\n    -3,\\n    -1,\\n    -1,\\n    1,\\n    -1,\\n    -3,\\n    -1,\\n    1,\\n    -1,\\n    -1,\\n    -3,\\n    1,\\n    -1,\\n    -1,\\n    -1,\\n    3,\\n    3,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    3,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    3,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    -3,\\n    -3,\\n    1,\\n    1,\\n    -1,\\n    -1,\\n    3,\\n    1,\\n    -1,\\n    -1,\\n    1,\\n    3,\\n    -1,\\n    -1,\\n    1,\\n    1,\\n    -3,\\n    3,\\n    -1,\\n    1,\\n    -1,\\n    1,\\n    -3,\\n    1,\\n    -1,\\n    1,\\n    -1,\\n    3,\\n    -1,\\n    1,\\n    -1,\\n    1,\\n    -3,\\n    -3,\\n    -1,\\n    1,\\n    -1,\\n    -1,\\n    -3,\\n    1,\\n    -1,\\n    -1,\\n    -1,\\n    3,\\n    -1,\\n    -1,\\n    -1,\\n    1,\\n    -3,\\n    3,\\n    1,\\n    -1,\\n    -1,\\n    1,\\n    3,\\n    -1,\\n    -1,\\n    1,\\n    1,\\n    -3,\\n    -1,\\n    1,\\n    1,\\n    -1,\\n    -3,\\n    -3,\\n    1,\\n    -1,\\n    -1,\\n    -1,\\n    3,\\n    -1,\\n    -1,\\n    -1,\\n    1,\\n    -3,\\n    -1,\\n    -1,\\n    1,\\n    -1,\\n    -3,\\n    3,\\n    -1,\\n    -1,\\n    -1,\\n    1,\\n    -3,\\n    -1,\\n    -1,\\n    1,\\n    -1,\\n    -3,\\n    -1,\\n    1,\\n    -1,\\n    -1,\\n    -3,\\n    -3,\\n    -1,\\n    -1,\\n    -1,\\n    -1,\\n    -3,\\n    -1,\\n    -1,\\n    -1,\\n    -1,\\n    -3,\\n    -1,\\n    -1,\\n    -1,\\n    -1,\\n    -3\\n];\\nexports.lookupPairs2D = [\\n    0,\\n    1,\\n    1,\\n    0,\\n    4,\\n    1,\\n    17,\\n    0,\\n    20,\\n    2,\\n    21,\\n    2,\\n    22,\\n    5,\\n    23,\\n    5,\\n    26,\\n    4,\\n    39,\\n    3,\\n    42,\\n    4,\\n    43,\\n    3\\n];\\nexports.lookupPairs3D = [\\n    0,\\n    2,\\n    1,\\n    1,\\n    2,\\n    2,\\n    5,\\n    1,\\n    6,\\n    0,\\n    7,\\n    0,\\n    32,\\n    2,\\n    34,\\n    2,\\n    129,\\n    1,\\n    133,\\n    1,\\n    160,\\n    5,\\n    161,\\n    5,\\n    518,\\n    0,\\n    519,\\n    0,\\n    546,\\n    4,\\n    550,\\n    4,\\n    645,\\n    3,\\n    647,\\n    3,\\n    672,\\n    5,\\n    673,\\n    5,\\n    674,\\n    4,\\n    677,\\n    3,\\n    678,\\n    4,\\n    679,\\n    3,\\n    680,\\n    13,\\n    681,\\n    13,\\n    682,\\n    12,\\n    685,\\n    14,\\n    686,\\n    12,\\n    687,\\n    14,\\n    712,\\n    20,\\n    714,\\n    18,\\n    809,\\n    21,\\n    813,\\n    23,\\n    840,\\n    20,\\n    841,\\n    21,\\n    1198,\\n    19,\\n    1199,\\n    22,\\n    1226,\\n    18,\\n    1230,\\n    19,\\n    1325,\\n    23,\\n    1327,\\n    22,\\n    1352,\\n    15,\\n    1353,\\n    17,\\n    1354,\\n    15,\\n    1357,\\n    17,\\n    1358,\\n    16,\\n    1359,\\n    16,\\n    1360,\\n    11,\\n    1361,\\n    10,\\n    1362,\\n    11,\\n    1365,\\n    10,\\n    1366,\\n    9,\\n    1367,\\n    9,\\n    1392,\\n    11,\\n    1394,\\n    11,\\n    1489,\\n    10,\\n    1493,\\n    10,\\n    1520,\\n    8,\\n    1521,\\n    8,\\n    1878,\\n    9,\\n    1879,\\n    9,\\n    1906,\\n    7,\\n    1910,\\n    7,\\n    2005,\\n    6,\\n    2007,\\n    6,\\n    2032,\\n    8,\\n    2033,\\n    8,\\n    2034,\\n    7,\\n    2037,\\n    6,\\n    2038,\\n    7,\\n    2039,\\n    6\\n];\\nexports.lookupPairs4D = [\\n    0,\\n    3,\\n    1,\\n    2,\\n    2,\\n    3,\\n    5,\\n    2,\\n    6,\\n    1,\\n    7,\\n    1,\\n    8,\\n    3,\\n    9,\\n    2,\\n    10,\\n    3,\\n    13,\\n    2,\\n    16,\\n    3,\\n    18,\\n    3,\\n    22,\\n    1,\\n    23,\\n    1,\\n    24,\\n    3,\\n    26,\\n    3,\\n    33,\\n    2,\\n    37,\\n    2,\\n    38,\\n    1,\\n    39,\\n    1,\\n    41,\\n    2,\\n    45,\\n    2,\\n    54,\\n    1,\\n    55,\\n    1,\\n    56,\\n    0,\\n    57,\\n    0,\\n    58,\\n    0,\\n    59,\\n    0,\\n    60,\\n    0,\\n    61,\\n    0,\\n    62,\\n    0,\\n    63,\\n    0,\\n    256,\\n    3,\\n    258,\\n    3,\\n    264,\\n    3,\\n    266,\\n    3,\\n    272,\\n    3,\\n    274,\\n    3,\\n    280,\\n    3,\\n    282,\\n    3,\\n    2049,\\n    2,\\n    2053,\\n    2,\\n    2057,\\n    2,\\n    2061,\\n    2,\\n    2081,\\n    2,\\n    2085,\\n    2,\\n    2089,\\n    2,\\n    2093,\\n    2,\\n    2304,\\n    9,\\n    2305,\\n    9,\\n    2312,\\n    9,\\n    2313,\\n    9,\\n    16390,\\n    1,\\n    16391,\\n    1,\\n    16406,\\n    1,\\n    16407,\\n    1,\\n    16422,\\n    1,\\n    16423,\\n    1,\\n    16438,\\n    1,\\n    16439,\\n    1,\\n    16642,\\n    8,\\n    16646,\\n    8,\\n    16658,\\n    8,\\n    16662,\\n    8,\\n    18437,\\n    6,\\n    18439,\\n    6,\\n    18469,\\n    6,\\n    18471,\\n    6,\\n    18688,\\n    9,\\n    18689,\\n    9,\\n    18690,\\n    8,\\n    18693,\\n    6,\\n    18694,\\n    8,\\n    18695,\\n    6,\\n    18696,\\n    9,\\n    18697,\\n    9,\\n    18706,\\n    8,\\n    18710,\\n    8,\\n    18725,\\n    6,\\n    18727,\\n    6,\\n    131128,\\n    0,\\n    131129,\\n    0,\\n    131130,\\n    0,\\n    131131,\\n    0,\\n    131132,\\n    0,\\n    131133,\\n    0,\\n    131134,\\n    0,\\n    131135,\\n    0,\\n    131352,\\n    7,\\n    131354,\\n    7,\\n    131384,\\n    7,\\n    131386,\\n    7,\\n    133161,\\n    5,\\n    133165,\\n    5,\\n    133177,\\n    5,\\n    133181,\\n    5,\\n    133376,\\n    9,\\n    133377,\\n    9,\\n    133384,\\n    9,\\n    133385,\\n    9,\\n    133400,\\n    7,\\n    133402,\\n    7,\\n    133417,\\n    5,\\n    133421,\\n    5,\\n    133432,\\n    7,\\n    133433,\\n    5,\\n    133434,\\n    7,\\n    133437,\\n    5,\\n    147510,\\n    4,\\n    147511,\\n    4,\\n    147518,\\n    4,\\n    147519,\\n    4,\\n    147714,\\n    8,\\n    147718,\\n    8,\\n    147730,\\n    8,\\n    147734,\\n    8,\\n    147736,\\n    7,\\n    147738,\\n    7,\\n    147766,\\n    4,\\n    147767,\\n    4,\\n    147768,\\n    7,\\n    147770,\\n    7,\\n    147774,\\n    4,\\n    147775,\\n    4,\\n    149509,\\n    6,\\n    149511,\\n    6,\\n    149541,\\n    6,\\n    149543,\\n    6,\\n    149545,\\n    5,\\n    149549,\\n    5,\\n    149558,\\n    4,\\n    149559,\\n    4,\\n    149561,\\n    5,\\n    149565,\\n    5,\\n    149566,\\n    4,\\n    149567,\\n    4,\\n    149760,\\n    9,\\n    149761,\\n    9,\\n    149762,\\n    8,\\n    149765,\\n    6,\\n    149766,\\n    8,\\n    149767,\\n    6,\\n    149768,\\n    9,\\n    149769,\\n    9,\\n    149778,\\n    8,\\n    149782,\\n    8,\\n    149784,\\n    7,\\n    149786,\\n    7,\\n    149797,\\n    6,\\n    149799,\\n    6,\\n    149801,\\n    5,\\n    149805,\\n    5,\\n    149814,\\n    4,\\n    149815,\\n    4,\\n    149816,\\n    7,\\n    149817,\\n    5,\\n    149818,\\n    7,\\n    149821,\\n    5,\\n    149822,\\n    4,\\n    149823,\\n    4,\\n    149824,\\n    37,\\n    149825,\\n    37,\\n    149826,\\n    36,\\n    149829,\\n    34,\\n    149830,\\n    36,\\n    149831,\\n    34,\\n    149832,\\n    37,\\n    149833,\\n    37,\\n    149842,\\n    36,\\n    149846,\\n    36,\\n    149848,\\n    35,\\n    149850,\\n    35,\\n    149861,\\n    34,\\n    149863,\\n    34,\\n    149865,\\n    33,\\n    149869,\\n    33,\\n    149878,\\n    32,\\n    149879,\\n    32,\\n    149880,\\n    35,\\n    149881,\\n    33,\\n    149882,\\n    35,\\n    149885,\\n    33,\\n    149886,\\n    32,\\n    149887,\\n    32,\\n    150080,\\n    49,\\n    150082,\\n    48,\\n    150088,\\n    49,\\n    150098,\\n    48,\\n    150104,\\n    47,\\n    150106,\\n    47,\\n    151873,\\n    46,\\n    151877,\\n    45,\\n    151881,\\n    46,\\n    151909,\\n    45,\\n    151913,\\n    44,\\n    151917,\\n    44,\\n    152128,\\n    49,\\n    152129,\\n    46,\\n    152136,\\n    49,\\n    152137,\\n    46,\\n    166214,\\n    43,\\n    166215,\\n    42,\\n    166230,\\n    43,\\n    166247,\\n    42,\\n    166262,\\n    41,\\n    166263,\\n    41,\\n    166466,\\n    48,\\n    166470,\\n    43,\\n    166482,\\n    48,\\n    166486,\\n    43,\\n    168261,\\n    45,\\n    168263,\\n    42,\\n    168293,\\n    45,\\n    168295,\\n    42,\\n    168512,\\n    31,\\n    168513,\\n    28,\\n    168514,\\n    31,\\n    168517,\\n    28,\\n    168518,\\n    25,\\n    168519,\\n    25,\\n    280952,\\n    40,\\n    280953,\\n    39,\\n    280954,\\n    40,\\n    280957,\\n    39,\\n    280958,\\n    38,\\n    280959,\\n    38,\\n    281176,\\n    47,\\n    281178,\\n    47,\\n    281208,\\n    40,\\n    281210,\\n    40,\\n    282985,\\n    44,\\n    282989,\\n    44,\\n    283001,\\n    39,\\n    283005,\\n    39,\\n    283208,\\n    30,\\n    283209,\\n    27,\\n    283224,\\n    30,\\n    283241,\\n    27,\\n    283256,\\n    22,\\n    283257,\\n    22,\\n    297334,\\n    41,\\n    297335,\\n    41,\\n    297342,\\n    38,\\n    297343,\\n    38,\\n    297554,\\n    29,\\n    297558,\\n    24,\\n    297562,\\n    29,\\n    297590,\\n    24,\\n    297594,\\n    21,\\n    297598,\\n    21,\\n    299365,\\n    26,\\n    299367,\\n    23,\\n    299373,\\n    26,\\n    299383,\\n    23,\\n    299389,\\n    20,\\n    299391,\\n    20,\\n    299584,\\n    31,\\n    299585,\\n    28,\\n    299586,\\n    31,\\n    299589,\\n    28,\\n    299590,\\n    25,\\n    299591,\\n    25,\\n    299592,\\n    30,\\n    299593,\\n    27,\\n    299602,\\n    29,\\n    299606,\\n    24,\\n    299608,\\n    30,\\n    299610,\\n    29,\\n    299621,\\n    26,\\n    299623,\\n    23,\\n    299625,\\n    27,\\n    299629,\\n    26,\\n    299638,\\n    24,\\n    299639,\\n    23,\\n    299640,\\n    22,\\n    299641,\\n    22,\\n    299642,\\n    21,\\n    299645,\\n    20,\\n    299646,\\n    21,\\n    299647,\\n    20,\\n    299648,\\n    61,\\n    299649,\\n    60,\\n    299650,\\n    61,\\n    299653,\\n    60,\\n    299654,\\n    59,\\n    299655,\\n    59,\\n    299656,\\n    58,\\n    299657,\\n    57,\\n    299666,\\n    55,\\n    299670,\\n    54,\\n    299672,\\n    58,\\n    299674,\\n    55,\\n    299685,\\n    52,\\n    299687,\\n    51,\\n    299689,\\n    57,\\n    299693,\\n    52,\\n    299702,\\n    54,\\n    299703,\\n    51,\\n    299704,\\n    56,\\n    299705,\\n    56,\\n    299706,\\n    53,\\n    299709,\\n    50,\\n    299710,\\n    53,\\n    299711,\\n    50,\\n    299904,\\n    61,\\n    299906,\\n    61,\\n    299912,\\n    58,\\n    299922,\\n    55,\\n    299928,\\n    58,\\n    299930,\\n    55,\\n    301697,\\n    60,\\n    301701,\\n    60,\\n    301705,\\n    57,\\n    301733,\\n    52,\\n    301737,\\n    57,\\n    301741,\\n    52,\\n    301952,\\n    79,\\n    301953,\\n    79,\\n    301960,\\n    76,\\n    301961,\\n    76,\\n    316038,\\n    59,\\n    316039,\\n    59,\\n    316054,\\n    54,\\n    316071,\\n    51,\\n    316086,\\n    54,\\n    316087,\\n    51,\\n    316290,\\n    78,\\n    316294,\\n    78,\\n    316306,\\n    73,\\n    316310,\\n    73,\\n    318085,\\n    77,\\n    318087,\\n    77,\\n    318117,\\n    70,\\n    318119,\\n    70,\\n    318336,\\n    79,\\n    318337,\\n    79,\\n    318338,\\n    78,\\n    318341,\\n    77,\\n    318342,\\n    78,\\n    318343,\\n    77,\\n    430776,\\n    56,\\n    430777,\\n    56,\\n    430778,\\n    53,\\n    430781,\\n    50,\\n    430782,\\n    53,\\n    430783,\\n    50,\\n    431000,\\n    75,\\n    431002,\\n    72,\\n    431032,\\n    75,\\n    431034,\\n    72,\\n    432809,\\n    74,\\n    432813,\\n    69,\\n    432825,\\n    74,\\n    432829,\\n    69,\\n    433032,\\n    76,\\n    433033,\\n    76,\\n    433048,\\n    75,\\n    433065,\\n    74,\\n    433080,\\n    75,\\n    433081,\\n    74,\\n    447158,\\n    71,\\n    447159,\\n    68,\\n    447166,\\n    71,\\n    447167,\\n    68,\\n    447378,\\n    73,\\n    447382,\\n    73,\\n    447386,\\n    72,\\n    447414,\\n    71,\\n    447418,\\n    72,\\n    447422,\\n    71,\\n    449189,\\n    70,\\n    449191,\\n    70,\\n    449197,\\n    69,\\n    449207,\\n    68,\\n    449213,\\n    69,\\n    449215,\\n    68,\\n    449408,\\n    67,\\n    449409,\\n    67,\\n    449410,\\n    66,\\n    449413,\\n    64,\\n    449414,\\n    66,\\n    449415,\\n    64,\\n    449416,\\n    67,\\n    449417,\\n    67,\\n    449426,\\n    66,\\n    449430,\\n    66,\\n    449432,\\n    65,\\n    449434,\\n    65,\\n    449445,\\n    64,\\n    449447,\\n    64,\\n    449449,\\n    63,\\n    449453,\\n    63,\\n    449462,\\n    62,\\n    449463,\\n    62,\\n    449464,\\n    65,\\n    449465,\\n    63,\\n    449466,\\n    65,\\n    449469,\\n    63,\\n    449470,\\n    62,\\n    449471,\\n    62,\\n    449472,\\n    19,\\n    449473,\\n    19,\\n    449474,\\n    18,\\n    449477,\\n    16,\\n    449478,\\n    18,\\n    449479,\\n    16,\\n    449480,\\n    19,\\n    449481,\\n    19,\\n    449490,\\n    18,\\n    449494,\\n    18,\\n    449496,\\n    17,\\n    449498,\\n    17,\\n    449509,\\n    16,\\n    449511,\\n    16,\\n    449513,\\n    15,\\n    449517,\\n    15,\\n    449526,\\n    14,\\n    449527,\\n    14,\\n    449528,\\n    17,\\n    449529,\\n    15,\\n    449530,\\n    17,\\n    449533,\\n    15,\\n    449534,\\n    14,\\n    449535,\\n    14,\\n    449728,\\n    19,\\n    449729,\\n    19,\\n    449730,\\n    18,\\n    449734,\\n    18,\\n    449736,\\n    19,\\n    449737,\\n    19,\\n    449746,\\n    18,\\n    449750,\\n    18,\\n    449752,\\n    17,\\n    449754,\\n    17,\\n    449784,\\n    17,\\n    449786,\\n    17,\\n    451520,\\n    19,\\n    451521,\\n    19,\\n    451525,\\n    16,\\n    451527,\\n    16,\\n    451528,\\n    19,\\n    451529,\\n    19,\\n    451557,\\n    16,\\n    451559,\\n    16,\\n    451561,\\n    15,\\n    451565,\\n    15,\\n    451577,\\n    15,\\n    451581,\\n    15,\\n    451776,\\n    19,\\n    451777,\\n    19,\\n    451784,\\n    19,\\n    451785,\\n    19,\\n    465858,\\n    18,\\n    465861,\\n    16,\\n    465862,\\n    18,\\n    465863,\\n    16,\\n    465874,\\n    18,\\n    465878,\\n    18,\\n    465893,\\n    16,\\n    465895,\\n    16,\\n    465910,\\n    14,\\n    465911,\\n    14,\\n    465918,\\n    14,\\n    465919,\\n    14,\\n    466114,\\n    18,\\n    466118,\\n    18,\\n    466130,\\n    18,\\n    466134,\\n    18,\\n    467909,\\n    16,\\n    467911,\\n    16,\\n    467941,\\n    16,\\n    467943,\\n    16,\\n    468160,\\n    13,\\n    468161,\\n    13,\\n    468162,\\n    13,\\n    468163,\\n    13,\\n    468164,\\n    13,\\n    468165,\\n    13,\\n    468166,\\n    13,\\n    468167,\\n    13,\\n    580568,\\n    17,\\n    580570,\\n    17,\\n    580585,\\n    15,\\n    580589,\\n    15,\\n    580598,\\n    14,\\n    580599,\\n    14,\\n    580600,\\n    17,\\n    580601,\\n    15,\\n    580602,\\n    17,\\n    580605,\\n    15,\\n    580606,\\n    14,\\n    580607,\\n    14,\\n    580824,\\n    17,\\n    580826,\\n    17,\\n    580856,\\n    17,\\n    580858,\\n    17,\\n    582633,\\n    15,\\n    582637,\\n    15,\\n    582649,\\n    15,\\n    582653,\\n    15,\\n    582856,\\n    12,\\n    582857,\\n    12,\\n    582872,\\n    12,\\n    582873,\\n    12,\\n    582888,\\n    12,\\n    582889,\\n    12,\\n    582904,\\n    12,\\n    582905,\\n    12,\\n    596982,\\n    14,\\n    596983,\\n    14,\\n    596990,\\n    14,\\n    596991,\\n    14,\\n    597202,\\n    11,\\n    597206,\\n    11,\\n    597210,\\n    11,\\n    597214,\\n    11,\\n    597234,\\n    11,\\n    597238,\\n    11,\\n    597242,\\n    11,\\n    597246,\\n    11,\\n    599013,\\n    10,\\n    599015,\\n    10,\\n    599021,\\n    10,\\n    599023,\\n    10,\\n    599029,\\n    10,\\n    599031,\\n    10,\\n    599037,\\n    10,\\n    599039,\\n    10,\\n    599232,\\n    13,\\n    599233,\\n    13,\\n    599234,\\n    13,\\n    599235,\\n    13,\\n    599236,\\n    13,\\n    599237,\\n    13,\\n    599238,\\n    13,\\n    599239,\\n    13,\\n    599240,\\n    12,\\n    599241,\\n    12,\\n    599250,\\n    11,\\n    599254,\\n    11,\\n    599256,\\n    12,\\n    599257,\\n    12,\\n    599258,\\n    11,\\n    599262,\\n    11,\\n    599269,\\n    10,\\n    599271,\\n    10,\\n    599272,\\n    12,\\n    599273,\\n    12,\\n    599277,\\n    10,\\n    599279,\\n    10,\\n    599282,\\n    11,\\n    599285,\\n    10,\\n    599286,\\n    11,\\n    599287,\\n    10,\\n    599288,\\n    12,\\n    599289,\\n    12,\\n    599290,\\n    11,\\n    599293,\\n    10,\\n    599294,\\n    11,\\n    599295,\\n    10\\n];\\nexports.p2D = [\\n    0,\\n    0,\\n    1,\\n    -1,\\n    0,\\n    0,\\n    -1,\\n    1,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    2,\\n    2,\\n    0,\\n    1,\\n    2,\\n    0,\\n    2,\\n    1,\\n    0,\\n    0,\\n    0\\n];\\nexports.p3D = [\\n    0,\\n    0,\\n    1,\\n    -1,\\n    0,\\n    0,\\n    1,\\n    0,\\n    -1,\\n    0,\\n    0,\\n    -1,\\n    1,\\n    0,\\n    0,\\n    0,\\n    1,\\n    -1,\\n    0,\\n    0,\\n    -1,\\n    0,\\n    1,\\n    0,\\n    0,\\n    -1,\\n    1,\\n    0,\\n    2,\\n    1,\\n    1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    2,\\n    1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    2,\\n    0,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    2,\\n    1,\\n    0,\\n    3,\\n    1,\\n    2,\\n    0,\\n    1,\\n    3,\\n    2,\\n    0,\\n    1,\\n    3,\\n    1,\\n    0,\\n    2,\\n    1,\\n    3,\\n    0,\\n    2,\\n    1,\\n    3,\\n    0,\\n    1,\\n    2,\\n    1,\\n    1,\\n    1,\\n    0,\\n    0,\\n    2,\\n    2,\\n    0,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    0,\\n    2,\\n    0,\\n    2,\\n    0,\\n    1,\\n    1,\\n    0,\\n    0,\\n    1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    0,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    0,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    0,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    2,\\n    3,\\n    1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    2,\\n    3,\\n    1,\\n    1,\\n    1,\\n    2,\\n    2,\\n    0,\\n    0,\\n    2,\\n    3,\\n    1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    2,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    2,\\n    2,\\n    0,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    2,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    2,\\n    2,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    2,\\n    0,\\n    2,\\n    0\\n];\\nexports.p4D = [\\n    0,\\n    0,\\n    1,\\n    -1,\\n    0,\\n    0,\\n    0,\\n    1,\\n    0,\\n    -1,\\n    0,\\n    0,\\n    1,\\n    0,\\n    0,\\n    -1,\\n    0,\\n    0,\\n    -1,\\n    1,\\n    0,\\n    0,\\n    0,\\n    0,\\n    1,\\n    -1,\\n    0,\\n    0,\\n    0,\\n    1,\\n    0,\\n    -1,\\n    0,\\n    0,\\n    -1,\\n    0,\\n    1,\\n    0,\\n    0,\\n    0,\\n    -1,\\n    1,\\n    0,\\n    0,\\n    0,\\n    0,\\n    1,\\n    -1,\\n    0,\\n    0,\\n    -1,\\n    0,\\n    0,\\n    1,\\n    0,\\n    0,\\n    -1,\\n    0,\\n    1,\\n    0,\\n    0,\\n    0,\\n    -1,\\n    1,\\n    0,\\n    2,\\n    1,\\n    1,\\n    0,\\n    0,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    0,\\n    2,\\n    1,\\n    0,\\n    1,\\n    0,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    -1,\\n    0,\\n    2,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    0,\\n    1,\\n    0,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    2,\\n    1,\\n    0,\\n    0,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    1,\\n    0,\\n    2,\\n    0,\\n    1,\\n    0,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    2,\\n    0,\\n    0,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    4,\\n    2,\\n    1,\\n    1,\\n    0,\\n    4,\\n    1,\\n    2,\\n    1,\\n    0,\\n    4,\\n    1,\\n    1,\\n    2,\\n    0,\\n    1,\\n    4,\\n    2,\\n    1,\\n    0,\\n    1,\\n    4,\\n    1,\\n    2,\\n    0,\\n    1,\\n    4,\\n    1,\\n    1,\\n    0,\\n    2,\\n    1,\\n    4,\\n    2,\\n    0,\\n    1,\\n    1,\\n    4,\\n    1,\\n    0,\\n    2,\\n    1,\\n    4,\\n    1,\\n    0,\\n    1,\\n    2,\\n    1,\\n    4,\\n    0,\\n    2,\\n    1,\\n    1,\\n    4,\\n    0,\\n    1,\\n    2,\\n    1,\\n    4,\\n    0,\\n    1,\\n    1,\\n    2,\\n    1,\\n    2,\\n    1,\\n    1,\\n    0,\\n    0,\\n    3,\\n    2,\\n    1,\\n    0,\\n    0,\\n    3,\\n    1,\\n    2,\\n    0,\\n    0,\\n    1,\\n    2,\\n    1,\\n    0,\\n    1,\\n    0,\\n    3,\\n    2,\\n    0,\\n    1,\\n    0,\\n    3,\\n    1,\\n    0,\\n    2,\\n    0,\\n    1,\\n    2,\\n    0,\\n    1,\\n    1,\\n    0,\\n    3,\\n    0,\\n    2,\\n    1,\\n    0,\\n    3,\\n    0,\\n    1,\\n    2,\\n    0,\\n    1,\\n    2,\\n    1,\\n    0,\\n    0,\\n    1,\\n    3,\\n    2,\\n    0,\\n    0,\\n    1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    2,\\n    1,\\n    2,\\n    0,\\n    1,\\n    0,\\n    1,\\n    3,\\n    0,\\n    2,\\n    0,\\n    1,\\n    3,\\n    0,\\n    1,\\n    0,\\n    2,\\n    1,\\n    2,\\n    0,\\n    0,\\n    1,\\n    1,\\n    3,\\n    0,\\n    0,\\n    2,\\n    1,\\n    3,\\n    0,\\n    0,\\n    1,\\n    2,\\n    2,\\n    3,\\n    1,\\n    1,\\n    1,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    3,\\n    1,\\n    1,\\n    0,\\n    1,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    3,\\n    1,\\n    0,\\n    1,\\n    1,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    3,\\n    1,\\n    1,\\n    1,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    2,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    3,\\n    1,\\n    1,\\n    0,\\n    1,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    2,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    3,\\n    0,\\n    1,\\n    1,\\n    1,\\n    2,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    3,\\n    1,\\n    1,\\n    1,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    3,\\n    1,\\n    0,\\n    1,\\n    1,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    3,\\n    0,\\n    1,\\n    1,\\n    1,\\n    2,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    3,\\n    1,\\n    1,\\n    0,\\n    1,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    3,\\n    1,\\n    0,\\n    1,\\n    1,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    3,\\n    0,\\n    1,\\n    1,\\n    1,\\n    2,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    0,\\n    0,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    -1,\\n    0,\\n    0,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    0,\\n    1,\\n    0,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    0,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    1,\\n    0,\\n    0,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    0,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    1,\\n    1,\\n    0,\\n    0,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    -1,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    1,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    2,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    0,\\n    1,\\n    0,\\n    1,\\n    1,\\n    -1,\\n    2,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    -1,\\n    1,\\n    2,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    -1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    0,\\n    1,\\n    0,\\n    1,\\n    1,\\n    -1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    0,\\n    1,\\n    1,\\n    0,\\n    1,\\n    -1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    1,\\n    -1,\\n    0,\\n    1,\\n    1,\\n    1,\\n    0,\\n    -1,\\n    1,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    3,\\n    1,\\n    1,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    3,\\n    1,\\n    0,\\n    1,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    1,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    3,\\n    1,\\n    1,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    3,\\n    1,\\n    0,\\n    1,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    0,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    3,\\n    1,\\n    1,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    1,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    0,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    3,\\n    1,\\n    0,\\n    1,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    1,\\n    0,\\n    2,\\n    0,\\n    0,\\n    2,\\n    0,\\n    2,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    0,\\n    1,\\n    2,\\n    0,\\n    0,\\n    0,\\n    2,\\n    2,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    2,\\n    1,\\n    0,\\n    0,\\n    3,\\n    1,\\n    2,\\n    0,\\n    0,\\n    4,\\n    1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    2,\\n    0,\\n    1,\\n    0,\\n    3,\\n    1,\\n    0,\\n    2,\\n    0,\\n    4,\\n    1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    0,\\n    2,\\n    1,\\n    0,\\n    3,\\n    0,\\n    1,\\n    2,\\n    0,\\n    4,\\n    1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    2,\\n    0,\\n    0,\\n    1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    2,\\n    4,\\n    1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    0,\\n    2,\\n    0,\\n    1,\\n    3,\\n    0,\\n    1,\\n    0,\\n    2,\\n    4,\\n    1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    0,\\n    0,\\n    2,\\n    1,\\n    3,\\n    0,\\n    0,\\n    1,\\n    2,\\n    4,\\n    1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    2,\\n    1,\\n    0,\\n    0,\\n    3,\\n    1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    3,\\n    3,\\n    2,\\n    0,\\n    1,\\n    0,\\n    3,\\n    1,\\n    0,\\n    2,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    3,\\n    3,\\n    0,\\n    2,\\n    1,\\n    0,\\n    3,\\n    0,\\n    1,\\n    2,\\n    0,\\n    2,\\n    1,\\n    1,\\n    1,\\n    -1,\\n    3,\\n    3,\\n    2,\\n    1,\\n    0,\\n    0,\\n    3,\\n    1,\\n    2,\\n    0,\\n    0,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    3,\\n    3,\\n    2,\\n    0,\\n    0,\\n    1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    2,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    3,\\n    3,\\n    0,\\n    2,\\n    0,\\n    1,\\n    3,\\n    0,\\n    1,\\n    0,\\n    2,\\n    2,\\n    1,\\n    1,\\n    -1,\\n    1,\\n    3,\\n    3,\\n    2,\\n    0,\\n    1,\\n    0,\\n    3,\\n    1,\\n    0,\\n    2,\\n    0,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    2,\\n    0,\\n    0,\\n    1,\\n    3,\\n    1,\\n    0,\\n    0,\\n    2,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    0,\\n    0,\\n    2,\\n    1,\\n    3,\\n    0,\\n    0,\\n    1,\\n    2,\\n    2,\\n    1,\\n    -1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    0,\\n    2,\\n    1,\\n    0,\\n    3,\\n    0,\\n    1,\\n    2,\\n    0,\\n    2,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    0,\\n    2,\\n    0,\\n    1,\\n    3,\\n    0,\\n    1,\\n    0,\\n    2,\\n    2,\\n    -1,\\n    1,\\n    1,\\n    1,\\n    3,\\n    3,\\n    0,\\n    0,\\n    2,\\n    1,\\n    3,\\n    0,\\n    0,\\n    1,\\n    2,\\n    2,\\n    -1,\\n    1,\\n    1,\\n    1\\n];\\n\\n\\n//# sourceURL=webpack:///./node_modules/open-simplex-noise/lib/constants.js?");\n\n/***/ }),\n\n/***/ "./node_modules/open-simplex-noise/lib/index.js":\n/*!******************************************************!*\\\n  !*** ./node_modules/open-simplex-noise/lib/index.js ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n"use strict";\neval("\\nObject.defineProperty(exports, \\"__esModule\\", { value: true });\\nvar constants_1 = __webpack_require__(/*! ./constants */ \\"./node_modules/open-simplex-noise/lib/constants.js\\");\\nfunction contribution2D(multiplier, xsb, ysb) {\\n    return {\\n        dx: -xsb - multiplier * constants_1.SQUISH_2D,\\n        dy: -ysb - multiplier * constants_1.SQUISH_2D,\\n        xsb: xsb,\\n        ysb: ysb\\n    };\\n}\\nfunction contribution3D(multiplier, xsb, ysb, zsb) {\\n    return {\\n        dx: -xsb - multiplier * constants_1.SQUISH_3D,\\n        dy: -ysb - multiplier * constants_1.SQUISH_3D,\\n        dz: -zsb - multiplier * constants_1.SQUISH_3D,\\n        xsb: xsb,\\n        ysb: ysb,\\n        zsb: zsb\\n    };\\n}\\nfunction contribution4D(multiplier, xsb, ysb, zsb, wsb) {\\n    return {\\n        dx: -xsb - multiplier * constants_1.SQUISH_4D,\\n        dy: -ysb - multiplier * constants_1.SQUISH_4D,\\n        dz: -zsb - multiplier * constants_1.SQUISH_4D,\\n        dw: -wsb - multiplier * constants_1.SQUISH_4D,\\n        xsb: xsb,\\n        ysb: ysb,\\n        zsb: zsb,\\n        wsb: wsb\\n    };\\n}\\nfunction makeNoise2D(clientSeed) {\\n    var contributions = [];\\n    for (var i = 0; i < constants_1.p2D.length; i += 4) {\\n        var baseSet = constants_1.base2D[constants_1.p2D[i]];\\n        var previous = null;\\n        var current = null;\\n        for (var k = 0; k < baseSet.length; k += 3) {\\n            current = contribution2D(baseSet[k], baseSet[k + 1], baseSet[k + 2]);\\n            if (previous === null)\\n                contributions[i / 4] = current;\\n            else\\n                previous.next = current;\\n            previous = current;\\n        }\\n        current.next = contribution2D(constants_1.p2D[i + 1], constants_1.p2D[i + 2], constants_1.p2D[i + 3]);\\n    }\\n    var lookup = [];\\n    for (var i = 0; i < constants_1.lookupPairs2D.length; i += 2) {\\n        lookup[constants_1.lookupPairs2D[i]] = contributions[constants_1.lookupPairs2D[i + 1]];\\n    }\\n    var perm = new Uint8Array(256);\\n    var perm2D = new Uint8Array(256);\\n    var source = new Uint8Array(256);\\n    for (var i = 0; i < 256; i++)\\n        source[i] = i;\\n    var seed = new Uint32Array(1);\\n    seed[0] = clientSeed;\\n    seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\\n    for (var i = 255; i >= 0; i--) {\\n        seed = shuffleSeed(seed);\\n        var r = new Uint32Array(1);\\n        r[0] = (seed[0] + 31) % (i + 1);\\n        if (r[0] < 0)\\n            r[0] += i + 1;\\n        perm[i] = source[r[0]];\\n        perm2D[i] = perm[i] & 0x0e;\\n        source[r[0]] = source[i];\\n    }\\n    return function (x, y) {\\n        var stretchOffset = (x + y) * constants_1.STRETCH_2D;\\n        var xs = x + stretchOffset;\\n        var ys = y + stretchOffset;\\n        var xsb = Math.floor(xs);\\n        var ysb = Math.floor(ys);\\n        var squishOffset = (xsb + ysb) * constants_1.SQUISH_2D;\\n        var dx0 = x - (xsb + squishOffset);\\n        var dy0 = y - (ysb + squishOffset);\\n        var xins = xs - xsb;\\n        var yins = ys - ysb;\\n        var inSum = xins + yins;\\n        var hash = (xins - yins + 1) |\\n            (inSum << 1) |\\n            ((inSum + yins) << 2) |\\n            ((inSum + xins) << 4);\\n        var value = 0;\\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\\n            var dx = dx0 + c.dx;\\n            var dy = dy0 + c.dy;\\n            var attn = 2 - dx * dx - dy * dy;\\n            if (attn > 0) {\\n                var px = xsb + c.xsb;\\n                var py = ysb + c.ysb;\\n                var indexPartA = perm[px & 0xff];\\n                var index = perm2D[(indexPartA + py) & 0xff];\\n                var valuePart = constants_1.gradients2D[index] * dx + constants_1.gradients2D[index + 1] * dy;\\n                value += attn * attn * attn * attn * valuePart;\\n            }\\n        }\\n        return value * constants_1.NORM_2D;\\n    };\\n}\\nexports.makeNoise2D = makeNoise2D;\\nfunction makeNoise3D(clientSeed) {\\n    var contributions = [];\\n    for (var i = 0; i < constants_1.p3D.length; i += 9) {\\n        var baseSet = constants_1.base3D[constants_1.p3D[i]];\\n        var previous = null;\\n        var current = null;\\n        for (var k = 0; k < baseSet.length; k += 4) {\\n            current = contribution3D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3]);\\n            if (previous === null)\\n                contributions[i / 9] = current;\\n            else\\n                previous.next = current;\\n            previous = current;\\n        }\\n        current.next = contribution3D(constants_1.p3D[i + 1], constants_1.p3D[i + 2], constants_1.p3D[i + 3], constants_1.p3D[i + 4]);\\n        current.next.next = contribution3D(constants_1.p3D[i + 5], constants_1.p3D[i + 6], constants_1.p3D[i + 7], constants_1.p3D[i + 8]);\\n    }\\n    var lookup = [];\\n    for (var i = 0; i < constants_1.lookupPairs3D.length; i += 2) {\\n        lookup[constants_1.lookupPairs3D[i]] = contributions[constants_1.lookupPairs3D[i + 1]];\\n    }\\n    var perm = new Uint8Array(256);\\n    var perm3D = new Uint8Array(256);\\n    var source = new Uint8Array(256);\\n    for (var i = 0; i < 256; i++)\\n        source[i] = i;\\n    var seed = new Uint32Array(1);\\n    seed[0] = clientSeed;\\n    seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\\n    for (var i = 255; i >= 0; i--) {\\n        seed = shuffleSeed(seed);\\n        var r = new Uint32Array(1);\\n        r[0] = (seed[0] + 31) % (i + 1);\\n        if (r[0] < 0)\\n            r[0] += i + 1;\\n        perm[i] = source[r[0]];\\n        perm3D[i] = (perm[i] % 24) * 3;\\n        source[r[0]] = source[i];\\n    }\\n    return function (x, y, z) {\\n        var stretchOffset = (x + y + z) * constants_1.STRETCH_3D;\\n        var xs = x + stretchOffset;\\n        var ys = y + stretchOffset;\\n        var zs = z + stretchOffset;\\n        var xsb = Math.floor(xs);\\n        var ysb = Math.floor(ys);\\n        var zsb = Math.floor(zs);\\n        var squishOffset = (xsb + ysb + zsb) * constants_1.SQUISH_3D;\\n        var dx0 = x - (xsb + squishOffset);\\n        var dy0 = y - (ysb + squishOffset);\\n        var dz0 = z - (zsb + squishOffset);\\n        var xins = xs - xsb;\\n        var yins = ys - ysb;\\n        var zins = zs - zsb;\\n        var inSum = xins + yins + zins;\\n        var hash = (yins - zins + 1) |\\n            ((xins - yins + 1) << 1) |\\n            ((xins - zins + 1) << 2) |\\n            (inSum << 3) |\\n            ((inSum + zins) << 5) |\\n            ((inSum + yins) << 7) |\\n            ((inSum + xins) << 9);\\n        var value = 0;\\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\\n            var dx = dx0 + c.dx;\\n            var dy = dy0 + c.dy;\\n            var dz = dz0 + c.dz;\\n            var attn = 2 - dx * dx - dy * dy - dz * dz;\\n            if (attn > 0) {\\n                var px = xsb + c.xsb;\\n                var py = ysb + c.ysb;\\n                var pz = zsb + c.zsb;\\n                var indexPartA = perm[px & 0xff];\\n                var indexPartB = perm[(indexPartA + py) & 0xff];\\n                var index = perm3D[(indexPartB + pz) & 0xff];\\n                var valuePart = constants_1.gradients3D[index] * dx +\\n                    constants_1.gradients3D[index + 1] * dy +\\n                    constants_1.gradients3D[index + 2] * dz;\\n                value += attn * attn * attn * attn * valuePart;\\n            }\\n        }\\n        return value * constants_1.NORM_3D;\\n    };\\n}\\nexports.makeNoise3D = makeNoise3D;\\nfunction makeNoise4D(clientSeed) {\\n    var contributions = [];\\n    for (var i = 0; i < constants_1.p4D.length; i += 16) {\\n        var baseSet = constants_1.base4D[constants_1.p4D[i]];\\n        var previous = null;\\n        var current = null;\\n        for (var k = 0; k < baseSet.length; k += 5) {\\n            current = contribution4D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3], baseSet[k + 4]);\\n            if (previous === null)\\n                contributions[i / 16] = current;\\n            else\\n                previous.next = current;\\n            previous = current;\\n        }\\n        current.next = contribution4D(constants_1.p4D[i + 1], constants_1.p4D[i + 2], constants_1.p4D[i + 3], constants_1.p4D[i + 4], constants_1.p4D[i + 5]);\\n        current.next.next = contribution4D(constants_1.p4D[i + 6], constants_1.p4D[i + 7], constants_1.p4D[i + 8], constants_1.p4D[i + 9], constants_1.p4D[i + 10]);\\n        current.next.next.next = contribution4D(constants_1.p4D[i + 11], constants_1.p4D[i + 12], constants_1.p4D[i + 13], constants_1.p4D[i + 14], constants_1.p4D[i + 15]);\\n    }\\n    var lookup = [];\\n    for (var i = 0; i < constants_1.lookupPairs4D.length; i += 2) {\\n        lookup[constants_1.lookupPairs4D[i]] = contributions[constants_1.lookupPairs4D[i + 1]];\\n    }\\n    var perm = new Uint8Array(256);\\n    var perm4D = new Uint8Array(256);\\n    var source = new Uint8Array(256);\\n    for (var i = 0; i < 256; i++)\\n        source[i] = i;\\n    var seed = new Uint32Array(1);\\n    seed[0] = clientSeed;\\n    seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\\n    for (var i = 255; i >= 0; i--) {\\n        seed = shuffleSeed(seed);\\n        var r = new Uint32Array(1);\\n        r[0] = (seed[0] + 31) % (i + 1);\\n        if (r[0] < 0)\\n            r[0] += i + 1;\\n        perm[i] = source[r[0]];\\n        perm4D[i] = perm[i] & 0xfc;\\n        source[r[0]] = source[i];\\n    }\\n    return function (x, y, z, w) {\\n        var stretchOffset = (x + y + z + w) * constants_1.STRETCH_4D;\\n        var xs = x + stretchOffset;\\n        var ys = y + stretchOffset;\\n        var zs = z + stretchOffset;\\n        var ws = w + stretchOffset;\\n        var xsb = Math.floor(xs);\\n        var ysb = Math.floor(ys);\\n        var zsb = Math.floor(zs);\\n        var wsb = Math.floor(ws);\\n        var squishOffset = (xsb + ysb + zsb + wsb) * constants_1.SQUISH_4D;\\n        var dx0 = x - (xsb + squishOffset);\\n        var dy0 = y - (ysb + squishOffset);\\n        var dz0 = z - (zsb + squishOffset);\\n        var dw0 = w - (wsb + squishOffset);\\n        var xins = xs - xsb;\\n        var yins = ys - ysb;\\n        var zins = zs - zsb;\\n        var wins = ws - wsb;\\n        var inSum = xins + yins + zins + wins;\\n        var hash = (zins - wins + 1) |\\n            ((yins - zins + 1) << 1) |\\n            ((yins - wins + 1) << 2) |\\n            ((xins - yins + 1) << 3) |\\n            ((xins - zins + 1) << 4) |\\n            ((xins - wins + 1) << 5) |\\n            (inSum << 6) |\\n            ((inSum + wins) << 8) |\\n            ((inSum + zins) << 11) |\\n            ((inSum + yins) << 14) |\\n            ((inSum + xins) << 17);\\n        var value = 0;\\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\\n            var dx = dx0 + c.dx;\\n            var dy = dy0 + c.dy;\\n            var dz = dz0 + c.dz;\\n            var dw = dw0 + c.dw;\\n            var attn = 2 - dx * dx - dy * dy - dz * dz - dw * dw;\\n            if (attn > 0) {\\n                var px = xsb + c.xsb;\\n                var py = ysb + c.ysb;\\n                var pz = zsb + c.zsb;\\n                var pw = wsb + c.wsb;\\n                var indexPartA = perm[px & 0xff];\\n                var indexPartB = perm[(indexPartA + py) & 0xff];\\n                var indexPartC = perm[(indexPartB + pz) & 0xff];\\n                var index = perm4D[(indexPartC + pw) & 0xff];\\n                var valuePart = constants_1.gradients4D[index] * dx +\\n                    constants_1.gradients4D[index + 1] * dy +\\n                    constants_1.gradients4D[index + 2] * dz +\\n                    constants_1.gradients4D[index + 3] * dw;\\n                value += attn * attn * attn * attn * valuePart;\\n            }\\n        }\\n        return value * constants_1.NORM_4D;\\n    };\\n}\\nexports.makeNoise4D = makeNoise4D;\\nfunction shuffleSeed(seed) {\\n    var newSeed = new Uint32Array(1);\\n    newSeed[0] = seed[0] * 1664525 + 1013904223;\\n    return newSeed;\\n}\\n\\n\\n//# sourceURL=webpack:///./node_modules/open-simplex-noise/lib/index.js?");\n\n/***/ }),\n\n/***/ "./src/util/polarToCartesian.js":\n/*!**************************************!*\\\n  !*** ./src/util/polarToCartesian.js ***!\n  \\**************************************/\n/*! exports provided: polarToCartesianX, polarToCartesianY, polarToCartesianEllipse, default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\neval("__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\"polarToCartesianX\\", function() { return polarToCartesianX; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\"polarToCartesianY\\", function() { return polarToCartesianY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\"polarToCartesianEllipse\\", function() { return polarToCartesianEllipse; });\\nvar polarToCartesianX = function polarToCartesianX(center, angle, distance) {\\n  return center + Math.cos(angle) * distance;\\n};\\n\\nvar polarToCartesianY = function polarToCartesianY(center, angle, distance) {\\n  return center + Math.sin(angle) * distance;\\n};\\n/**\\n *\\n * @param {number} centerX\\n * @param {number} centerY\\n * @param {number} angle\\n * @param {number} distance\\n * @param {bool} asArray\\n */\\n\\n\\nvar polarToCartesian = function polarToCartesian(centerX, centerY, angle, distance) {\\n  var asArray = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\\n  var x = polarToCartesianX(centerX, angle, distance);\\n  var y = polarToCartesianY(centerY, angle, distance);\\n  return asArray ? [x, y] : {\\n    x: x,\\n    y: y\\n  };\\n};\\n\\nvar polarToCartesianEllipse = function polarToCartesianEllipse(centerX, centerY, angle, radiusX, radiusY) {\\n  var asArray = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\\n  var x = centerX + Math.cos(angle) * radiusX;\\n  var y = centerY + Math.sin(angle) * radiusY;\\n  return asArray ? [x, y] : {\\n    x: x,\\n    y: y\\n  };\\n};\\n\\n\\n/* harmony default export */ __webpack_exports__[\\"default\\"] = (polarToCartesian);\\n\\n//# sourceURL=webpack:///./src/util/polarToCartesian.js?");\n\n/***/ })\n\n/******/ });',"Worker",void 0,t.p+"27.worker.7fa76eb1.worker.js")};new s.a((function(n){var e,t=n.getURLParams().render,r=1080/(t?1:2),a=50*(t?60:1),i=t?1:60,u=a*i,_=n.random(),c=n.shuffle([_,(_+.45)%1,(_+.55)%1]),l=new Uint8ClampedArray(r*r*4),d=new Uint8ClampedArray(r*r*4),p=0;function x(){(e=n.createGraphics(r,r)).pixelDensity(1),e.background(255),e.strokeCap(n.SQUARE),e.colorMode(n.HSL,1),e.strokeWeight(r/10),e.noFill(),e.translate(r/2,r/2),e.rotate(n.TWO_PI*p*4);for(var t=0,s=0;s<1;s+=.015)for(var a=0;a<1;a+=.1)e.stroke(c[t%3],1,n.map(a*s,0,1,.3,.8)),e.arc(0,0,2*r*s,2*r*s,(a+s)*n.TWO_PI,(a+.1+s)*n.TWO_PI),t++;e.loadPixels(),l.set(e.pixels)}var f=new o;function b(){f.postMessage({img:l,progress:p,width:n.width,height:n.height,scale:[.001,.002],radius:[5,1]})}n.setup=function(){n.pixelDensity(1),n.frameRate(i),n.createCanvas(r,r),n.colorMode(n.HSL,1),f.addEventListener("message",(function(e){var t=e.data;d.set(t),n.loop()})),x(),b()},n.draw=function(){n.background(255),p=n.frameCount%u/u,x();var e=new s.a.Image(r,r);e.loadPixels(),e.pixels.set(d),e.updatePixels(),n.image(e,0,0,n.width,n.height),n.noStroke(),n.fill(_,1,.3),n.rect(0,0,n.width,r/20),n.rect(0,n.height,n.width,-r/20),n.rect(0,0,r/20,n.height),n.rect(n.width,0,-r/20,n.height),b(),t&&n.frameCount<=u&&(n.frameCount%100==0&&console.info("".concat(n.ceil(100*p),"%")),n.save("".concat(String(n.frameCount).padStart(String(a*i).length,"0"),".png"))),n.noLoop()}}),"sketch")}},[[489,0,1]]]);
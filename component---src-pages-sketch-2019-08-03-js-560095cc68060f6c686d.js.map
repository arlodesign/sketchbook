{"version":3,"sources":["webpack:///./src/pages/sketch/2019/08/03.js","webpack:///./src/lib/polarToCartesian.js"],"names":["RENDER","process","DEV","sketch","p","HUE","random","setup","frameRate","pixelDensity","createCanvas","background","noFill","colorMode","HSB","blendMode","HARD_LIGHT","createLoop","gif","render","open","draw","_p$animLoop","animLoop","noise1D","noise2D","theta","stroke","map","TWO_PI","push","translate","apply","polarToCartesian","width","height","sin","rotate","beginShape","a","vertex","cos","endShape","CLOSE","pop","DURATION","frameCount","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description","__webpack_require__","d","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","angle","distance","Math","centerX","centerY","radiusX","radiusY","asArray","x","y"],"mappings":"iJAKMA,EAASC,GAAYC,MAAO,EAG5BC,EAAS,SAASC,GACtB,IAAMC,EAAMD,EAAEE,OAAO,IAErBF,EAAEG,MAAQ,WACRH,EAAEI,UAAU,IAERR,GACFI,EAAEK,aAAa,GAGjBL,EAAEM,aAAa,IAAK,KACpBN,EAAEO,WAAW,GACbP,EAAEQ,SACFR,EAAES,UAAUT,EAAEU,IAAK,KACnBV,EAAEW,UAAUX,EAAEY,YAEdZ,EAAEa,WAlBW,GAkBU,CACrBC,MAAKlB,GAAS,CAAEmB,QAAQ,EAAOC,MAAM,MAIzChB,EAAEiB,KAAO,WAAW,IAAAC,EACkBlB,EAAEmB,SAA9BC,EADUF,EACVE,QAASC,EADCH,EACDG,QAASC,EADRJ,EACQI,MAC1BtB,EAAEuB,OAAOvB,EAAEwB,IAAIF,EAAO,EAAGtB,EAAEyB,OAAQxB,EAAM,GAAIA,EAAM,IAAK,GAAI,IAAK,GACjED,EAAE0B,OACF1B,EAAE2B,UAAFC,MAAA5B,EACK6B,YACD7B,EAAE8B,MAAQ,EACV9B,EAAE+B,OAAS,EACXT,EACCtB,EAAE8B,MAAQ,IAAOV,EAAQpB,EAAEgC,IAAIV,IAAU,IAC1C,IAGJtB,EAAEiC,OAAOX,GACTtB,EAAEkC,aACF,IAAK,IAAIC,EAAI,EAAGA,EAAInC,EAAEyB,OAAQU,GAAK,IAAM,CACvBnC,EAAEyB,OAClBzB,EAAEoC,OAAFR,MAAA5B,EACK6B,YACD,EACA,EACAM,EACAd,EAAQrB,EAAEqC,IAAIF,GAAInC,EAAEgC,IAAIV,IAAUtB,EAAE8B,OACpC,IAIN9B,EAAEsC,SAAStC,EAAEuC,OACbvC,EAAEwC,OAED5C,GAA2B6C,OAAjBzC,EAAE0C,YAAgC1C,EAAE2C,WAIpCC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAclD,OAAQA,EAAQmD,KAAMJ,EAASK,SAAUC,YAAY,wCChErEC,EAAAC,EAAAV,EAAA,sBAAAW,IAAAF,EAAAC,EAAAV,EAAA,sBAAAY,IAAAH,EAAAC,EAAAV,EAAA,sBAAAa,IAAA,IAAMF,EAAoB,SAACG,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKxB,IAAIsB,GAASC,GAE9BJ,EAAoB,SAACE,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAK7B,IAAI2B,GAASC,GAa9BH,EAA0B,SAC9BK,EACAC,EACAJ,EACAK,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIL,EAAUD,KAAKxB,IAAIsB,GAASK,EAChCI,EAAIL,EAAUF,KAAK7B,IAAI2B,GAASM,EACtC,OAAOC,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,MAIlBvC,IAzBU,SACvBiC,EACAC,EACAJ,EACAC,EACAM,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIZ,EAAkBO,EAASH,EAAOC,GACtCQ,EAAIZ,EAAkBO,EAASJ,EAAOC,GAC5C,OAAOM,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC","file":"component---src-pages-sketch-2019-08-03-js-560095cc68060f6c686d.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst RENDER = process.env.DEV && false;\nconst DURATION = 60;\n\nconst sketch = function(p) {\n  const HUE = p.random(80);\n\n  p.setup = function() {\n    p.frameRate(30);\n\n    if (RENDER) {\n      p.pixelDensity(1);\n    }\n\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.noFill();\n    p.colorMode(p.HSB, 100);\n    p.blendMode(p.HARD_LIGHT);\n\n    p.createLoop(DURATION, {\n      gif: RENDER ? { render: false, open: true } : false,\n    });\n  };\n\n  p.draw = function() {\n    const { noise1D, noise2D, theta } = p.animLoop;\n    p.stroke(p.map(theta, 0, p.TWO_PI, HUE - 20, HUE + 20), 50, 100, 1);\n    p.push();\n    p.translate(\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        theta,\n        (p.width / 10) * (noise1D(p.sin(theta)) + 1),\n        true\n      )\n    );\n    p.rotate(theta);\n    p.beginShape();\n    for (let a = 0; a < p.TWO_PI; a += 0.01) {\n      const element = p.TWO_PI;\n      p.vertex(\n        ...polarToCartesian(\n          0,\n          0,\n          a,\n          noise2D(p.cos(a), p.sin(theta)) * p.width,\n          true\n        )\n      );\n    }\n    p.endShape(p.CLOSE);\n    p.pop();\n\n    !RENDER && p.frameCount === DURATION * 30 && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
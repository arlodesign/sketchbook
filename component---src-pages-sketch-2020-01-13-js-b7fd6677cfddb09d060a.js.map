{"version":3,"sources":["webpack:///./src/pages/sketch/2020/01/13.js"],"names":["sketch","w","h","p","RENDER","getURLParams","render","MULTIPLIERS","shuffle","setup","pixelDensity","frameRate","min","windowWidth","floor","windowHeight","createCanvas","createLoop","gif","open","strokeWeight","noSmooth","strokeCap","SQUARE","draw","blendMode","BLEND","background","MULTIPLY","y","height","WEIGHT","a","map","animLoop","theta","TWO_PI","stroke","line","sin","width","cos","location","path","pathname","description"],"mappings":"+FAAA,gGAIMA,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IAAMC,EAASD,EAAEE,eAAeC,OAG1BC,EAAcJ,EAAEK,QAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAG9CL,EAAEM,MAAQ,WACRN,EAAEO,aAAa,GACfP,EAAEQ,UANS,IAQXV,EAAIA,GAAKE,EAAES,IAAIT,EAAEU,YAAa,MAC9BX,EAAIA,GAAKC,EAAEW,MAAMb,GAAKE,EAAEY,aAAeZ,EAAEU,cAEzCV,EAAEa,aAAaf,EAAGC,GAClBC,EAAEc,WAba,GAaQ,CACrBC,MAAKd,GAAS,CAAEE,QAAQ,EAAOa,MAAM,KAEvChB,EAAEiB,aAbW,GAcbjB,EAAEkB,WACFlB,EAAEmB,UAAUnB,EAAEoB,SAGhBpB,EAAEqB,KAAO,WACPrB,EAAEsB,UAAUtB,EAAEuB,OACdvB,EAAEwB,WAAW,KACbxB,EAAEsB,UAAUtB,EAAEyB,UAEd,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAE2B,OAAQD,GAAKE,EAAY,CAC7C,IAAMC,EAAI7B,EAAE8B,IACVJ,EACA,EACA1B,EAAE2B,OACF3B,EAAE+B,SAASC,MACXhC,EAAE+B,SAASC,MAAQhC,EAAEiC,QAGvBjC,EAAEkC,OAAO,QACTlC,EAAEmC,KACAnC,EAAE8B,IAAI9B,EAAEoC,IAAIP,EAAIzB,EAAY,KAAM,EAAG,EAAG,EAAGJ,EAAEqC,OAC7CX,EACA1B,EAAE8B,IAAI9B,EAAEsC,IAAIT,EAAIzB,EAAY,KAAM,EAAG,EAAG,EAAGJ,EAAEqC,OAC7CX,GAGF1B,EAAEkC,OAAO,WACTlC,EAAEmC,KACAnC,EAAE8B,IAAI9B,EAAEoC,IAAIP,EAAIzB,EAAY,KAAM,EAAG,EAAG,EAAGJ,EAAEqC,OAC7CX,EAAIE,EACJ5B,EAAE8B,IAAI9B,EAAEsC,IAAIT,EAAIzB,EAAY,KAAM,EAAG,EAAG,EAAGJ,EAAEqC,OAC7CX,EAAIE,GAEN5B,EAAEkC,OAAO,UACTlC,EAAEmC,KACAnC,EAAE8B,IAAI9B,EAAEoC,IAAIP,EAAIzB,EAAY,KAAM,EAAG,EAAG,EAAGJ,EAAEqC,OAC7CX,EAlDS,EAmDT1B,EAAE8B,IAAI9B,EAAEsC,IAAIT,EAAIzB,EAAY,KAAM,EAAG,EAAG,EAAGJ,EAAEqC,OAC7CX,EApDS,OA0DJ,0BAAGa,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE1C,OAAQA,EAAO,IAAK,KACpB2C,KAAMD,EAASE,SACfC,YAAY","file":"component---src-pages-sketch-2020-01-13-js-b7fd6677cfddb09d060a.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst sketch = (w, h) =>\n  function(p) {\n    const RENDER = p.getURLParams().render;\n    const DURATION = 49;\n    const RATE = 30;\n    const MULTIPLIERS = p.shuffle([1, 2, 3, 5, 7, 11]);\n    const WEIGHT = 2;\n\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(RATE);\n\n      w = w || p.min(p.windowWidth, 1280);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n      p.createLoop(DURATION, {\n        gif: RENDER ? { render: false, open: true } : false,\n      });\n      p.strokeWeight(WEIGHT);\n      p.noSmooth();\n      p.strokeCap(p.SQUARE);\n    };\n\n    p.draw = function() {\n      p.blendMode(p.BLEND);\n      p.background(255);\n      p.blendMode(p.MULTIPLY);\n\n      for (let y = 0; y < p.height; y += WEIGHT * 2) {\n        const a = p.map(\n          y,\n          0,\n          p.height,\n          p.animLoop.theta,\n          p.animLoop.theta + p.TWO_PI\n        );\n\n        p.stroke(\"cyan\");\n        p.line(\n          p.map(p.sin(a * MULTIPLIERS[0]), -1, 1, 0, p.width),\n          y,\n          p.map(p.cos(a * MULTIPLIERS[1]), -1, 1, 0, p.width),\n          y\n        );\n\n        p.stroke(\"magenta\");\n        p.line(\n          p.map(p.sin(a * MULTIPLIERS[2]), -1, 1, 0, p.width),\n          y + WEIGHT / 2,\n          p.map(p.cos(a * MULTIPLIERS[3]), -1, 1, 0, p.width),\n          y + WEIGHT / 2\n        );\n        p.stroke(\"yellow\");\n        p.line(\n          p.map(p.sin(a * MULTIPLIERS[4]), -1, 1, 0, p.width),\n          y + WEIGHT,\n          p.map(p.cos(a * MULTIPLIERS[5]), -1, 1, 0, p.width),\n          y + WEIGHT\n        );\n      }\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 840)}\n    path={location.pathname}\n    description=\"\"\n  />\n);\n\nexport { sketch };\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/12/27.js"],"names":["sketch","p","img","RENDER","getURLParams","render","luma","r","g","b","preload","loadImage","withPrefix","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","open","noiseRadius","draw","background","image","width","height","loadPixels","y","step","floor","abs","animLoop","noise2D","sin","theta","start","row","x","Math","min","push","get","sort","a","forEach","c","i","set","color","updatePixels","location","path","pathname","description"],"mappings":"49BAKA,IAAMA,EAAS,SAASC,GACtB,IAEIC,EAFEC,EAASF,EAAEG,eAAeC,OAC1BC,EAAO,SAACC,EAAGC,EAAGC,GAAP,MAAiB,MAAJF,EAAiB,MAAJC,EAAiB,MAAJC,GAGpDR,EAAES,QAAU,WACVR,EAAMD,EAAEU,UAAUC,qBAAW,uBAG/BX,EAAEY,MAAQ,WACRZ,EAAEa,aAAa,GACfb,EAAEc,UAAU,IACZd,EAAEe,aAAa,IAAK,KACpBf,EAAEgB,WAAW,GAAI,CACfC,MAAKf,GAAS,CAAEE,QAAQ,EAAOc,MAAM,GACrCC,YAAa,KAIjBnB,EAAEoB,KAAO,WACPpB,EAAEqB,WAAW,KAEbrB,EAAEsB,MAAMrB,EAAK,EAAG,EAAGD,EAAEuB,MAAOvB,EAAEwB,QAC9BxB,EAAEyB,aAEF,IANkB,eAMTC,GAOP,IANA,IAAIC,EACF3B,EAAE4B,MACA5B,EAAE6B,IAAI7B,EAAE8B,SAASC,QAAQ,EAAGL,EAAI,KAAO1B,EAAEgC,IAAIhC,EAAE8B,SAASG,QACtDjC,EAAEuB,OACF,EAXU,WAaPW,GAEP,IADA,IAAIC,EAAM,GACDC,EAAIF,EAAOE,EAAIC,KAAKC,IAAIJ,EAAQP,EAAM3B,EAAEuB,OAAQa,IACvDD,EAAII,KAAKvC,EAAEwC,IAAIJ,EAAGV,IAEpBS,EACGM,MAAK,SAACC,EAAGlC,GAAJ,OAAUH,EAAI,WAAJ,IAAQqC,IAAKrC,EAAI,WAAJ,IAAQG,OACpCmC,SAAQ,SAACC,EAAGC,GACX7C,EAAE8C,IAAID,EAAIX,EAAOR,EAAG1B,EAAE+C,MAAF,MAAA/C,EAAC,EAAU4C,SAR5BV,EAAQ,EAAGA,EAAQlC,EAAEuB,MAAOW,GAASP,EAAO,EAA5CO,IAPFR,EAAI,EAAGA,EAAI1B,EAAEwB,OAAQE,IAAM,EAA3BA,GAmBT1B,EAAEgD,iBAIS,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAclD,OAAQA,EAAQmD,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-12-27-js-bb4062255c27b121bd9e.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport { withPrefix } from \"gatsby\";\nimport \"p5.createloop\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const luma = (r, g, b) => r * 0.2126 + g * 0.7152 + b * 0.0722;\n  let img;\n\n  p.preload = function() {\n    img = p.loadImage(withPrefix(\"/assets/susan.png\"));\n  };\n\n  p.setup = function() {\n    p.pixelDensity(1);\n    p.frameRate(30);\n    p.createCanvas(660, 840);\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 2,\n    });\n  };\n\n  p.draw = function() {\n    p.background(255);\n\n    p.image(img, 0, 0, p.width, p.height);\n    p.loadPixels();\n\n    for (let y = 0; y < p.height; y++) {\n      let step =\n        p.floor(\n          p.abs(p.animLoop.noise2D(1, y / 100) * p.sin(p.animLoop.theta)) *\n            p.width\n        ) + 1;\n\n      for (let start = 0; start < p.width; start += step) {\n        let row = [];\n        for (let x = start; x < Math.min(start + step, p.width); x++) {\n          row.push(p.get(x, y));\n        }\n        row\n          .sort((a, b) => luma(...a) - luma(...b))\n          .forEach((c, i) => {\n            p.set(i + start, y, p.color(...c));\n          });\n      }\n    }\n    p.updatePixels();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/08/31.js"],"names":["RENDER","process","DEV","sketch","p","HUE","random","particles","Particle","x","this","startX","startY","height","y","move","noise2D","animLoop","prev","display","stroke","map","width","sin","line","setup","pixelDensity","frameRate","createCanvas","background","colorMode","HSB","strokeWeight","createLoop","gif","render","open","noiseRadius","push","draw","forEach","particle","SketchPage"],"mappings":"6FAAA,wDAKMA,GALN,UAKeC,GAAYC,MAAO,GAE5BC,EAAS,SAASC,GACtB,IACMC,EAAMD,EAAEE,OAAO,IAEjBC,EAAY,GAEVC,EANmB,WAOvB,WAAYC,GACVC,KAAKC,OAASF,EACdC,KAAKE,OAASR,EAAES,OAAS,EACzBH,KAAKD,EAAIC,KAAKC,OACdD,KAAKI,EAAIJ,KAAKE,OACdF,KAAKK,OAZgB,2BAevBA,KAAA,WAAQ,IACEC,EAAYZ,EAAEa,SAAdD,QACRN,KAAKQ,KAAO,CAAET,EAAGC,KAAKD,EAAGK,EAAGJ,KAAKI,GACjCJ,KAAKD,EACHC,KAAKC,OACLK,EAAQN,KAAKC,OAAS,IAAKD,KAAKE,OAAS,MAAQR,EAAES,OAAS,GAC9DH,KAAKI,EACHJ,KAAKE,OACLI,EAAQN,KAAKE,OAAS,IAAKF,KAAKC,OAAS,MAAQP,EAAES,OAAS,IAvBzC,EA0BvBM,QAAA,WACEf,EAAEgB,OACAhB,EAAEiB,IAAIX,KAAKD,EAAG,EAAGL,EAAEkB,MAAOjB,EAAKA,EAAM,IACrC,IACAD,EAAEiB,IAAIjB,EAAEmB,IAAIb,KAAKI,EAAI,KAAM,EAAG,EAAG,GAAI,MAEvCV,EAAEoB,KAAKd,KAAKQ,KAAKT,EAAGC,KAAKQ,KAAKJ,EAAGJ,KAAKD,EAAGC,KAAKI,IAhCzB,KAoCzBV,EAAEqB,MAAQ,WACJzB,IACFI,EAAEsB,aAAa,GACftB,EAAEuB,UAAU,KAGdvB,EAAEwB,aAAa,IAAK,KACpBxB,EAAEyB,WAAW,GACbzB,EAAE0B,UAAU1B,EAAE2B,IAAK,KACnB3B,EAAE4B,aA5CS,GA6CX5B,EAAE6B,WAAW,GAAI,CACfC,MAAKlC,GAAS,CAAEmC,QAAQ,EAAOC,MAAM,GACrCC,YAAa,KAGf,IAAK,IAAI5B,EAAI,EAAGA,EAAIL,EAAEkB,MAAOb,GAAKL,EAAEkB,MAAQ,GAC1Cf,EAAU+B,KAAK,IAAI9B,EAASC,KAIhCL,EAAEmC,KAAO,WACPhC,EAAUiC,SAAQ,SAAAC,GAChBA,EAAS1B,OACT0B,EAAStB,eAWAuB,UANI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQvC,OAAQA","file":"component---src-pages-sketch-2019-08-31-js-2604ba820660c1c4f87f.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const SIZE = 3;\n  const HUE = p.random(80);\n\n  let particles = [];\n\n  class Particle {\n    constructor(x) {\n      this.startX = x;\n      this.startY = p.height / 2;\n      this.x = this.startX;\n      this.y = this.startY;\n      this.move();\n    }\n\n    move() {\n      const { noise2D } = p.animLoop;\n      this.prev = { x: this.x, y: this.y };\n      this.x =\n        this.startX +\n        noise2D(this.startX / 100, this.startY / 200) * (p.height / 2);\n      this.y =\n        this.startY +\n        noise2D(this.startY / 100, this.startX / 200) * (p.height / 2);\n    }\n\n    display() {\n      p.stroke(\n        p.map(this.x, 0, p.width, HUE, HUE + 20),\n        100,\n        p.map(p.sin(this.y / 20), -1, 1, 50, 100)\n      );\n      p.line(this.prev.x, this.prev.y, this.x, this.y);\n    }\n  }\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.colorMode(p.HSB, 100);\n    p.strokeWeight(SIZE);\n    p.createLoop(60, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.5,\n    });\n\n    for (let x = 0; x < p.width; x += p.width / 10) {\n      particles.push(new Particle(x));\n    }\n  };\n\n  p.draw = function() {\n    particles.forEach(particle => {\n      particle.move();\n      particle.display();\n    });\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n  </Layout>\n);\n\nexport default SketchPage;\n"],"sourceRoot":""}
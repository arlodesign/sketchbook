{"version":3,"sources":["webpack:///./src/lib/lerpLine.js","webpack:///./src/pages/sketch/2019/05/01.js"],"names":["p","x1","y1","x2","y2","rate","showFirstDot","noisy","thisRate","Math","max","dist","l","random","point","lerp","sketch","y","setup","createCanvas","stroke","background","draw","lerpLine","width","noise","frameCount","height","noLoop","location","path","pathname","description"],"mappings":"+FAYe,aACbA,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QACA,IAFAD,OAAe,QAEf,IADAC,OAAQ,GAIR,IAFA,IAAMC,EAAWC,KAAKC,IAAIL,EAAM,IAAOL,EAAEW,KAAKV,EAAIC,EAAIC,EAAIC,IAEjDQ,EAAI,EAAGA,EAAI,EAAGA,GAAKJ,GAChB,IAANI,GAAYN,KACXC,GAASP,EAAEa,SAAWD,IAAOL,IAChCP,EAAEc,MAAMd,EAAEe,KAAKd,EAAIE,EAAIS,GAAIZ,EAAEe,KAAKb,EAAIE,EAAIQ,M,kCC3BhD,yDAIMI,EAAS,SAAShB,GACtB,IAEIiB,EAFW,IAIfjB,EAAEkB,MAAQ,WACRlB,EAAEmB,aAAa,IAAK,KACpBnB,EAAEoB,OAAO,GACTpB,EAAEqB,WAAW,MAGfrB,EAAEsB,KAAO,WACPC,YACEvB,EAZW,IAcXiB,EACAjB,EAAEwB,MAfS,IAgBXP,EACAjB,EAAEyB,MAAMzB,EAAE0B,WAAYT,IAAM,EAAIA,MAElCA,EACIjB,EAAE2B,OApBO,KAoBY3B,EAAE4B,WAIhB,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcb,OAAQA,EAAQc,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-05-01-js-2d05c259d6858c3e6973.js","sourcesContent":["/**\n * Creates a line of points at a specified interval (the rate)\n *\n * @param {obj} p The current p5.js drawing context\n * @param {*} x1\n * @param {*} y1\n * @param {*} x2\n * @param {*} y2\n * @param {*} rate Number between 0 and 1 to determine how often to draw a point\n * @param {*} showFirstDot Defaults to true\n * @param {*} noisy Defaults to true\n */\nexport default function(\n  p,\n  x1,\n  y1,\n  x2,\n  y2,\n  rate,\n  showFirstDot = true,\n  noisy = true\n) {\n  const thisRate = Math.max(rate, 0.01 / p.dist(x1, y1, x2, y2));\n\n  for (let l = 0; l < 1; l += thisRate) {\n    if (l === 0 && !showFirstDot) continue;\n    if ((noisy && p.random() > l) || !noisy) {\n      p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n    }\n  }\n}\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const MARGIN = 100;\n\n  let y = MARGIN;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.stroke(0);\n    p.background(255);\n  };\n\n  p.draw = function() {\n    lerpLine(\n      p,\n      MARGIN,\n      y,\n      p.width - MARGIN,\n      y,\n      p.noise(p.frameCount, y) / (4 * y)\n    );\n    y++;\n    y > p.height - MARGIN && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
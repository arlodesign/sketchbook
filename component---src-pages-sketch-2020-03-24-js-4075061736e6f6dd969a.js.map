{"version":3,"sources":["webpack:///./src/pages/sketch/2020/03/24.js","webpack:///./src/lib/lerpLine.js","webpack:///./src/lib/easing.js"],"names":["sketch","p","RENDER","getURLParams","render","HUE","random","attractors","particles","alpha","Attractor","dir","this","x","randomGaussian","width","y","constrain","height","start","TWO_PI","createVector","Particle","sat","pos","vel","p5","Vector","random2D","acc","prev","update","add","show","closestAttractorDist","closestAttractor","forEach","attractor","thisDist","dist","stroke","animLoop","noise1D","map","lerpLine","noise","line","attracted","target","force","sub","mult","dsquared","magSq","strength","min","G","setMag","setup","pixelDensity","frameRate","createCanvas","colorMode","HSB","background","blendMode","OVERLAY","createLoop","gif","open","noiseRadius","strokeWeight","Array","fill","_","i","draw","progress","easedProgress","ease","particle","frameCount","console","info","floor","DURATION","noLoop","location","path","pathname","description","x1","y1","x2","y2","rate","showFirstDot","noisy","thisRate","Math","max","l","point","lerp","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"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","file":"component---src-pages-sketch-2020-03-24-js-4075061736e6f6dd969a.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport { easeOutQuint as ease } from \"~lib/easing\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const DURATION = 60;\n  const RATE = 60;\n  const G = 100;\n  const HUE = p.random(0.2, 0.8);\n\n  let attractors = [];\n  let particles = [];\n  let alpha = 0;\n\n  class Attractor {\n    constructor(dir) {\n      this.x = p.randomGaussian(p.width / 2, p.width / 10);\n      this.y = p.constrain(\n        p.random(p.height / 2, p.height / 3),\n        p.height * 0.333,\n        p.height * 0.666\n      );\n      this.dir = dir;\n      this.start = p.random(p.TWO_PI);\n    }\n    get pos() {\n      return p.createVector(this.x, this.y);\n    }\n  }\n\n  class Particle {\n    constructor(sat) {\n      this.pos = p.createVector(\n        p.randomGaussian(p.width / 2, p.width / 3),\n        p.randomGaussian(p.height / 2, p.width / 3)\n      );\n      this.vel = p5.Vector.random2D();\n      this.acc = p.createVector();\n      this.prev = null;\n      this.sat = sat;\n    }\n    update() {\n      this.pos.add(this.vel);\n      this.vel.add(this.acc);\n    }\n    show() {\n      if (this.prev) {\n        let closestAttractorDist = 1000000;\n        let closestAttractor = null;\n        attractors.forEach(attractor => {\n          const thisDist = p.dist(\n            attractor.pos.x,\n            attractor.pos.y,\n            this.pos.x,\n            this.pos.y\n          );\n          if (thisDist < closestAttractorDist) {\n            closestAttractorDist = thisDist;\n            closestAttractor = attractor;\n          }\n        });\n        p.stroke(\n          HUE + p.animLoop.noise1D(this.sat) * 0.2,\n          this.sat,\n          p.map(closestAttractorDist, 0, p.width / 2, 1, 0, true),\n          alpha\n        );\n        lerpLine(\n          p,\n          this.pos.x,\n          this.pos.y,\n          closestAttractor.pos.x,\n          closestAttractor.pos.y,\n          (p.animLoop.noise() + 1) / 4,\n          false,\n          false\n        );\n        p.line(this.pos.x, this.pos.y, this.prev.x, this.prev.y);\n      }\n      this.prev = { x: this.pos.x, y: this.pos.y };\n    }\n    attracted(target) {\n      let force = p5.Vector.sub(target.pos, this.pos);\n      force.mult(target.dir);\n      let dsquared = force.magSq();\n      dsquared = p.min(dsquared, G * 20);\n      const strength = G / dsquared;\n      force.setMag(strength);\n      this.acc = force;\n    }\n  }\n\n  p.setup = function() {\n    p.pixelDensity(RENDER ? 1 : 2);\n    p.frameRate(RATE);\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 1);\n    p.background(1 - HUE, 0.2, 0.8);\n    p.blendMode(p.OVERLAY);\n    p.createLoop(DURATION, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n    p.strokeWeight(2);\n\n    attractors = Array(10)\n      .fill()\n      .map((_, i) => new Attractor(i % 4 ? 1 : -1));\n    particles = Array(3)\n      .fill()\n      .map((_, i) => new Particle((i + 1) / 3));\n  };\n\n  p.draw = function() {\n    const { progress } = p.animLoop;\n    const easedProgress = ease(progress);\n    alpha = -4 * easedProgress * easedProgress + 4 * easedProgress;\n\n    particles.forEach(particle => {\n      attractors.forEach(attractor => {\n        particle.attracted(attractor);\n      });\n      particle.update();\n      particle.show();\n    });\n\n    p.frameCount % 100 === 0 && console.info(`${p.floor(progress * 100)}%`);\n    if (!RENDER && p.frameCount === DURATION * RATE) {\n      console.info(\"100%\");\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","/**\n * Creates a line of points at a specified interval (the rate)\n *\n * @param {obj} p The current p5.js drawing context\n * @param {*} x1\n * @param {*} y1\n * @param {*} x2\n * @param {*} y2\n * @param {*} rate Number between 0 and 1 to determine how often to draw a point\n * @param {*} showFirstDot Defaults to true\n * @param {*} noisy Defaults to true\n */\nexport default function(\n  p,\n  x1,\n  y1,\n  x2,\n  y2,\n  rate,\n  showFirstDot = true,\n  noisy = true\n) {\n  const thisRate = Math.max(rate, 0.01 / p.dist(x1, y1, x2, y2));\n\n  for (let l = 0; l < 1; l += thisRate) {\n    if (l === 0 && !showFirstDot) continue;\n    if ((noisy && p.random() > l) || !noisy) {\n      p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n    }\n  }\n}\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n"],"sourceRoot":""}
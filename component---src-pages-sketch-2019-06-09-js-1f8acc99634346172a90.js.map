{"version":3,"sources":["webpack:///./src/pages/sketch/2019/06/09.js","webpack:///./src/lib/shuffle.js"],"names":["sketch","p","HUE","random","WIDTH","RULES","111","110","101","100","011","010","001","000","GRID_SIZE","ROTATIONS","shuffle","HALF_PI","PI","cellCount","row","Row","this","cells","Array","from","length","floor","_proto","prototype","draw","y","_this","forEach","c","i","console","log","fill","color","push","translate","rotate","triangle","pop","update","_this2","newState","str","String","setup","createCanvas","colorMode","HSL","background","noStroke","frameCount","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_5__","path","pathname","description","a","j","Math","__webpack_require__","d"],"mappings":"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","file":"component---src-pages-sketch-2019-06-09-js-1f8acc99634346172a90.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport shuffle from \"~lib/shuffle\";\n\nconst sketch = function(p) {\n  const HUE = p.random(100);\n  const WIDTH = 660;\n  const HEIGHT = 840;\n  const RULES = {\n    \"111\": p.random([0, 1]),\n    \"110\": p.random([0, 1]),\n    \"101\": p.random([0, 1]),\n    \"100\": p.random([0, 1]),\n    \"011\": p.random([0, 1]),\n    \"010\": p.random([0, 1]),\n    \"001\": p.random([0, 1]),\n    \"000\": p.random([0, 1]),\n  };\n  const GRID_SIZE = 10;\n  const ROTATIONS = shuffle([0, p.HALF_PI, p.PI, p.HALF_PI + p.PI]);\n\n  let cellCount = 0;\n\n  class Row {\n    constructor() {\n      this.cells = Array.from({ length: WIDTH / GRID_SIZE }, () => 0);\n      this.cells[0] = 1;\n      this.cells[this.cells.length - 1] = 1;\n      this.cells[p.floor(this.cells.length / 3)] = 1;\n      this.cells[p.floor(this.cells.length * (2 / 3))] = 1;\n    }\n    draw(y) {\n      this.cells.forEach((c, i) => {\n        console.log(c, i * GRID_SIZE, this.y);\n        p.fill(c ? p.color(HUE, 100, 50) : p.color(HUE, 100, 25));\n        p.push();\n        p.translate(\n          i * GRID_SIZE + GRID_SIZE / 2,\n          y * GRID_SIZE + GRID_SIZE / 2\n        );\n        p.rotate(ROTATIONS[cellCount % 4]);\n        p.triangle(\n          -GRID_SIZE / 2,\n          -GRID_SIZE / 2,\n          GRID_SIZE / 2,\n          GRID_SIZE / 2,\n          -GRID_SIZE / 2,\n          GRID_SIZE / 2\n        );\n        p.pop();\n        cellCount++;\n      });\n    }\n    update() {\n      let newState = [];\n      this.cells.forEach((c, i) => {\n        let str = i === 0 ? \"0\" : String(this.cells[i - 1]);\n        str += String(this.cells[i]);\n        str += i === this.cells.length - 1 ? \"0\" : String(this.cells[i + 1]);\n        newState.push(RULES[str]);\n      });\n      this.cells = newState;\n    }\n  }\n\n  const row = new Row();\n\n  p.setup = function() {\n    p.createCanvas(WIDTH, HEIGHT);\n    p.colorMode(p.HSL, 75);\n    p.background(HUE, 100, 33);\n    p.noStroke();\n  };\n\n  p.draw = function() {\n    row.draw(p.frameCount - 1);\n    row.update();\n    p.frameCount * GRID_SIZE > HEIGHT && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Continuing to explore randomly generated cellular automata.\"\n  />\n);\n","export default function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/06/01.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/lib/lerpLine.js","webpack:///./src/lib/shuffle.js"],"names":["sketch","p","bg","margin","HUE","random","divisors","shuffle","map","d","alpha","setup","createCanvas","colorMode","HSB","color","background","noFill","floor","width","draw","marginX","sin","frameCount","midLerpVal","leftY","cos","height","rightY","midX","lerp","midY","leftLerpLineVal","dist","rightLerpLineVal","stroke","lerpLine","push","noStroke","fill","rect","noLoop","text","pop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","x1","y1","x2","y2","rate","showFirstDot","Error","l","point","a","i","j","Math"],"mappings":"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","file":"component---src-pages-sketch-2019-06-01-js-4cb08e9e0c6ca5b11dbd.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport shuffle from \"~lib/shuffle\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const HUE = p.random(100);\n  const FRAME_COUNTDOWN = 10000;\n\n  let divisors = shuffle([2, 3, 5, 8, 13, 21, 34].map(d => d * 25));\n  let alpha = 20;\n  let bg;\n  let margin;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 100);\n    bg = p.color(100 - HUE, 10, 15);\n    p.background(bg);\n    p.noFill();\n    margin = p.floor(p.width * 0.15);\n  };\n\n  p.draw = function() {\n    const marginX = p.map(\n      p.sin(p.frameCount / divisors[0]),\n      -1,\n      1,\n      margin,\n      margin * 0.05\n    );\n    const midLerpVal = p.map(\n      p.sin(p.frameCount / divisors[1]),\n      -1,\n      1,\n      0.3,\n      0.7\n    );\n    const leftY = p.map(\n      p.cos(p.frameCount / divisors[2]),\n      -1,\n      1,\n      p.height - margin,\n      margin\n    );\n    const rightY = p.map(\n      p.cos(p.frameCount / divisors[3]),\n      -1,\n      1,\n      margin,\n      p.height - margin\n    );\n    const midX = p.lerp(marginX, p.width - marginX, midLerpVal);\n    const midY = p.lerp(leftY, rightY, midLerpVal);\n    const leftLerpLineVal =\n      p.map(p.cos(p.frameCount / divisors[4]), -1, 1, 1.5, 2) /\n      p.dist(midX, midY, marginX, leftY);\n    const rightLerpLineVal =\n      p.map(p.cos(p.frameCount / divisors[4]), -1, 1, 1.5, 2) /\n      p.dist(midX, midY, p.width - marginX, rightY);\n\n    p.stroke(\n      HUE,\n      p.map(p.cos(p.frameCount / divisors[5]), -1, 1, 40, 80),\n      p.map(p.cos(p.frameCount / divisors[6]), -1, 1, 0, 100),\n      alpha\n    );\n    lerpLine(p, midX, midY, marginX, leftY, leftLerpLineVal);\n    lerpLine(p, midX, midY, p.width - marginX, rightY, rightLerpLineVal, false);\n\n    p.push();\n    p.noStroke();\n    p.fill(bg);\n    p.rect(0, 0, p.width, margin);\n    if (p.frameCount > FRAME_COUNTDOWN) {\n      alpha -= 0.01;\n      alpha < 0 && p.noLoop();\n    } else {\n      p.fill(0, 0, 100);\n      p.text(FRAME_COUNTDOWN - p.frameCount, 10, 20);\n    }\n    p.pop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different variation.\"\n  />\n);\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","export default function(p, x1, y1, x2, y2, rate, showFirstDot = true) {\n  if (rate <= 0)\n    throw new Error(\"rate for lerpLine() must be greater than zero\");\n\n  for (let l = 0; l < 1; l += rate) {\n    if (l === 0 && !showFirstDot) continue;\n    p.random() > l && p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n  }\n}\n","export default function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n"],"sourceRoot":""}
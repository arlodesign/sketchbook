{"version":3,"sources":["webpack:///./src/lib/lerpLine.js","webpack:///./src/pages/sketch/2019/06/01.js","webpack:///./src/lib/shuffle.js"],"names":["p","x1","y1","x2","y2","rate","showFirstDot","noisy","thisRate","Math","max","dist","l","random","point","lerp","sketch","bg","margin","HUE","divisors","shuffle","map","d","alpha","setup","createCanvas","colorMode","HSB","color","background","noFill","floor","width","draw","marginX","sin","frameCount","midLerpVal","leftY","cos","height","rightY","midX","midY","leftLerpLineVal","rightLerpLineVal","stroke","lerpLine","push","noStroke","fill","rect","noLoop","text","pop","location","path","pathname","description","a","i","length","j"],"mappings":"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","file":"component---src-pages-sketch-2019-06-01-js-16c96d49fab58a24e16e.js","sourcesContent":["/**\n * Creates a line of points at a specified interval (the rate)\n *\n * @param {obj} p The current p5.js drawing context\n * @param {*} x1\n * @param {*} y1\n * @param {*} x2\n * @param {*} y2\n * @param {*} rate Number between 0 and 1 to determine how often to draw a point\n * @param {*} showFirstDot Defaults to true\n * @param {*} noisy Defaults to true\n */\nexport default function(\n  p,\n  x1,\n  y1,\n  x2,\n  y2,\n  rate,\n  showFirstDot = true,\n  noisy = true\n) {\n  const thisRate = Math.max(rate, 0.01 / p.dist(x1, y1, x2, y2));\n\n  for (let l = 0; l < 1; l += thisRate) {\n    if (l === 0 && !showFirstDot) continue;\n    if ((noisy && p.random() > l) || !noisy) {\n      p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n    }\n  }\n}\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport shuffle from \"~lib/shuffle\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const HUE = p.random(100);\n  const FRAME_COUNTDOWN = 10000;\n\n  let divisors = shuffle([2, 3, 5, 8, 13, 21, 34].map(d => d * 25));\n  let alpha = 20;\n  let bg;\n  let margin;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 100);\n    bg = p.color(100 - HUE, 10, 15);\n    p.background(bg);\n    p.noFill();\n    margin = p.floor(p.width * 0.15);\n  };\n\n  p.draw = function() {\n    const marginX = p.map(\n      p.sin(p.frameCount / divisors[0]),\n      -1,\n      1,\n      margin,\n      margin * 0.05\n    );\n    const midLerpVal = p.map(\n      p.sin(p.frameCount / divisors[1]),\n      -1,\n      1,\n      0.3,\n      0.7\n    );\n    const leftY = p.map(\n      p.cos(p.frameCount / divisors[2]),\n      -1,\n      1,\n      p.height - margin,\n      margin\n    );\n    const rightY = p.map(\n      p.cos(p.frameCount / divisors[3]),\n      -1,\n      1,\n      margin,\n      p.height - margin\n    );\n    const midX = p.lerp(marginX, p.width - marginX, midLerpVal);\n    const midY = p.lerp(leftY, rightY, midLerpVal);\n    const leftLerpLineVal =\n      p.map(p.cos(p.frameCount / divisors[4]), -1, 1, 1.5, 2) /\n      p.dist(midX, midY, marginX, leftY);\n    const rightLerpLineVal =\n      p.map(p.cos(p.frameCount / divisors[4]), -1, 1, 1.5, 2) /\n      p.dist(midX, midY, p.width - marginX, rightY);\n\n    p.stroke(\n      HUE,\n      p.map(p.cos(p.frameCount / divisors[5]), -1, 1, 40, 80),\n      p.map(p.cos(p.frameCount / divisors[6]), -1, 1, 0, 100),\n      alpha\n    );\n    lerpLine(p, midX, midY, marginX, leftY, leftLerpLineVal);\n    lerpLine(p, midX, midY, p.width - marginX, rightY, rightLerpLineVal, false);\n\n    p.push();\n    p.noStroke();\n    p.fill(bg);\n    p.rect(0, 0, p.width, margin);\n    if (p.frameCount > FRAME_COUNTDOWN) {\n      alpha -= 0.01;\n      alpha < 0 && p.noLoop();\n    } else {\n      p.fill(0, 0, 100);\n      p.text(FRAME_COUNTDOWN - p.frameCount, 10, 20);\n    }\n    p.pop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different variation.\"\n  />\n);\n","export default function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n"],"sourceRoot":""}
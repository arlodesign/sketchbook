{"version":3,"sources":["webpack:///./src/pages/sketch/2018/11/28.js"],"names":["sketch","p","speed","max","angle","scalar","setup","createCanvas","background","noFill","strokeWeight","random","Math","sqrt","pow","width","height","draw","x1","cos","y1","sin","x2","y2","triangle","push","ellipse","pop","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description"],"mappings":"6HAGMA,EAAS,SAASC,GACtB,IAEIC,EACAC,EAHAC,EAAQ,EACRC,EAAS,EAIbJ,EAAEK,MAAQ,WACRL,EAAEM,aAAa,IAAK,KACpBN,EAAEO,WAAW,SACbP,EAAEQ,SACFR,EAAES,aAAa,GACfR,EAAQD,EAAEU,OAAO,GAAI,IACrBR,EAGM,EAFJS,KAAKC,KACHD,KAAKE,IAAIb,EAAEc,OAAS,EAAI,GAAI,GAAKH,KAAKE,IAAIb,EAAEe,QAAU,EAAI,GAAI,KAIpEf,EAAEgB,KAAO,WACP,IAAMC,EACJjB,EAAEc,MAAQ,EAAId,EAAEkB,IAAIf,GAASH,EAAEU,OAAON,EAAS,IAAKA,EAAS,KACzDe,EACJnB,EAAEe,OAAS,EAAIf,EAAEoB,IAAIjB,GAASH,EAAEU,OAAON,EAAS,IAAKA,EAAS,KAC1DiB,EACJrB,EAAEc,MAAQ,EAAId,EAAEoB,IAAIjB,GAASH,EAAEU,OAAON,EAAS,IAAKA,EAAS,KACzDkB,EACJtB,EAAEe,OAAS,EAAIf,EAAEkB,IAAIf,GAASH,EAAEU,OAAON,EAAS,IAAKA,EAAS,KAChEJ,EAAEuB,SAASvB,EAAEc,MAAQ,EAAGd,EAAEe,OAAS,EAAGE,EAAIE,EAAIE,EAAIC,GAClDtB,EAAEwB,OACFxB,EAAES,aAAa,GACfT,EAAEyB,QAAQzB,EAAEc,MAAQ,EAAGd,EAAEe,OAAS,EAAGX,GACrCJ,EAAE0B,MACEtB,EAASF,GACXF,EAAE2B,SAEJxB,GAASF,EACTG,GAAUH,IAIC2B,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAclC,OAAQA,EAAQmC,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2018-11-28-js-30402e24119c9ee21644.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  let angle = 0;\n  let scalar = 0;\n  let speed;\n  let max;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(\"white\");\n    p.noFill();\n    p.strokeWeight(2);\n    speed = p.random(10, 20);\n    max =\n      Math.sqrt(\n        Math.pow(p.width * (2 / 3), 2) + Math.pow(p.height * (2 / 3), 2)\n      ) * 2;\n  };\n\n  p.draw = function() {\n    const x1 =\n      p.width / 3 + p.cos(angle) * p.random(scalar - 100, scalar + 100);\n    const y1 =\n      p.height / 3 + p.sin(angle) * p.random(scalar - 100, scalar + 100);\n    const x2 =\n      p.width / 3 + p.sin(angle) * p.random(scalar - 100, scalar + 100);\n    const y2 =\n      p.height / 3 + p.cos(angle) * p.random(scalar - 100, scalar + 100);\n    p.triangle(p.width / 3, p.height / 3, x1, y1, x2, y2);\n    p.push();\n    p.strokeWeight(1);\n    p.ellipse(p.width / 3, p.height / 3, scalar);\n    p.pop();\n    if (scalar > max) {\n      p.noLoop();\n    }\n    angle += speed;\n    scalar += speed;\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Reload page for a different variation.\" />\n);\n"],"sourceRoot":""}
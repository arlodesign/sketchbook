{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/29.js","webpack:///./src/lib/shuffle.js"],"names":["sketch","p","HUE","random","divisors","shuffle","map","d","alpha","setup","createCanvas","background","noStroke","colorMode","HSB","blendMode","HARD_LIGHT","curveTightness","draw","fill","cos","frameCount","i","noise","x1","curvePoint","width","y1","height","circle","noLoop","location","path","pathname","description","a","length","j","Math","floor"],"mappings":"kKAIMA,EAAS,SAASC,GACtB,IAAMC,EAAMD,EAAEE,OAAO,KAIjBC,EAAWC,YAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAIC,KAAI,SAAAC,GAAC,OAAQ,IAAJA,MACxDC,EAAQ,EAEZP,EAAEQ,MAAQ,WACRR,EAAES,aAAa,IAAK,KACpBT,EAAEU,WAAW,GACbV,EAAEW,WACFX,EAAEY,UAAUZ,EAAEa,IAAK,KACnBb,EAAEc,UAAUd,EAAEe,YACdf,EAAEgB,gBAAgB,IAGpBhB,EAAEiB,KAAO,WACPjB,EAAEkB,KACAjB,EACAD,EAAEK,IAAIL,EAAEmB,IAAInB,EAAEoB,WAAajB,EAAS,KAAM,EAAG,EAAG,GAAI,IACpDH,EAAEK,IAAIL,EAAEmB,IAAInB,EAAEoB,WAAajB,EAAS,KAAM,EAAG,EAAG,GAAI,KACpDI,GAGF,IAAK,IAAIc,EAAI,EAAKA,EAAI,EAAGA,GAAKrB,EAAEsB,MAAMtB,EAAEoB,WAAa,KAAO,GAAI,CAC9D,IAAMG,EAAKvB,EAAEwB,WACX,EACAxB,EAAEK,IAAIL,EAAEmB,IAAInB,EAAEoB,WAAajB,EAAS,KAAM,EAAG,EAAG,GAAI,KACpDH,EAAEK,IACAL,EAAEmB,IAAInB,EAAEoB,WAAajB,EAAS,KAC7B,EACD,EACAH,EAAEyB,MAAQ,IACVzB,EAAEyB,MAAQ,IAEZzB,EAAEyB,MACFJ,GAEIK,EAAK1B,EAAEwB,WACXxB,EAAEK,IAAIL,EAAEmB,IAAInB,EAAEoB,WAAajB,EAAS,KAAM,EAAG,EAAG,IAAKH,EAAE2B,OAAS,KAChE3B,EAAEK,IAAIL,EAAEmB,IAAInB,EAAEoB,WAAajB,EAAS,KAAM,EAAG,EAAG,IAAKH,EAAE2B,OAAS,KAChE3B,EAAEK,IAAIL,EAAEmB,IAAInB,EAAEoB,WAAajB,EAAS,KAAM,EAAG,EAAG,IAAKH,EAAE2B,OAAS,KAChE3B,EAAEK,IAAIL,EAAEmB,IAAInB,EAAEoB,WAAajB,EAAS,KAAM,EAAG,EAAG,IAAKH,EAAE2B,OAAS,KAChEN,GAGFrB,EAAE4B,OAAOL,EAAIG,EAAI,GAGf1B,EAAEoB,WAhDgB,KAiDpBb,GAAS,IACD,GAAKP,EAAE6B,SAEftB,EAAQA,EAnDM,IAmDcA,EAAQ,GAAMA,IAKjC,0BAAGuB,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE/B,OAAQA,EACRgC,KAAMD,EAASE,SACfC,YAAY,6C,kCCnED,SAAS7B,EAAQ8B,GAC9B,IAAK,IAAIb,EAAIa,EAAEC,OAAS,EAAGd,EAAI,EAAGA,IAAK,CACrC,IAAMe,EAAIC,KAAKC,MAAMD,KAAKnC,UAAYmB,EAAI,IADL,EAEtB,CAACa,EAAEE,GAAIF,EAAEb,IAAvBa,EAAEb,GAFkC,KAE9Ba,EAAEE,GAF4B,KAIvC,OAAOF,EALT","file":"component---src-pages-sketch-2019-04-29-js-3ff96e21f2e8761b8a14.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport shuffle from \"~lib/shuffle\";\n\nconst sketch = function(p) {\n  const HUE = p.random(100);\n  const FRAME_COUNTDOWN = 5000;\n  const MAX_ALPHA = 100;\n\n  let divisors = shuffle([1, 2, 3, 5, 8, 13, 21, 34].map(d => d * 100));\n  let alpha = 0;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.noStroke();\n    p.colorMode(p.HSB, 100);\n    p.blendMode(p.HARD_LIGHT);\n    p.curveTightness(-3);\n  };\n\n  p.draw = function() {\n    p.fill(\n      HUE,\n      p.map(p.cos(p.frameCount / divisors[4]), -1, 1, 20, 50),\n      p.map(p.cos(p.frameCount / divisors[5]), -1, 1, 60, 100),\n      alpha\n    );\n\n    for (let i = 0.0; i < 1; i += p.noise(p.frameCount / 100) / 10) {\n      const x1 = p.curvePoint(\n        0,\n        p.map(p.cos(p.frameCount / divisors[5]), -1, 1, 50, 100),\n        p.map(\n          p.cos(p.frameCount / divisors[6]),\n          -1,\n          1,\n          p.width - 100,\n          p.width - 50\n        ),\n        p.width,\n        i\n      );\n      const y1 = p.curvePoint(\n        p.map(p.cos(p.frameCount / divisors[0]), -1, 1, 100, p.height - 100),\n        p.map(p.cos(p.frameCount / divisors[1]), -1, 1, 100, p.height - 100),\n        p.map(p.cos(p.frameCount / divisors[2]), -1, 1, 100, p.height - 100),\n        p.map(p.cos(p.frameCount / divisors[3]), -1, 1, 100, p.height - 100),\n        i\n      );\n\n      p.circle(x1, y1, 1);\n    }\n\n    if (p.frameCount > FRAME_COUNTDOWN) {\n      alpha -= 0.1;\n      alpha < 0 && p.noLoop();\n    } else {\n      alpha = alpha < MAX_ALPHA ? alpha + 0.1 : alpha;\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different variation.\"\n  />\n);\n","export default function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n"],"sourceRoot":""}
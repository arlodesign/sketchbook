{"version":3,"sources":["webpack:///./src/pages/sketch/2019/11/09.js"],"names":["sketch","p","RENDER","getURLParams","render","H","random","setup","pixelDensity","createCanvas","colorMode","HSL","createLoop","gif","open","noiseRadius","draw","background","noise2D","animLoop","H1","color","H2","x","width","GRID","l","abs","height","fill","lerpColor","noStroke","rect","location","path","pathname","description"],"mappings":"gKAIMA,EAAS,SAASC,GACtB,IAAMC,EAASD,EAAEE,eAAeC,OAE1BC,EAAIJ,EAAEK,OAAO,IAEnBL,EAAEM,MAAQ,WACRN,EAAEO,aAAa,GACfP,EAAEQ,aAAa,IAAK,KACpBR,EAAES,UAAUT,EAAEU,IAAK,GAEnBV,EAAEW,WAAW,GAAI,CACfC,MAAKX,GAAS,CAAEE,QAAQ,EAAOU,MAAM,GACrCC,YAAa,MAIjBd,EAAEe,KAAO,WACPf,EAAEgB,WAAW,KAMb,IAPkB,IAGVC,EAAYjB,EAAEkB,SAAdD,QACFE,EAAKnB,EAAEoB,MAAMhB,EAAG,EAAG,IACnBiB,EAAKrB,EAAEoB,MAAMhB,EAAG,EAAG,GAEhBkB,EAAItB,EAAEuB,MAAQ,EAAIC,EAAUF,EAAItB,EAAEuB,MAAOD,GArBvC,GAsBT,IACE,IAAIG,EAAI,EACRA,EAAI,EACJA,GAAKzB,EAAE0B,IAAIT,EAAQ,KAAOK,KAAO,GAAgB,IAAXtB,EAAE2B,OAA2B,IAAX3B,EAAE2B,QAE1D3B,EAAE4B,KAAK5B,EAAE6B,UAAUV,EAAIE,EAAII,IAC3BzB,EAAE8B,WACF9B,EAAE+B,KAAKT,EAAc,IAAXtB,EAAE2B,OA7BL,GA6BqC,GAAX3B,EAAE2B,OAAeF,GAClDzB,EAAE+B,KAAK/B,EAAEuB,MAAQD,EA9BV,GA8B+B,IAAXtB,EAAE2B,OA9BtB,GA8BsD,GAAX3B,EAAE2B,OAAeF,KAM5D,0BAAGO,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcjC,OAAQA,EAAQkC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-11-09-js-a5a4d26c14f5a4bb02e8.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const GRID = 10;\n  const H = p.random(0.5);\n\n  p.setup = function() {\n    p.pixelDensity(1);\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSL, 1);\n\n    p.createLoop(60, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.7,\n    });\n  };\n\n  p.draw = function() {\n    p.background(255);\n\n    const { noise2D } = p.animLoop;\n    const H1 = p.color(H, 1, 0.5);\n    const H2 = p.color(H, 0, 1);\n\n    for (let x = p.width / 2 - GRID / 2; x < p.width; x += GRID) {\n      for (\n        let l = 1;\n        l > 0;\n        l -= p.abs(noise2D(0.003, x)) || 1 / (p.height * 0.75 - p.height * 0.25)\n      ) {\n        p.fill(p.lerpColor(H1, H2, l));\n        p.noStroke();\n        p.rect(x, p.height * 0.25, GRID, p.height * 0.5 * l);\n        p.rect(p.width - x - GRID, p.height * 0.25, GRID, p.height * 0.5 * l);\n      }\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
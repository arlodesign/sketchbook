{"version":3,"sources":["webpack:///./src/pages/sketch/2020/05/03.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.string.trim-left.js","webpack:///./node_modules/coordinate-systems/src/index.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.array.flat-map.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.string.pad-end.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.string.trim-right.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.reduce-right.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_flatten-into-array.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.string.pad-start.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-pad.js"],"names":["spherical","Coordinate","sketch","p","margin","RENDER","getURLParams","render","setup","pixelDensity","frameRate","createCanvas","WEBGL","background","createLoop","noiseRadius","smooth","width","draw","animLoop","noise","noise2D","theta","camera","HALF_PI","cartesian","t","PI","TWO_PI","beginShape","curveVertex","abs","QUARTER_PI","r","endShape","CLOSE","frameCount","DURATION","save","String","padStart","length","location","path","pathname","description","$trim","this","Object","defineProperty","exports","value","CoordinateType","lodash_1","degPerRadian","Math","_a","coordinates","isDegree","type","isRadian","cooridnatesByType","Error","CARTESIAN_2D","CARTESIAN_3D","cylindrical","CYLINDRICAL","polar","POLAR","SPHERICAL","cylindricalToSpherical","sr","sp","coordinate","rtz","z","sqrt","atan2","polarToCart2d","cos","sin","cartesian3dToCylindrical","rt","center","xyz","x","y","cartesian2dToPolar","undefined","sphericalToCart3d","sphericalToCylindrical","cr","rtp","cartesian3dToSpherical","x2","y2","z2","xy","isArray","TypeError","prototype","temp","options","$export","flattenIntoArray","toObject","toLength","aFunction","arraySpeciesCreate","P","flatMap","callbackfn","sourceLen","A","O","arguments","$pad","userAgent","WEBKIT_BUG","test","F","padEnd","maxLength","$reduce","reduceRight","module","webpackPolyfill","deprecate","paths","children","enumerable","get","l","i","isObject","ctx","IS_CONCAT_SPREADABLE","target","original","source","start","depth","mapper","thisArg","element","spreadable","targetIndex","sourceIndex","mapFn","repeat","defined","that","fillString","left","S","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","ceil","slice"],"mappings":"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","file":"component---src-pages-sketch-2020-05-03-js-53711e8c16c617205976.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport { Coordinate } from \"coordinate-systems\";\n\nconst { spherical } = Coordinate;\n\nconst sketch = function (p) {\n  const RENDER = p.getURLParams().render;\n  const DURATION = 30;\n  const RATE = 30;\n  const LINES = 500;\n\n  let margin;\n\n  p.setup = function () {\n    p.pixelDensity(1);\n    p.frameRate(RATE);\n    p.createCanvas(660, 840, p.WEBGL);\n    p.background(255);\n    p.createLoop(DURATION, {\n      noiseRadius: 1,\n    });\n    p.smooth();\n\n    margin = p.width / 10;\n  };\n\n  p.draw = function () {\n    const { noise, noise2D, theta } = p.animLoop;\n\n    p.background(255);\n    p.camera(\n      ...spherical([p.width * 1.5, p.HALF_PI * noise(), theta]).cartesian(),\n      0,\n      0,\n      0,\n      0,\n      1,\n      0\n    );\n\n    for (let t = -p.PI; t <= p.PI; t += p.TWO_PI / LINES) {\n      p.beginShape();\n\n      p.curveVertex(\n        ...spherical([\n          p.width / 2 + margin * noise2D(p.PI / 10, p.abs(t) / 10),\n          p.QUARTER_PI * noise2D(p.PI / 20, p.abs(t) / 20) + -p.PI,\n          p.QUARTER_PI * noise2D(p.abs(t) / 10, p.PI / 10) + t,\n        ]).cartesian()\n      );\n\n      for (let r = -p.PI; r <= p.PI; r += p.TWO_PI / LINES) {\n        p.curveVertex(\n          ...spherical([\n            p.width / 2 + margin * noise2D(p.abs(r) / 10, p.abs(t) / 10),\n            p.QUARTER_PI * noise2D(p.abs(r) / 20, p.abs(t) / 20) + r,\n            p.QUARTER_PI * noise2D(p.abs(t) / 10, p.abs(r) / 10) + t,\n          ]).cartesian()\n        );\n      }\n\n      p.endShape(p.CLOSE);\n    }\n\n    RENDER &&\n      p.frameCount <= DURATION * RATE &&\n      p.save(\n        `${String(p.frameCount).padStart(\n          String(DURATION * RATE).length,\n          \"0\"\n        )}.png`\n      );\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimLeft', function ($trim) {\n  return function trimLeft() {\n    return $trim(this, 1);\n  };\n}, 'trimStart');\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = require(\"lodash\");\n\nvar CoordinateType;\n\n(function (CoordinateType) {\n  CoordinateType[\"CARTESIAN_2D\"] = \"CARTESIAN_2D\";\n  CoordinateType[\"CARTESIAN_3D\"] = \"CARTESIAN_3D\";\n  CoordinateType[\"CYLINDRICAL\"] = \"CYLINDRICAL\";\n  CoordinateType[\"POLAR\"] = \"POLAR\";\n  CoordinateType[\"SPHERICAL\"] = \"SPHERICAL\";\n})(CoordinateType = exports.CoordinateType || (exports.CoordinateType = {}));\n\nvar degPerRadian = 180 / Math.PI;\n/**\n * @constructor Coordinate\n * @description Defines object which can convert between coordinate systems.\n * It is recommended to use one of the Coodinate.STATIC_CONSTRUCTOR functions\n * to generate your first coordinate before conversions. e.g. Coodinate.spherical(...)\n * @param {Object} config\n * {\n *     label: 'type of initial coordinate',\n *     coords: {\n *         x/y/z/r/t/p: 'k-v pairs'\n *     },\n *     isDegree: Boolean\n * }\n */\n\nvar Coordinate =\n/** @class */\nfunction () {\n  function Coordinate(_a) {\n    var coordinates = _a.coordinates,\n        isDegree = _a.isDegree,\n        isRadian = _a.isRadian,\n        type = _a.type;\n    this.isRadian = true;\n    this.isDegree = false;\n    this.cooridnatesByType = {};\n\n    if (isDegree) {\n      this.isDegree = true;\n      this.isRadian = false;\n    }\n\n    if (!type) throw new Error('no type coordinate type defined');\n    if (!coordinates) throw new Error('no coordinates provided');\n    this.type = type;\n    this.coordinates = coordinates;\n    this.cooridnatesByType[type] = this.coordinates;\n  } //\n  // Static Constructor Functions\n  //\n\n  /**\n   * Create a point provided x, y, and optionally z coordinates\n   * @param  {Object} coordinates\n   * @return {Coordinate}\n   */\n\n\n  Coordinate.cartesian = function (coordinates) {\n    if (coordinates.length === 2) {\n      return new Coordinate({\n        coordinates: coordinates,\n        type: CoordinateType.CARTESIAN_2D\n      });\n    }\n\n    if (coordinates.length === 3) {\n      return new Coordinate({\n        coordinates: coordinates,\n        type: CoordinateType.CARTESIAN_3D\n      });\n    }\n\n    throw new Error('coordinates should have length 2 or 3');\n  };\n\n  Coordinate.cylindrical = function (coordinates) {\n    if (coordinates.length !== 3) {\n      throw new Error('expected exactly 3 params [r, t, z]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.CYLINDRICAL\n    });\n  };\n\n  Coordinate.polar = function (coordinates) {\n    if (coordinates.length !== 2) {\n      throw new Error('expected exactly 2 params [r, t]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.POLAR\n    });\n  };\n\n  Coordinate.spherical = function (coordinates) {\n    if (coordinates.length !== 3) {\n      throw new Error('expected exactly 3 params [r, t, p]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.SPHERICAL\n    });\n  }; //\n  // STATIC Converters\n  //\n\n  /**\n   * Convert a cylindrical to a spherical coordinates\n   * @param  {Array}   rtz\n   * @param  {Boolean} isDegree\n   * @return {Array}   [radius, theta, phi]\n   */\n\n\n  Coordinate.cylindricalToSpherical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var rtz = coordinate;\n    var r = rtz[0];\n    var t = rtz[1];\n    var z = rtz[2];\n    var sr, sp; // sphere radius, sphere theta...\n\n    if (isDegree) {\n      t = t / degPerRadian;\n    }\n\n    sr = Math.sqrt(r * r + z * z);\n    sp = Math.atan2(r, z);\n\n    if (isDegree) {\n      sp = sp * degPerRadian;\n      t = t * degPerRadian;\n    }\n\n    return [sr, t, sp];\n  };\n  /**\n   * Convert polar to 2d cartesian coordinates\n   * @param  {Array}   rt        [radis, theta]\n   * @param  {Boolean} isDegree specifies units\n   * @return {Array}  [x, y]\n   */\n\n\n  Coordinate.polarToCart2d = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var r, t, x, y;\n    r = coordinate[0];\n    t = coordinate[1];\n\n    if (isDegree) {\n      t = t * (1 / degPerRadian);\n    }\n\n    x = r * Math.cos(t);\n    y = r * Math.sin(t);\n    return [x, y];\n  };\n  /**\n   * Convert 3d cartesian to 3d cylindrical coordinates\n   * @param  {Array}      argument [x, y, z] coords\n   * @param  {Boolean=}   isDegree overrides default radian theta assumption\n   * @param  {Array=}     center [x, y] coords of center of circle\n   * @return {Array}      [radius, theta, z]\n   */\n\n\n  Coordinate.cartesian3dToCylindrical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xyz = coordinate;\n    var x = xyz[0];\n    var y = xyz[1];\n    var z = xyz[2];\n    var rt;\n    rt = Coordinate.cartesian2dToPolar({\n      coordinate: [x, y],\n      isDegree: isDegree,\n      center: center ? [center[0], center[1]] : undefined\n    });\n    return [rt[0], rt[1], z];\n  };\n\n  Coordinate.sphericalToCart3d = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var r = coordinate[0];\n    var t = coordinate[1];\n    var p = coordinate[2];\n    var x;\n    var y;\n    var z;\n\n    if (isDegree) {\n      t = t / degPerRadian;\n      p = p / degPerRadian;\n    }\n\n    x = r * Math.sin(p) * Math.cos(t);\n    y = r * Math.sin(p) * Math.sin(t);\n    z = r * Math.cos(p);\n    return [x, y, z];\n  };\n  /**\n   * Convert spherical to cylindrical coordinates\n   */\n\n\n  Coordinate.sphericalToCylindrical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var rtp = coordinate;\n    var r = rtp[0];\n    var t = rtp[1];\n    var p = rtp[2];\n    var cr;\n    var z;\n\n    if (isDegree) {\n      t = t / degPerRadian;\n      p = p / degPerRadian;\n    }\n\n    cr = r * Math.sin(p);\n    z = r * Math.cos(p);\n\n    if (isDegree) {\n      t = t * degPerRadian;\n      p = p * degPerRadian;\n    }\n\n    return [cr, t, z];\n  };\n  /**\n   * Convert 3d cartesian to 3d spherical coordinates\n   * @param  {Array}      argument [x, y, z] coords\n   * @param  {Boolean=}   isDegree overrides default radian theta assumption\n   * @param  {Array=}     center [x, y, z] coords of center of circle\n   * @return {Array}      [radius, theta, phi]\n   */\n\n\n  Coordinate.cartesian3dToSpherical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xyz = coordinate;\n\n    if (center && center.length !== 3) {\n      throw new Error('expected center value to have [x, y, z] coords' + 'for locating sphere center');\n    }\n\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2];\n    var x2;\n    var y2;\n    var z2;\n    var r;\n    var t;\n    var p;\n\n    if (center) {\n      x = x - center[0];\n      y = y - center[1];\n      z = z - center[2];\n    }\n\n    x2 = x * x;\n    y2 = y * y;\n    z2 = z * z;\n    r = Math.sqrt(x2 + y2 + z2);\n\n    if (!r) {\n      p = t = 0;\n    } else {\n      t = Math.atan2(y, x);\n      p = Math.atan2(Math.sqrt(x2 + y2), z);\n\n      if (isDegree) {\n        t = t * degPerRadian;\n        p = p * degPerRadian;\n      }\n    }\n\n    return [r, t, p];\n  };\n  /**\n   * Convert cartesian 2d to polar coordinates\n   * @param  {Array=} center [x, y] coords of center of circle.  Defaults to [0, 0],\n   * however may be offset.\n   * @return {Array}  [radius, theta]\n   */\n\n\n  Coordinate.cartesian2dToPolar = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xy = coordinate;\n    var x, y, r, t;\n\n    if (!lodash_1.isArray(xy) || xy.length !== 2) {\n      throw new TypeError('coorinate must be an [x, y, ...] array');\n    }\n\n    x = xy[0];\n    y = xy[1];\n\n    if (center && (!lodash_1.isArray(center) || center.length !== 2)) {\n      throw new TypeError('expected [x, y] center array');\n    }\n\n    if (center) {\n      x = x - center[0];\n      y = y - center[1];\n    }\n\n    r = Math.sqrt(x * x + y * y);\n    t = Math.atan2(y, x);\n    if (isDegree) t = t * degPerRadian;\n    return [r, t];\n  };\n\n  Coordinate.prototype.cartesian = function () {\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_2D];\n\n      case CoordinateType.CARTESIAN_3D:\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      case CoordinateType.POLAR:\n        this.cooridnatesByType[CoordinateType.CARTESIAN_2D] = Coordinate.polarToCart2d({\n          coordinate: this.cooridnatesByType[CoordinateType.POLAR],\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_2D];\n\n      case CoordinateType.CYLINDRICAL:\n        var _a = this.cooridnatesByType[CoordinateType.CYLINDRICAL],\n            r = _a[0],\n            t = _a[1];\n        var temp = Coordinate.polarToCart2d({\n          coordinate: [r, t],\n          isDegree: this.isDegree\n        });\n        this.cooridnatesByType[CoordinateType.CARTESIAN_3D] = [temp[0], temp[1], this.coordinates[2]];\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      case CoordinateType.SPHERICAL:\n        this.cooridnatesByType[CoordinateType.CARTESIAN_3D] = Coordinate.sphericalToCart3d({\n          coordinate: this.cooridnatesByType[CoordinateType.SPHERICAL],\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      default:\n        throw new Error(\"cannot convert from \" + this.type + \" to cartesian\");\n    }\n  };\n\n  Coordinate.prototype.cylindrical = function (options) {\n    var temp;\n    options = options || {};\n    var center = options.center ? [options.center[0], options.center[1], options.center[2] || 0] : undefined;\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        temp = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: center\n        });\n        this.cooridnatesByType.CYLINDRICAL = [temp[0], temp[1], 0];\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.CYLINDRICAL = Coordinate.cartesian3dToCylindrical({\n          coordinate: this.cooridnatesByType[CoordinateType.CARTESIAN_3D],\n          isDegree: this.isDegree,\n          center: center\n        });\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      case CoordinateType.POLAR:\n        temp = this.cooridnatesByType.POLAR;\n        return [temp[0], temp[1], 0];\n\n      case CoordinateType.CYLINDRICAL:\n        return this.cooridnatesByType.CYLINDRICAL;\n      // identity\n\n      case CoordinateType.SPHERICAL:\n        this.cooridnatesByType.CYLINDRICAL = Coordinate.sphericalToCylindrical({\n          coordinate: this.cooridnatesByType.SPHERICAL,\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      default:\n        throw new Error(\"cannot convert \" + this.type + \" to cylindrical\");\n    }\n  };\n\n  Coordinate.prototype.polar = function (options) {\n    options = options || {};\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        this.cooridnatesByType.POLAR = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.POLAR;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.POLAR = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_3D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.POLAR;\n\n      case CoordinateType.POLAR:\n        return this.cooridnatesByType.POLAR;\n\n      default:\n        throw new Error('cannot convert to/from original/requested types');\n    }\n  };\n  /**\n   * Converts current coordinate to spherical\n   * @param  {Object} options\n   * @return {Array}  coordinates in respective coordinate format\n   */\n\n\n  Coordinate.prototype.spherical = function (options) {\n    var temp;\n    options = options || {};\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        temp = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        this.cooridnatesByType.SPHERICAL = [temp[0], temp[1], 0];\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.SPHERICAL = Coordinate.cartesian3dToSpherical({\n          coordinate: this.cooridnatesByType.CARTESIAN_3D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.POLAR:\n        temp = this.cooridnatesByType.POLAR;\n        return [temp[0], temp[1], 0];\n\n      case CoordinateType.CYLINDRICAL:\n        this.cooridnatesByType.SPHERICAL = Coordinate.cylindricalToSpherical({\n          coordinate: this.cooridnatesByType.CYLINDRICAL,\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.SPHERICAL:\n        return this.cooridnatesByType.SPHERICAL;\n\n      default:\n        throw new Error('cannot convert to/from original/requested types');\n    }\n  };\n\n  return Coordinate;\n}();\n\nexports.Coordinate = Coordinate;","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimRight', function ($trim) {\n  return function trimRight() {\n    return $trim(this, 2);\n  };\n}, 'trimEnd');\n","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n  }\n});\n","require(\"core-js/modules/es6.object.define-property\");\n\nmodule.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/06/11.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/core-js/modules/_create-property.js"],"names":["sketch","p","points","setup","createCanvas","background","stroke","strokeWeight","noFill","initPoints","Array","from","a","random","TWO_PI","d","width","_loop","angle","concat","map","_ref","console","log","draw","curve","apply","polarToCartesian","height","frameCount","length","noLoop","__webpack_exports__","_ref2","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_4__","path","pathname","description","__webpack_require__","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","distance","Math","cos","sin","centerX","centerY","radiusX","radiusY","asArray","x","y","ctx","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","arrayLike","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","index","iterFn","next","done","value","$defineProperty","createDesc","module","exports","object","f"],"mappings":"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","file":"component---src-pages-sketch-2019-06-11-js-813cd4c57854b8c9f4e7.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const STEPS = 5;\n  const POINTS = 10;\n\n  let points = [];\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.stroke(255);\n    p.strokeWeight(5);\n    p.noFill();\n\n    const initPoints = Array.from(Array(4), () => ({\n      a: p.random(p.TWO_PI),\n      d: p.random(p.width / 4, p.width * 0.45),\n    }));\n\n    for (let angle = 0; angle < p.TWO_PI; angle += p.TWO_PI / STEPS) {\n      points = points.concat(\n        initPoints.map(({ a, d }) => ({ a: a + angle, d }))\n      );\n    }\n    console.log(points);\n  };\n\n  p.draw = function() {\n    p.curve(\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        points[p.frameCount].a,\n        points[p.frameCount].d,\n        true\n      ),\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        points[p.frameCount + 1].a,\n        points[p.frameCount + 1].d,\n        true\n      ),\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        points[p.frameCount + 2].a,\n        points[p.frameCount + 2].d,\n        true\n      ),\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        points[p.frameCount + 3].a,\n        points[p.frameCount + 3].d,\n        true\n      )\n    );\n    if (p.frameCount === points.length - 4) {\n      p.curve(\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[p.frameCount + 1].a,\n          points[p.frameCount + 1].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[p.frameCount + 2].a,\n          points[p.frameCount + 2].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[p.frameCount + 3].a,\n          points[p.frameCount + 3].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[0].a,\n          points[0].d,\n          true\n        )\n      );\n      p.curve(\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[p.frameCount + 2].a,\n          points[p.frameCount + 2].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[p.frameCount + 3].a,\n          points[p.frameCount + 3].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[0].a,\n          points[0].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[1].a,\n          points[1].d,\n          true\n        )\n      );\n      p.curve(\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[p.frameCount + 3].a,\n          points[p.frameCount + 3].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[0].a,\n          points[0].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[1].a,\n          points[1].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[2].a,\n          points[2].d,\n          true\n        )\n      );\n      p.curve(\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[0].a,\n          points[0].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[1].a,\n          points[1].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[2].a,\n          points[2].d,\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          points[3].a,\n          points[3].d,\n          true\n        )\n      );\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different variation.\"\n  />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n"],"sourceRoot":""}
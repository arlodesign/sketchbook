{"version":3,"sources":["webpack:///./src/pages/sketch/2019/10/13.js","webpack:///./src/lib/easing.js"],"names":["GRID","MARGIN","RENDER","process","DEV","sketch","p","CHANCES","Array","fill","map","random","diagonals","horizontals","Diagonal","x","y","this","rotate","HALF_PI","direction","prevMod","canvas","createGraphics","stroke","draw","theta","animLoop","turnVal","background","push","translate","width","height","ease","line","pop","blendMode","SCREEN","image","BLEND","Horizontal","slide","slideVal","setup","createCanvas","noFill","createLoop","gif","render","open","forEach","d","h","location","href","easeInQuad","t","easeInOutQuad","easeOutQuint","easeInOutQuint"],"mappings":"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","file":"component---src-pages-sketch-2019-10-13-js-241f4fe8dad2bef8479c.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport \"p5.createloop\";\nimport { easeInOutQuint as ease } from \"~lib/easing\";\n\nconst GRID = 30;\nconst MARGIN = 2;\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const CHANCES = Array(3)\n    .fill()\n    .map(() => p.random(0.3, 0.5));\n\n  let diagonals = [];\n  let horizontals = [];\n\n  class Diagonal {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.rotate = p.random() < CHANCES[0] ? 0 : p.HALF_PI;\n      this.direction = p.random([1, -1]);\n      this.prevMod = 0;\n      this.canvas = p.createGraphics(GRID, GRID);\n      this.canvas.stroke(255);\n    }\n    draw() {\n      const { theta } = p.animLoop;\n      const turnVal = p.map(theta % p.HALF_PI, 0, p.HALF_PI, 0, 1);\n\n      if (theta % p.HALF_PI <= this.prevMod) {\n        this.rotate += p.HALF_PI * this.direction;\n      }\n\n      this.canvas.background(0);\n      this.canvas.push();\n\n      this.canvas.translate(this.canvas.width / 2, this.canvas.height / 2);\n      this.canvas.rotate(\n        p.map(\n          ease(turnVal),\n          0,\n          1,\n          this.rotate,\n          this.rotate + p.HALF_PI * this.direction\n        )\n      );\n      this.canvas.line(\n        -this.canvas.width / 2,\n        -this.canvas.height / 2,\n        this.canvas.width / 2,\n        this.canvas.height / 2\n      );\n      this.canvas.pop();\n\n      p.blendMode(p.SCREEN);\n      p.image(this.canvas, this.x, this.y);\n      p.blendMode(p.BLEND);\n\n      this.prevMod = theta % p.HALF_PI;\n    }\n  }\n\n  class Horizontal {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.slide = 0;\n      this.direction = 0;\n      this.prevMod = 0;\n\n      if (x === GRID * MARGIN) {\n        this.direction = 1;\n      } else if (x === p.width - MARGIN * GRID - GRID) {\n        this.direction = -1;\n      } else {\n        this.direction = p.random([1, -1]);\n      }\n    }\n    draw() {\n      const { theta } = p.animLoop;\n      const slideVal = p.map(theta % p.HALF_PI, 0, p.HALF_PI, 0, 1);\n\n      if (theta % p.HALF_PI <= this.prevMod) {\n        this.x = this.x + GRID * this.direction;\n        this.direction = -this.direction;\n      }\n\n      const x = p.map(\n        ease(slideVal),\n        0,\n        1,\n        this.x,\n        this.x + GRID * this.direction\n      );\n\n      p.line(x, this.y, x + GRID, this.y);\n\n      this.prevMod = theta % p.HALF_PI;\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.noFill();\n    p.stroke(255);\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n    });\n\n    for (let x = MARGIN * GRID; x < p.width - MARGIN * GRID; x += GRID) {\n      for (let y = MARGIN * GRID; y <= p.height - MARGIN * GRID; y += GRID) {\n        if (p.random() < CHANCES[1] && y < p.height - MARGIN * GRID) {\n          diagonals.push(new Diagonal(x, y));\n        }\n        if (p.random() < CHANCES[2]) {\n          horizontals.push(new Horizontal(x, y));\n        }\n      }\n    }\n  };\n\n  p.draw = function() {\n    p.background(0);\n    diagonals.forEach(d => d.draw());\n    horizontals.forEach(h => h.draw());\n  };\n};\n\nexport default ({ location }) => (\n  <Layout>\n    <Sketch sketch={sketch} />\n    <p>\n      Inspired by{\" \"}\n      <a href=\"https://albersfoundation.org/art/anni-albers/weavings/#slide13\">\n        Anni Albers\n      </a>\n      .\n    </p>\n  </Layout>\n);\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2018/11/30.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_1__","sketch","p","diagonal","gridWidth","gridHeight","getHypotenuse","a","b","Math","sqrt","getDistanceFromPointer","x","y","abs","mouseX","mouseY","setup","createCanvas","rectMode","CENTER","noFill","width","height","draw","background","h","floor","ceil","w","scalar","distanceFromPointer","rectSize","map","strokeWeight","rect","touchMoved","_ref","location","createElement","path","pathname","description"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAGMO,EAAS,SAASC,GACtB,IACIC,EACAC,EACAC,EAEJ,SAASC,EAAcC,EAAGC,GACxB,OAAOC,KAAKC,KAAKH,EAAIA,EAAIC,EAAIA,GAG/B,SAASG,EAAuBC,EAAGC,GAGjC,OAAOP,EAFGG,KAAKK,IAAIZ,EAAEa,OAASH,GACpBH,KAAKK,IAAIZ,EAAEc,OAASH,IAIhCX,EAAEe,MAAQ,WACRf,EAAEgB,aAAa,IAAK,KACpBhB,EAAEiB,SAASjB,EAAEkB,QACblB,EAAEmB,SACFlB,EAAWG,EAAcJ,EAAEoB,MAAOpB,EAAEqB,QACpCnB,EAAYF,EAAEoB,MApBD,EAqBbjB,EAAaH,EAAEqB,OArBF,GAwBfrB,EAAEsB,KAAO,WACPtB,EAAEuB,WAAW,SACb,IACE,IAAIC,GAAKjB,KAAKkB,MAAMtB,EAAa,GACjCqB,EAAIjB,KAAKmB,KAAKvB,EAAa,GAC3BqB,IAEA,IACE,IAAIG,GAAKpB,KAAKkB,MAAMvB,EAAY,GAChCyB,EAAIpB,KAAKmB,KAAKxB,EAAY,GAC1ByB,IACA,CACA,IAAMjB,EAAIV,EAAEoB,MAAQ,EAAIQ,GAAaD,EAC/BhB,EAAIX,EAAEqB,OAAS,EAAIO,GAAaJ,EAChCK,EAAsBpB,EAAuBC,EAAGC,GAChDmB,EAAW9B,EAAE+B,IACjBF,EACA,EACA5B,EACA2B,GACAA,IAEF5B,EAAEgC,aAAahC,EAAE+B,IAAIF,EAAqB,EAAG5B,EAAU,EAAG,IAC1DD,EAAEiC,KAAKvB,EAAGC,EAAGmB,EAAUA,KAK7B9B,EAAEkC,WAAa,WACb,GACElC,EAAEa,QAAU,GACZb,EAAEc,QAAU,GACZd,EAAEa,QAAUb,EAAEoB,OACdpB,EAAEc,QAAUd,EAAEqB,OAEd,OAAO,IAKE3B,EAAA,iBAAAyC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbxC,EAAAS,EAAAgC,cAACvC,EAAA,EAAD,CAAcC,OAAQA,EAAQuC,KAAMF,EAASG,SAAUC,YAAY","file":"component---src-pages-sketch-2018-11-30-js-43ab9e078741e05c2a67.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const scalar = 9;\n  let diagonal;\n  let gridWidth;\n  let gridHeight;\n\n  function getHypotenuse(a, b) {\n    return Math.sqrt(a * a + b * b);\n  }\n\n  function getDistanceFromPointer(x, y) {\n    const a = Math.abs(p.mouseX - x);\n    const b = Math.abs(p.mouseY - y);\n    return getHypotenuse(a, b);\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.rectMode(p.CENTER);\n    p.noFill();\n    diagonal = getHypotenuse(p.width, p.height);\n    gridWidth = p.width / scalar;\n    gridHeight = p.height / scalar;\n  };\n\n  p.draw = function() {\n    p.background(\"white\");\n    for (\n      let h = -Math.floor(gridHeight / 2);\n      h < Math.ceil(gridHeight / 2);\n      h++\n    ) {\n      for (\n        let w = -Math.floor(gridWidth / 2);\n        w < Math.ceil(gridWidth / 2);\n        w++\n      ) {\n        const x = p.width / 2 + scalar * 3 * w;\n        const y = p.height / 2 + scalar * 3 * h;\n        const distanceFromPointer = getDistanceFromPointer(x, y);\n        const rectSize = p.map(\n          distanceFromPointer,\n          0,\n          diagonal,\n          scalar * 10,\n          scalar * 3\n        );\n        p.strokeWeight(p.map(distanceFromPointer, 0, diagonal, 2, 0));\n        p.rect(x, y, rectSize, rectSize);\n      }\n    }\n  };\n\n  p.touchMoved = function() {\n    if (\n      p.mouseX >= 0 &&\n      p.mouseY >= 0 &&\n      p.mouseX <= p.width &&\n      p.mouseY <= p.height\n    ) {\n      return false;\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Move pointer or finger over sketch.\" />\n);\n"],"sourceRoot":""}
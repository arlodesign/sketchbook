{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/28.js"],"names":["sketch","p","scalar","multiplier","multiplier2","x","rectHeight","y","pass","setup","createCanvas","fill","noStroke","background","floor","random","height","draw","RECT_WIDTH","map","noise","LEAN","quad","width","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description"],"mappings":"qIAGMA,EAAS,SAASC,GACtB,IAAIC,EACAC,EACAC,EACAC,EAEAC,EADAC,EAAI,EAEJC,EAAO,EAEXP,EAAEQ,MAAQ,WACRR,EAAES,aAAa,IAAK,KACpBT,EAAEU,KAAK,sBACPV,EAAEW,WACFX,EAAEY,WAAW,KACbX,EAASD,EAAEa,MAAMb,EAAEc,OAAO,EAAG,IAC7BZ,EAAaF,EAAEc,SACfX,EAAcH,EAAEc,OAAO,EAAG,GAC1BT,GAAcL,EAAEe,OAASd,EAAS,GAAKA,EACvCG,GAAKC,GAGPL,EAAEgB,KAAO,WACP,IAAMC,EAAahB,EAASD,EAAEkB,IAAIlB,EAAEmB,MAAMf,EAAGE,GAAI,EAAG,EAAGL,EAAQ,GACzDmB,EACJnB,EACAD,EAAEkB,IAAIlB,EAAEmB,MAAMf,EAAGE,GAAI,EAAG,GAAIL,EAASC,EAAYD,EAASC,GAC5DF,EAAEqB,KACAjB,EAAIgB,EACJd,EACAF,EAAIa,EAAaG,EACjBd,EACAF,EAAIa,EAAaG,EACjBd,EAAID,EACJD,EAAIgB,EACJd,EAAID,IAEND,GAAKa,EAAajB,EAAEc,OAAOb,EAASC,EAAYD,IACxCD,EAAEsB,MAAQjB,IAChBD,GAAKC,EACLC,GAAKD,EAAa,GAEhBC,EAAIN,EAAEe,SACRT,EAAI,EACJJ,GAAcC,EAED,MADbI,GAEEP,EAAEuB,YAMKC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAc9B,OAAQA,EAAQ+B,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2018-12-28-js-32b5934bf33924f85c80.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  let scalar;\n  let multiplier;\n  let multiplier2;\n  let x;\n  let y = 0;\n  let rectHeight;\n  let pass = 0;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.fill(\"rgba(0, 0, 0, 0.4)\");\n    p.noStroke();\n    p.background(255);\n    scalar = p.floor(p.random(3, 7));\n    multiplier = p.random();\n    multiplier2 = p.random(1, 2);\n    rectHeight = (p.height - scalar + 1) / scalar;\n    x = -rectHeight;\n  };\n\n  p.draw = function() {\n    const RECT_WIDTH = scalar * p.map(p.noise(x, y), 0, 1, scalar, 1);\n    const LEAN =\n      scalar *\n      p.map(p.noise(x, y), 0, 1, -scalar * multiplier, scalar * multiplier);\n    p.quad(\n      x + LEAN,\n      y,\n      x + RECT_WIDTH + LEAN,\n      y,\n      x + RECT_WIDTH - LEAN,\n      y + rectHeight,\n      x - LEAN,\n      y + rectHeight\n    );\n    x += RECT_WIDTH + p.random(scalar * multiplier, scalar);\n    if (x > p.width + rectHeight) {\n      x = -rectHeight;\n      y += rectHeight + 1;\n    }\n    if (y > p.height) {\n      y = 0;\n      multiplier *= multiplier2;\n      pass++;\n      if (pass === 4) {\n        p.noLoop();\n      }\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Reload page for a different variation.\" />\n);\n"],"sourceRoot":""}
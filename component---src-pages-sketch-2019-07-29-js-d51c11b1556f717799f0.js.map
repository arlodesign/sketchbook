{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/29.js"],"names":["RENDER","process","DEV","sketch","p","boxes","Box","x","y","this","GRID","rotate","random","HALF_PI","draw","push","translate","i","strokeWeight","map","sin","animLoop","theta","line","pop","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","render","open","noiseRadius","width","height","background","forEach","b","location","path","pathname","description"],"mappings":"6FAAA,yDAIMA,EAASC,GAAYC,MAAO,EAE5BC,EAAS,SAASC,GACtB,IAEIC,EAAQ,GAENC,EALmB,WAMvB,WAAYC,EAAGC,GACbC,KAAKF,EAAIA,EAAIG,GACbD,KAAKD,EAAIA,EAAIE,GACbD,KAAKE,OAASP,EAAEQ,OAAO,CAAC,EAAGR,EAAES,UATR,mBAYvBC,KAAA,WACEV,EAAEW,OACFX,EAAEY,UAAUP,KAAKF,EAAGE,KAAKD,GACzBJ,EAAEO,OAAOF,KAAKE,QAEd,IAAK,IAAIM,GAAI,GAAWA,EAAIP,GAAUO,GAhB7B,GAgByC,EAChDb,EAAEc,aACAd,EAAEe,IACAF,GACA,GACAP,GACAN,EAAEe,IAAIf,EAAEgB,IAAIhB,EAAEiB,SAASC,QAAS,EAAG,EAAG,EAAG,GACzClB,EAAEe,IAAIf,EAAEgB,IAAIhB,EAAEiB,SAASC,QAAS,EAAG,EAAG,EAAG,KAI7ClB,EAAEmB,KAAKN,EAAGP,GAAUA,GAAUO,GAC9Bb,EAAEmB,MAAMN,GAAG,IAAW,IAAYA,GAGpCb,EAAEoB,OAhCmB,KAoCzBpB,EAAEqB,MAAQ,WACJzB,IACFI,EAAEsB,aAAa,GACftB,EAAEuB,UAAU,KAGdvB,EAAEwB,aAAa,IAAK,KAEpBxB,EAAEyB,WAAW,EAAG,CACdC,MAAK9B,GAAS,CAAE+B,QAAQ,EAAOC,MAAM,GACrCC,YAAa,KAGf,IAAK,IAAI1B,EAAI,EAAGA,EAAIH,EAAE8B,MAAO3B,GAhDlB,GAiDT,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAE+B,OAAQ3B,GAjDrB,GAkDPH,EAAMU,KAAK,IAAIT,EAAIC,EAAGC,KAK5BJ,EAAEU,KAAO,WACPV,EAAEgC,WAAW,KAEb/B,EAAMgC,SAAQ,SAAAC,GAAC,OAAIA,EAAExB,YAIV,0BAAGyB,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcpC,OAAQA,EAAQqC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-07-29-js-d51c11b1556f717799f0.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const GRID = 60;\n\n  let boxes = [];\n\n  class Box {\n    constructor(x, y) {\n      this.x = x + GRID / 2;\n      this.y = y + GRID / 2;\n      this.rotate = p.random([0, p.HALF_PI]);\n    }\n\n    draw() {\n      p.push();\n      p.translate(this.x, this.y);\n      p.rotate(this.rotate);\n\n      for (let i = -GRID / 2; i < GRID / 2; i += GRID / 7) {\n        p.strokeWeight(\n          p.map(\n            i,\n            -GRID / 2,\n            GRID / 2,\n            p.map(p.sin(p.animLoop.theta), -1, 1, 5, 1),\n            p.map(p.sin(p.animLoop.theta), -1, 1, 1, 5)\n          )\n        );\n\n        p.line(i, GRID / 2, GRID / 2, i);\n        p.line(-i, -GRID / 2, -GRID / 2, -i);\n      }\n\n      p.pop();\n    }\n  }\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n\n    p.createLoop(5, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n\n    for (let x = 0; x < p.width; x += GRID) {\n      for (let y = 0; y < p.height; y += GRID) {\n        boxes.push(new Box(x, y));\n      }\n    }\n  };\n\n  p.draw = function() {\n    p.background(255);\n\n    boxes.forEach(b => b.draw());\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
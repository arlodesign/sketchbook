{"version":3,"sources":["webpack:///./src/pages/sketch/2019/06/03.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js"],"names":["sketch","p","alpha","particles","Particle","x","y","hue","this","velocity","createVector","random","position","move","prev","add","map","noise","frameCount","mult","setup","createCanvas","a","TWO_PI","push","polarToCartesian","width","height","background","noStroke","draw","fill","cos","beginShape","forEach","particle","vertex","endShape","CLOSE","noLoop","location","path","pathname","description","polarToCartesianX","center","angle","distance","Math","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","setPrototypeOf","_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","isNativeReflectConstruct","module","exports","apply","instance","Function","bind","arguments","_setPrototypeOf","o","Object","__proto__"],"mappings":"wKAKMA,EAAS,SAASC,GACtB,IAAIC,EAAQ,EAERC,EAAY,GAEVC,EALmB,WAMvB,WAAYC,EAAGC,EAAGC,GAChBC,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,EAETE,KAAKC,SAAWR,EAAES,aAAaT,EAAEU,QAAQ,EAAG,GAAIV,EAAEU,QAAQ,EAAG,IAC7DH,KAAKI,SAAWX,EAAES,aAAaF,KAAKH,EAAGG,KAAKF,GAXvB,mBAcvBO,KAAA,WACEL,KAAKM,KAAO,CAAET,EAAGG,KAAKI,SAASP,EAAGC,EAAGE,KAAKI,SAASN,GACnDE,KAAKC,SAASM,IACZd,EAAES,aACAT,EAAEe,IACAf,EAAEgB,MACAT,KAAKI,SAASP,EAAI,IAClBG,KAAKI,SAASN,EAAI,IAClBL,EAAEiB,WAAa,KAEjB,EACA,GACC,GACD,IAEFjB,EAAEe,IACAf,EAAEgB,MACAT,KAAKI,SAASP,EAAI,IAClBG,KAAKI,SAASN,EAAI,IAClBL,EAAEiB,WAAa,KAEjB,EACA,GACC,GACD,MAINV,KAAKC,SAASU,KAxCD,SAyCbX,KAAKI,SAASG,IAAIP,KAAKC,WA3CF,KA+CzBR,EAAEmB,MAAQ,WACRnB,EAAEoB,aAAa,IAAK,KACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,EAAEsB,OAAQD,GAAKrB,EAAEsB,OAAS,GAC5CpB,EAAUqB,KAAV,IACMpB,EACCqB,YAAiBxB,EAAEyB,MAAQ,EAAGzB,EAAE0B,OAAS,EAAGL,EAAG,KAAK,KAI7DrB,EAAE2B,WAAW,GACb3B,EAAE4B,YAGJ5B,EAAE6B,KAAO,WACP7B,EAAE8B,KAAK9B,EAAEe,IAAIf,EAAE+B,IAAI/B,EAAEiB,WAAa,MAAO,EAAG,EAAG,EAAG,KAAMhB,GAExDD,EAAEgC,aACF9B,EAAU+B,SAAQ,SAAAC,GAChBA,EAAStB,OACTZ,EAAEmC,OAAOD,EAASvB,SAASP,EAAG8B,EAASvB,SAASN,MAElDL,EAAEoC,SAASpC,EAAEqC,QAIL,KADVpC,GAAS,OACMD,EAAEsC,UAGJ,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACExC,OAAQA,EACRyC,KAAMD,EAASE,SACfC,YAAY,6C,iCCpFhB,0GAAMC,EAAoB,SAACC,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKhB,IAAIc,GAASC,GAE9BE,EAAoB,SAACJ,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKE,IAAIJ,GAASC,GAa9BI,EAA0B,SAC9BC,EACAC,EACAP,EACAQ,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMnD,EAAI+C,EAAUJ,KAAKhB,IAAIc,GAASQ,EAChChD,EAAI+C,EAAUL,KAAKE,IAAIJ,GAASS,EACtC,OAAOC,EAAU,CAACnD,EAAGC,GAAK,CAAED,IAAGC,MAIlBmB,IAzBU,SACvB2B,EACAC,EACAP,EACAC,EACAS,QACG,IADHA,OAAU,GAEV,IAAMnD,EAAIuC,EAAkBQ,EAASN,EAAOC,GACtCzC,EAAI2C,EAAkBI,EAASP,EAAOC,GAC5C,OAAOS,EAAU,CAACnD,EAAGC,GAAK,CAAED,IAAGC,O,oBCfjC,IAAImD,EAAiB,EAAQ,KAe7B,SAASC,EAAWC,EAAQC,EAAMC,GAchC,OA3BF,WACE,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKC,UAAUC,SAASC,KAAKP,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOI,GACP,OAAO,GAKLC,GAGFC,EAAOC,QAAUf,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIvC,EAAI,CAAC,MACTA,EAAEE,KAAKkD,MAAMpD,EAAGsC,GAChB,IACIe,EAAW,IADGC,SAASC,KAAKH,MAAMf,EAAQrC,IAG9C,OADIuC,GAAOJ,EAAekB,EAAUd,EAAMM,WACnCQ,GARTH,EAAOC,QAAUf,EAAaI,QAAQC,UAYjCL,EAAWgB,MAAM,KAAMI,WAGhCN,EAAOC,QAAUf,G,kBChCjB,SAASqB,EAAgBC,EAAG/E,GAM1B,OALAuE,EAAOC,QAAUM,EAAkBE,OAAOxB,gBAAkB,SAAyBuB,EAAG/E,GAEtF,OADA+E,EAAEE,UAAYjF,EACP+E,GAGFD,EAAgBC,EAAG/E,GAG5BuE,EAAOC,QAAUM","file":"component---src-pages-sketch-2019-06-03-js-5ed9255817ec8c563d54.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport Link from \"~components/link\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  let alpha = 5;\n  let multiplier = 0.99;\n  let particles = [];\n\n  class Particle {\n    constructor(x, y, hue) {\n      this.x = x;\n      this.y = y;\n\n      this.velocity = p.createVector(p.random(-1, 1), p.random(-1, 1));\n      this.position = p.createVector(this.x, this.y);\n    }\n\n    move() {\n      this.prev = { x: this.position.x, y: this.position.y };\n      this.velocity.add(\n        p.createVector(\n          p.map(\n            p.noise(\n              this.position.x / 300,\n              this.position.y / 200,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          ),\n          p.map(\n            p.noise(\n              this.position.x / 200,\n              this.position.y / 300,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          )\n        )\n      );\n      this.velocity.mult(multiplier, multiplier);\n      this.position.add(this.velocity);\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    for (let a = 0; a < p.TWO_PI; a += p.TWO_PI / 50) {\n      particles.push(\n        new Particle(\n          ...polarToCartesian(p.width / 2, p.height / 2, a, 100, true)\n        )\n      );\n    }\n    p.background(0);\n    p.noStroke();\n  };\n\n  p.draw = function() {\n    p.fill(p.map(p.cos(p.frameCount / 100), -1, 1, 0, 255), alpha);\n\n    p.beginShape();\n    particles.forEach(particle => {\n      particle.move();\n      p.vertex(particle.position.x, particle.position.y);\n    });\n    p.endShape(p.CLOSE);\n  };\n\n  alpha -= 0.0005;\n  alpha === 0 && p.noLoop();\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different variation.\"\n  />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;"],"sourceRoot":""}
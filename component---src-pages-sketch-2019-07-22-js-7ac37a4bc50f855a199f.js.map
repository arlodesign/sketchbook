{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/22.js","webpack:///./src/lib/polarToCartesian.js"],"names":["RENDER","process","DEV","sketch","p","setup","pixelDensity","frameRate","createCanvas","noStroke","createLoop","gif","render","open","noiseRadius","draw","background","lerpColor","color","push","translate","width","height","size","map","animLoop","noise1D","sin","theta","i","rotate","TWO_PI","fill","beginShape","vertex","polarToCartesian","endShape","CLOSE","pop","SketchPage","polarToCartesianEllipse","centerX","centerY","angle","radiusX","radiusY","asArray","x","Math","cos","y","distance","center","polarToCartesianX","polarToCartesianY"],"mappings":"glBAMA,IAAMA,EAASC,GAAYC,MAAO,EAE5BC,EAAS,SAASC,GACtBA,EAAEC,MAAQ,WACJL,IACFI,EAAEE,aAAa,GACfF,EAAEG,UAAU,KAGdH,EAAEI,aAAa,IAAK,KACpBJ,EAAEK,WAEFL,EAAEM,WAAW,GAAI,CACfC,MAAKX,GAAS,CAAEY,QAAQ,EAAOC,MAAM,GACrCC,YAAa,KAIjBV,EAAEW,KAAO,WACPX,EAAEY,WAAWZ,EAAEa,UAAUb,EAAEc,MAAM,SAAUd,EAAEc,MAAM,QAAS,KAC5Dd,EAAEe,OACFf,EAAEgB,UAAUhB,EAAEiB,MAAQ,EAAGjB,EAAEkB,OAAS,GAMpC,IAJA,IAAMC,EACHnB,EAAEiB,MAAQ,EACXjB,EAAEoB,IAAIpB,EAAEqB,SAASC,QAAQtB,EAAEuB,IAAIvB,EAAEqB,SAASG,SAAU,EAAG,EAAG,GAAK,KAExDC,EAAI,EAAGA,EAAI,EAAGA,GAAK,IAC1BzB,EAAEe,OACFf,EAAE0B,OAAO1B,EAAEoB,IAAIpB,EAAEuB,IAAIvB,EAAEqB,SAASG,QAAS,EAAG,GAAIxB,EAAE2B,OAAQ3B,EAAE2B,QAAUF,GACtEzB,EAAE4B,KAAK5B,EAAEa,UAAUb,EAAEc,MAAM,SAAUd,EAAEc,MAAM,QAASW,IACtDzB,EAAE6B,aACF7B,EAAE8B,OAAF,MAAA9B,EAAC,EAAW+B,YAAiB,EAAG,EAAG,EAAGZ,EAAOM,GAAG,KAChDzB,EAAE8B,OAAF,MAAA9B,EAAC,EAAW+B,YAAiB,EAAG,EAAG,GAAA/B,EAAE2B,OAAkBR,EAAOM,GAAG,KACjEzB,EAAE8B,OAAF,MAAA9B,EAAC,EAAW+B,YAAiB,EAAG,EAAG,GAAA/B,EAAE2B,OAAkBR,EAAOM,GAAG,KACjEzB,EAAE8B,OAAF,MAAA9B,EAAC,EAAW+B,YAAiB,EAAG,EAAG,GAAA/B,EAAE2B,OAAkBR,EAAOM,GAAG,KACjEzB,EAAE8B,OAAF,MAAA9B,EAAC,EAAW+B,YAAiB,EAAG,EAAG,GAAA/B,EAAE2B,OAAkBR,EAAOM,GAAG,KACjEzB,EAAEgC,SAAShC,EAAEiC,OACbjC,EAAEkC,MAEJlC,EAAEkC,QAWSC,UAPI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQpC,OAAQA,IAChB,6E,kCCrDJ,sCAiBMqC,EAA0B,SAC9BC,EACAC,EACAC,EACAC,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIN,EAAUO,KAAKC,IAAIN,GAASC,EAChCM,EAAIR,EAAUM,KAAKrB,IAAIgB,GAASE,EACtC,OAAOC,EAAU,CAACC,EAAGG,GAAK,CAAEH,IAAGG,MAIlBf,IAzBU,SACvBM,EACAC,EACAC,EACAQ,EACAL,QACG,IADHA,OAAU,GAEV,IAAMC,EAbkB,SAACK,EAAQT,EAAOQ,GACxC,OAAOC,EAASJ,KAAKC,IAAIN,GAASQ,EAYxBE,CAAkBZ,EAASE,EAAOQ,GACtCD,EAXkB,SAACE,EAAQT,EAAOQ,GACxC,OAAOC,EAASJ,KAAKrB,IAAIgB,GAASQ,EAUxBG,CAAkBZ,EAASC,EAAOQ,GAC5C,OAAOL,EAAU,CAACC,EAAGG,GAAK,CAAEH,IAAGG","file":"component---src-pages-sketch-2019-07-22-js-7ac37a4bc50f855a199f.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n    p.noStroke();\n\n    p.createLoop(30, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 1,\n    });\n  };\n\n  p.draw = function() {\n    p.background(p.lerpColor(p.color(\"white\"), p.color(\"pink\"), 0.2));\n    p.push();\n    p.translate(p.width / 2, p.height / 2);\n\n    const size =\n      (p.width / 3) *\n      p.map(p.animLoop.noise1D(p.sin(p.animLoop.theta)), -1, 1, 0.5, 1.5);\n\n    for (let i = 1; i > 0; i -= 0.02) {\n      p.push();\n      p.rotate(p.map(p.sin(p.animLoop.theta), -1, 1, -p.TWO_PI, p.TWO_PI) * i);\n      p.fill(p.lerpColor(p.color(\"white\"), p.color(\"pink\"), i));\n      p.beginShape();\n      p.vertex(...polarToCartesian(0, 0, 0, size * i, true));\n      p.vertex(...polarToCartesian(0, 0, p.TWO_PI * (2 / 5), size * i, true));\n      p.vertex(...polarToCartesian(0, 0, p.TWO_PI * (4 / 5), size * i, true));\n      p.vertex(...polarToCartesian(0, 0, p.TWO_PI * (1 / 5), size * i, true));\n      p.vertex(...polarToCartesian(0, 0, p.TWO_PI * (3 / 5), size * i, true));\n      p.endShape(p.CLOSE);\n      p.pop();\n    }\n    p.pop();\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n    <p>For my daughter. She requested a pink star.</p>\n  </Layout>\n);\n\nexport default SketchPage;\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
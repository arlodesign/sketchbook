{"version":3,"sources":["webpack:///./src/pages/sketch/2019/03/17.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./node_modules/core-js/modules/es6.string.sub.js"],"names":["sketch","p","hue","manualControl","setup","createCanvas","colorMode","HSB","random","fill","noStroke","draw","background","gx","GRID_SIZE","width","gy","height","push","translate","focus","createVector","mouseX","mouseY","apply","polarToCartesian","frameCount","noise","sub","setMag","min","dist","x","y","beginShape","vertex","handles","mult","quadraticVertex","endShape","CLOSE","pop","mousePressed","touchMoved","__webpack_exports__","_ref","location","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","d","polarToCartesianX","polarToCartesianY","center","angle","distance","Math","cos","sin","centerX","centerY","asArray","createHTML"],"mappings":"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","file":"component---src-pages-sketch-2019-03-17-js-46fcc38f4ce5e08d9f79.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const GRID_SIZE = 60;\n  let hue;\n\n  let manualControl = false;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 100);\n    hue = p.random(0, 45);\n    p.fill(hue, 100, 75);\n    p.noStroke();\n  };\n\n  p.draw = function() {\n    p.background(100 - hue, 100, 50);\n\n    for (let gx = GRID_SIZE / 2; gx < p.width; gx += GRID_SIZE) {\n      for (let gy = GRID_SIZE / 2; gy < p.height; gy += GRID_SIZE) {\n        p.push();\n        p.translate(gx, gy);\n\n        let focus = manualControl\n          ? p.createVector(p.mouseX, p.mouseY)\n          : p.createVector(\n              ...polarToCartesian(\n                p.width / 2,\n                p.height / 2,\n                p.frameCount / 100,\n                p.width * p.noise(p.frameCount / 1000),\n                true\n              )\n            );\n\n        focus.sub(p.createVector(gx, gy));\n        focus.setMag(0.9 * p.min(GRID_SIZE, p.dist(0, 0, focus.x, focus.y)));\n\n        p.beginShape();\n        p.vertex(focus.x, focus.y);\n        const handles = [\n          p.createVector(focus.y, -focus.x).mult(0.333),\n          p.createVector(-focus.y, focus.x).mult(0.333),\n        ];\n        p.quadraticVertex(handles[0].x, handles[0].y, 0, 0);\n        p.quadraticVertex(handles[1].x, handles[1].y, focus.x, focus.y);\n        p.endShape(p.CLOSE);\n        p.pop();\n      }\n    }\n  };\n\n  p.mousePressed = function() {\n    manualControl = !manualControl;\n  };\n\n  p.touchMoved = function() {\n    if (\n      p.mouseX >= 0 &&\n      p.mouseY >= 0 &&\n      p.mouseX <= p.width &&\n      p.mouseY <= p.height\n    ) {\n      return false;\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Learning vector math. Click or tap on the canvas to control the focal point. Refresh page for a different color variation.\"\n  />\n);\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function (createHTML) {\n  return function sub() {\n    return createHTML(this, 'sub', '', '');\n  };\n});\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/05/09.js","webpack:///./src/lib/alternate.js","webpack:///./src/lib/lerpLine.js"],"names":["sketch","p","HUE","random","RAND","i","y","setup","createCanvas","blendMode","HARD_LIGHT","colorMode","HSB","background","draw","frameCount","functionA","functionB","MIDPOINT","map","sin","width","NOISE","noise","DIST","strokeWeight","stroke","lerpLine","height","noLoop","SketchPage","x1","y1","x2","y2","rate","showFirstDot","Error","l","point","lerp"],"mappings":"gKAMA,IAAMA,EAAS,SAASC,GACtB,IACMC,EAAMD,EAAEE,OAAO,IACfC,EAAOH,EAAEE,OAAO,GAAI,IAEtBE,EAAI,EACJC,EAAI,EAERL,EAAEM,MAAQ,WACRN,EAAEO,aAAa,IAAK,KACpBP,EAAEQ,UAAUR,EAAES,YACdT,EAAEU,UAAUV,EAAEW,IAAK,KACnBX,EAAEY,WAXe,EAWJX,EAAkB,GAAI,KAGrCD,EAAEa,KAAO,WACP,ICtB8BC,EAAYC,EAAWC,EDsB/CC,EAAWjB,EAAEkB,IACjBlB,EAAEmB,IAAInB,EAAEc,WAAa,MACpB,EACD,EACU,KAAVd,EAAEoB,MACQ,KAAVpB,EAAEoB,OAEEC,EACJrB,EAAEsB,MAAMtB,EAAEc,YAAcV,EAAI,KAAQC,GAAKD,EAAI,OAAWA,EAAI,KACxDmB,EAAOvB,EAAEkB,IACblB,EAAEsB,MAAMtB,EAAEc,YAAcX,EAAOC,GAAIC,EAAI,KACvC,EACA,EACA,EACAL,EAAEoB,OAAShB,EAAI,EAAI,KACnB,GAGFJ,EAAEwB,aAAapB,EAAI,GACnBJ,EAAEyB,OAAOxB,EAAMG,EAAI,GAAoBA,EAAG,GAAI,ICzChBU,ED4C5Bd,EAAEc,WC5CsCC,ED6CxC,kBAAMW,YAAS1B,EAAGiB,EAAUZ,EAAGkB,EAAMlB,EAAGgB,IC7CWL,ED8CnD,kBAAMU,YAAS1B,EAAGiB,EAAUZ,EAAGL,EAAEoB,MAAQG,EAAMlB,EAAGgB,IC7ClDP,EAAa,GACfC,IACAC,MAEAA,IACAD,MD2CAV,GAAKD,GACGJ,EAAE2B,SAERtB,EAAI,IADJD,EA5Ce,GA8CGJ,EAAE4B,YAWXC,UANI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ9B,OAAQA,O,oCE5DL,aAASC,EAAG8B,EAAIC,EAAIC,EAAIC,EAAIC,EAAMC,GAC/C,QADoE,IAArBA,OAAe,GAC1DD,GAAQ,EACV,MAAM,IAAIE,MAAM,iDAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAKH,GAChB,IAANG,GAAYF,IAChBnC,EAAEE,SAAWmC,GAAKrC,EAAEsC,MAAMtC,EAAEuC,KAAKT,EAAIE,EAAIK,GAAIrC,EAAEuC,KAAKR,EAAIE,EAAII","file":"component---src-pages-sketch-2019-05-09-js-1c31a6dfad047f84e579.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport lerpLine from \"~lib/lerpLine\";\nimport alternate from \"~lib/alternate\";\n\nconst sketch = function(p) {\n  const ITERATIONS = 4;\n  const HUE = p.random(100 / ITERATIONS);\n  const RAND = p.random(30, 50);\n\n  let i = 1;\n  let y = 0;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.blendMode(p.HARD_LIGHT);\n    p.colorMode(p.HSB, 100);\n    p.background(HUE * ITERATIONS, 10, 100 / ITERATIONS);\n  };\n\n  p.draw = function() {\n    const MIDPOINT = p.map(\n      p.sin(p.frameCount / 100),\n      -1,\n      1,\n      p.width * 0.333,\n      p.width * 0.666\n    );\n    const NOISE =\n      p.noise(p.frameCount * (i / 10000), y * (i / 10000)) * (i / 250);\n    const DIST = p.map(\n      p.noise(p.frameCount / (RAND * i), y / 500),\n      0,\n      1,\n      0,\n      p.width / (i / 2 + 0.5),\n      true\n    );\n\n    p.strokeWeight(i + 1);\n    p.stroke(HUE * i, (100 / ITERATIONS) * i, 75, 10);\n\n    alternate(\n      p.frameCount,\n      () => lerpLine(p, MIDPOINT, y, DIST, y, NOISE),\n      () => lerpLine(p, MIDPOINT, y, p.width - DIST, y, NOISE)\n    );\n\n    y += i;\n    if (y > p.height) {\n      i++;\n      y = 0;\n      i > ITERATIONS && p.noLoop();\n    }\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n  </Layout>\n);\n\nexport default SketchPage;\n","export default function alternate(frameCount, functionA, functionB) {\n  if (frameCount % 2) {\n    functionA();\n    functionB();\n  } else {\n    functionB();\n    functionA();\n  }\n}\n","export default function(p, x1, y1, x2, y2, rate, showFirstDot = true) {\n  if (rate <= 0)\n    throw new Error(\"rate for lerpLine() must be greater than zero\");\n\n  for (let l = 0; l < 1; l += rate) {\n    if (l === 0 && !showFirstDot) continue;\n    p.random() > l && p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n  }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/12/28.js"],"names":["sketch","p","img","RENDER","getURLParams","render","compare","r","g","b","hue","color","preload","loadImage","withPrefix","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","open","noiseRadius","draw","background","image","width","height","loadPixels","y","step","floor","abs","animLoop","noise2D","offset","start","row","x","Math","min","push","get","sort","a","forEach","c","i","set","max","updatePixels","frameCount","console","log","location","path","pathname","description"],"mappings":"89BAKA,IAAMA,EAAS,SAASC,GACtB,IAEIC,EAFEC,EAASF,EAAEG,eAAeC,OAC1BC,EAAU,SAACC,EAAGC,EAAGC,GAAP,OAAaR,EAAES,IAAIT,EAAEU,MAAMJ,EAAGC,EAAGC,KAGjDR,EAAEW,QAAU,WACVV,EAAMD,EAAEY,UAAUC,qBAAW,wBAG/Bb,EAAEc,MAAQ,WACRd,EAAEe,aAAa,GACff,EAAEgB,UAAU,IACZhB,EAAEiB,aAAa,IAAK,KACpBjB,EAAEkB,WAAW,GAAI,CACfC,MAAKjB,GAAS,CAAEE,QAAQ,EAAOgB,MAAM,GACrCC,YAAa,MAIjBrB,EAAEsB,KAAO,WACPtB,EAAEuB,WAAW,KAEbvB,EAAEwB,MAAMvB,EAAK,EAAG,EAAGD,EAAEyB,MAAOzB,EAAE0B,QAC9B1B,EAAE2B,aAEF,IANkB,eAMTC,GAQP,IAPA,IAAMC,EACJ7B,EAAE8B,MAAM9B,EAAE+B,IAAI/B,EAAEgC,SAASC,QAAQ,EAAGL,EAAI,OAAS5B,EAAEyB,MAAQ,IAAM,EAE7DS,EAASlC,EAAE8B,MACf9B,EAAEgC,SAASC,QAAQ,EAAGL,EAAI,IAAK,CAAEP,YAAa,MAASrB,EAAEyB,MAAQ,KAXnD,WAcPU,GAEP,IADA,IAAIC,EAAM,GACDC,EAAIF,EAAOE,EAAIC,KAAKC,IAAIJ,EAAQN,EAAM7B,EAAEyB,OAAQY,IACvDD,EAAII,KAAKxC,EAAEyC,IAAIJ,EAAGT,IAEpBQ,EACGM,MAAK,SAACC,EAAGnC,GAAJ,OAAUH,EAAO,WAAP,IAAWsC,IAAKtC,EAAO,WAAP,IAAWG,OAC1CoC,SAAQ,SAACC,EAAGC,GACX9C,EAAE+C,IAAID,EAAIX,EAAOP,EAAG5B,EAAEU,MAAF,MAAAV,EAAC,EAAU6C,SAR5BV,EAAQnC,EAAEyB,MAAQ,EAAIS,EAAQC,EAAQnC,EAAEyB,MAAOU,GAASN,EAAO,EAA/DM,GAWT,IAzBgB,eAyBPA,GAEP,IADA,IAAIC,EAAM,GACDC,EAAIF,EAAOE,EAAIC,KAAKU,IAAIb,EAAQN,EAAM,GAAIQ,IACjDD,EAAII,KAAKxC,EAAEyC,IAAIJ,EAAGT,IAEpBQ,EACGM,MAAK,SAACC,EAAGnC,GAAJ,OAAUH,EAAO,WAAP,IAAWsC,IAAKtC,EAAO,WAAP,IAAWG,OAC1CoC,SAAQ,SAACC,EAAGC,GACX9C,EAAE+C,IAAIZ,EAAQW,EAAGlB,EAAG5B,EAAEU,MAAF,MAAAV,EAAC,EAAU6C,SAR5BV,EAAQnC,EAAEyB,MAAQ,EAAIS,EAAQC,EAAQ,EAAGA,GAASN,EAAO,EAAzDM,IAnBFP,EAAI,EAAGA,EAAI5B,EAAE0B,OAAQE,IAAM,EAA3BA,GA+BT5B,EAAEiD,eACFjD,EAAEkD,WAAa,MAAQC,QAAQC,IAAIpD,EAAEkD,WAAa,aAIvC,0BAAGG,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAActD,OAAQA,EAAQuD,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-12-28-js-f2babebf172fa8d08f13.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport { withPrefix } from \"gatsby\";\nimport \"p5.createloop\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const compare = (r, g, b) => p.hue(p.color(r, g, b));\n  let img;\n\n  p.preload = function() {\n    img = p.loadImage(withPrefix(\"/assets/leaves.png\"));\n  };\n\n  p.setup = function() {\n    p.pixelDensity(1);\n    p.frameRate(30);\n    p.createCanvas(660, 840);\n    p.createLoop(40, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n  };\n\n  p.draw = function() {\n    p.background(255);\n\n    p.image(img, 0, 0, p.width, p.height);\n    p.loadPixels();\n\n    for (let y = 0; y < p.height; y++) {\n      const step =\n        p.floor(p.abs(p.animLoop.noise2D(1, y / 100)) * (p.width / 5)) + 1;\n\n      const offset = p.floor(\n        p.animLoop.noise2D(2, y / 200, { noiseRadius: 10 }) * (p.width / 10)\n      );\n\n      for (let start = p.width / 2 - offset; start < p.width; start += step) {\n        let row = [];\n        for (let x = start; x < Math.min(start + step, p.width); x++) {\n          row.push(p.get(x, y));\n        }\n        row\n          .sort((a, b) => compare(...a) - compare(...b))\n          .forEach((c, i) => {\n            p.set(i + start, y, p.color(...c));\n          });\n      }\n      for (let start = p.width / 2 - offset; start > 0; start -= step) {\n        let row = [];\n        for (let x = start; x > Math.max(start - step, 0); x--) {\n          row.push(p.get(x, y));\n        }\n        row\n          .sort((a, b) => compare(...a) - compare(...b))\n          .forEach((c, i) => {\n            p.set(start - i, y, p.color(...c));\n          });\n      }\n    }\n    p.updatePixels();\n    p.frameCount < 1200 && console.log(p.frameCount + \" / 1200\");\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
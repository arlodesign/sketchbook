{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/pages/sketch/2019/06/06.js"],"names":["_setPrototypeOf","o","p","module","exports","Object","setPrototypeOf","__proto__","polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","x","y","polarToCartesian","_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","isNativeReflectConstruct","a","push","apply","instance","Function","bind","arguments","sketch","HUE","random","alpha","particles","Particle","hue","this","velocity","createVector","position","move","prev","add","map","noise","frameCount","mult","setup","createCanvas","TWO_PI","width","height","colorMode","HSB","background","noFill","blendMode","HARD_LIGHT","draw","stroke","beginShape","forEach","particle","curveVertex","endShape","CLOSE","console","log","noLoop","location","path","pathname","description"],"mappings":"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","file":"component---src-pages-sketch-2019-06-06-js-58e7172871841cd2b103.js","sourcesContent":["function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport Link from \"~components/link\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const HUE = p.random(20, 80);\n\n  let alpha = 30;\n  let multiplier = 0.98;\n  let particles = [];\n\n  class Particle {\n    constructor(x, y, hue) {\n      this.x = x;\n      this.y = y;\n\n      this.velocity = p.createVector(p.random(-1, 1), p.random(-1, 1));\n      this.position = p.createVector(this.x, this.y);\n    }\n\n    move() {\n      this.prev = { x: this.position.x, y: this.position.y };\n      this.velocity.add(\n        p.createVector(\n          p.map(\n            p.noise(\n              this.position.x / 300,\n              this.position.y / 200,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          ),\n          p.map(\n            p.noise(\n              this.position.x / 200,\n              this.position.y / 300,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          )\n        )\n      );\n      this.velocity.mult(multiplier, multiplier);\n      this.position.add(this.velocity);\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    for (let a = 0; a < p.TWO_PI; a += p.TWO_PI / 50) {\n      particles.push(\n        new Particle(\n          ...polarToCartesian(p.width, p.height * 0.666, a, 100, true)\n        )\n      );\n    }\n    p.colorMode(p.HSB, 100);\n\n    p.background(HUE, 80, 20);\n    p.noFill();\n    p.blendMode(p.HARD_LIGHT);\n  };\n\n  p.draw = function() {\n    p.stroke(\n      p.map(p.cos(p.frameCount / 50), -1, 1, HUE - 20, HUE + 20),\n      80,\n      p.map(p.sin(p.frameCount / 200), -1, 1, 20, 100),\n      alpha\n    );\n\n    p.beginShape();\n    particles.forEach(particle => {\n      particle.move();\n      p.curveVertex(particle.position.x, particle.position.y);\n    });\n    p.endShape(p.CLOSE);\n\n    alpha -= 0.01;\n    console.log(alpha);\n    alpha <= 0 && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different variation.\"\n  />\n);\n"],"sourceRoot":""}
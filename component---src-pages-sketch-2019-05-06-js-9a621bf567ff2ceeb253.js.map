{"version":3,"sources":["webpack:///./src/pages/sketch/2019/05/06.js","webpack:///./src/lib/lerpLine.js"],"names":["sketch","p","scalar","x","y","x2","y2","setup","createCanvas","background","noFill","stroke","random","width","height","draw","moveX","moveY","strokeWeight","noise","lerpLine","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description","x1","y1","rate","showFirstDot","Error","l","point","lerp"],"mappings":"uIAIMA,EAAS,SAASC,GACtB,IAAIC,EACAC,EACAC,EACAC,EACAC,EAEJL,EAAEM,MAAQ,WACRN,EAAEO,aAAa,IAAK,KACpBP,EAAEQ,WAAW,SACbR,EAAES,SACFT,EAAEU,OAAO,GACTT,EAASD,EAAEW,OAAO,GAAI,IACtBT,EAAIE,EAAKJ,EAAEY,MAAQ,EACnBT,EAAIE,EAAKL,EAAEa,OAAS,GAGtBb,EAAEc,KAAO,WACP,IAAMC,EAAQf,EAAEW,OAAO,EAAEV,EAAQA,IAC3Be,EAAQhB,EAAEW,OAAO,EAAEV,EAAQA,IACjCD,EAAEiB,aAAahB,EAASD,EAAEkB,MAAMhB,EAAGC,IAEnCA,EAAIE,EAAKW,GADTd,EAAIE,EAAKW,GAED,GAAKZ,EAAI,GAAKD,EAAIF,EAAEY,OAAST,EAAIH,EAAEa,QACzCM,YAASnB,EAAGI,EAAIC,EAAIH,EAAGC,EAAGH,EAAEW,UAC5BQ,YACEnB,EACAA,EAAEY,MAAQR,EACVJ,EAAEa,OAASR,EACXL,EAAEY,MAAQV,EACVF,EAAEa,OAASV,EACXH,EAAEW,WAGJX,EAAEoB,SAEJhB,EAAKF,EACLG,EAAKF,IAIMkB,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CACE3B,OAAQA,EACR4B,KAAMJ,EAASK,SACfC,YAAY,8ECjDDR,EAAA,WAASrB,EAAG8B,EAAIC,EAAI3B,EAAIC,EAAI2B,EAAMC,GAC/C,QADoE,IAArBA,OAAe,GAC1DD,GAAQ,EACV,MAAM,IAAIE,MAAM,iDAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAKH,GAChB,IAANG,GAAYF,IAChBjC,EAAEW,SAAWwB,GAAKnC,EAAEoC,MAAMpC,EAAEqC,KAAKP,EAAI1B,EAAI+B,GAAInC,EAAEqC,KAAKN,EAAI1B,EAAI8B","file":"component---src-pages-sketch-2019-05-06-js-9a621bf567ff2ceeb253.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  let scalar;\n  let x;\n  let y;\n  let x2;\n  let y2;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(\"white\");\n    p.noFill();\n    p.stroke(0);\n    scalar = p.random(10, 20);\n    x = x2 = p.width / 2;\n    y = y2 = p.height / 2;\n  };\n\n  p.draw = function() {\n    const moveX = p.random([-scalar, scalar]);\n    const moveY = p.random([-scalar, scalar]);\n    p.strokeWeight(scalar * p.noise(x, y));\n    x = x2 + moveX;\n    y = y2 + moveY;\n    if (x > 0 && y > 0 && x < p.width && y < p.height) {\n      lerpLine(p, x2, y2, x, y, p.random());\n      lerpLine(\n        p,\n        p.width - x2,\n        p.height - y2,\n        p.width - x,\n        p.height - y,\n        p.random()\n      );\n    } else {\n      p.noLoop();\n    }\n    x2 = x;\n    y2 = y;\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different variation.\"\n  />\n);\n","export default function(p, x1, y1, x2, y2, rate, showFirstDot = true) {\n  if (rate <= 0)\n    throw new Error(\"rate for lerpLine() must be greater than zero\");\n\n  for (let l = 0; l < 1; l += rate) {\n    if (l === 0 && !showFirstDot) continue;\n    p.random() > l && p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n  }\n}\n"],"sourceRoot":""}
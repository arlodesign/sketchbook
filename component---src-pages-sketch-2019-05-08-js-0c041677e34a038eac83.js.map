{"version":3,"sources":["webpack:///./src/pages/sketch/2019/05/08.js","webpack:///./src/lib/lerpLine.js"],"names":["sketch","p","HUE","random","RAND","i","y","setup","createCanvas","blendMode","OVERLAY","colorMode","HSB","background","draw","NOISE","noise","frameCount","DIST","map","width","strokeWeight","stroke","lerpLine","height","noLoop","location","path","pathname","description","x1","y1","x2","y2","rate","showFirstDot","noisy","thisRate","Math","max","dist","l","point","lerp"],"mappings":"6FAAA,yDAIMA,EAAS,SAASC,GACtB,IACMC,EAAMD,EAAEE,OAAO,IADF,GAEbC,EAAOH,EAAEE,OAAO,GAAI,IAEtBE,EAAI,EACJC,EAAI,EAERL,EAAEM,MAAQ,WACRN,EAAEO,aAAa,IAAK,KACpBP,EAAEQ,UAAUR,EAAES,SACdT,EAAEU,UAAUV,EAAEW,IAAK,KACnBX,EAAEY,WAXe,EAWJX,EAAkB,GAAI,IAXlB,IAcnBD,EAAEa,KAAO,WACP,IAAMC,EACJd,EAAEe,MAAMf,EAAEgB,YAAcZ,EAAI,KAAOC,GAAKD,EAAI,OAAUA,EAAI,KACtDa,EAAOjB,EAAEkB,IACblB,EAAEe,MAAMf,EAAEgB,YAAcb,EAAOC,GAAIC,EAAI,KACvC,EACA,EACA,EACAL,EAAEmB,OAASf,EAAI,EAAI,KACnB,GAGFJ,EAAEoB,aAAahB,EAAI,GACnBJ,EAAEqB,OAAOpB,EAAMG,EAAI,IA3BF,EA2BsBA,EAAG,GAAI,IAE9CkB,YAAStB,EAAG,EAAGK,EAAGL,EAAEmB,MAAQ,EAAIF,EAAMZ,EAAGS,IAEzCT,GAAKD,GACGJ,EAAEuB,SACRnB,IACAC,EAAI,EACJD,EAnCe,GAmCGJ,EAAEwB,YAKX,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc1B,OAAQA,EAAQ2B,KAAMD,EAASE,SAAUC,YAAY,O,oCClCtD,aACb5B,EACA6B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QACA,IAFAD,OAAe,QAEf,IADAC,OAAQ,GAIR,IAFA,IAAMC,EAAWC,KAAKC,IAAIL,EAAM,IAAOjC,EAAEuC,KAAKV,EAAIC,EAAIC,EAAIC,IAEjDQ,EAAI,EAAGA,EAAI,EAAGA,GAAKJ,GAChB,IAANI,GAAYN,KACXC,GAASnC,EAAEE,SAAWsC,IAAOL,IAChCnC,EAAEyC,MAAMzC,EAAE0C,KAAKb,EAAIE,EAAIS,GAAIxC,EAAE0C,KAAKZ,EAAIE,EAAIQ","file":"component---src-pages-sketch-2019-05-08-js-0c041677e34a038eac83.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const ITERATIONS = 3;\n  const HUE = p.random(100 / ITERATIONS);\n  const RAND = p.random(30, 50);\n\n  let i = 1;\n  let y = 0;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.blendMode(p.OVERLAY);\n    p.colorMode(p.HSB, 100);\n    p.background(HUE * ITERATIONS, 10, 100 / ITERATIONS);\n  };\n\n  p.draw = function() {\n    const NOISE =\n      p.noise(p.frameCount * (i / 1000), y * (i / 1000)) * (i / 250);\n    const DIST = p.map(\n      p.noise(p.frameCount / (RAND * i), y / 500),\n      0,\n      1,\n      0,\n      p.width / (i / 2 + 0.5),\n      true\n    );\n\n    p.strokeWeight(i + 1);\n    p.stroke(HUE * i, (100 / ITERATIONS) * i, 75, 50);\n\n    lerpLine(p, 0, y, p.width / 2 + DIST, y, NOISE);\n\n    y += i;\n    if (y > p.height) {\n      i++;\n      y = 0;\n      i > ITERATIONS && p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","/**\n * Creates a line of points at a specified interval (the rate)\n *\n * @param {obj} p The current p5.js drawing context\n * @param {*} x1\n * @param {*} y1\n * @param {*} x2\n * @param {*} y2\n * @param {*} rate Number between 0 and 1 to determine how often to draw a point\n * @param {*} showFirstDot Defaults to true\n * @param {*} noisy Defaults to true\n */\nexport default function(\n  p,\n  x1,\n  y1,\n  x2,\n  y2,\n  rate,\n  showFirstDot = true,\n  noisy = true\n) {\n  const thisRate = Math.max(rate, 0.01 / p.dist(x1, y1, x2, y2));\n\n  for (let l = 0; l < 1; l += thisRate) {\n    if (l === 0 && !showFirstDot) continue;\n    if ((noisy && p.random() > l) || !noisy) {\n      p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n    }\n  }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/14.js","webpack:///./node_modules/coordinate-systems/src/index.js","webpack:///./node_modules/core-js/modules/es7.array.flat-map.js","webpack:///./node_modules/core-js/modules/es7.string.pad-end.js","webpack:///./node_modules/core-js/modules/es7.string.pad-start.js","webpack:///./node_modules/core-js/modules/es7.string.trim-left.js","webpack:///./node_modules/core-js/modules/_string-pad.js","webpack:///./node_modules/core-js/modules/es6.array.reduce-right.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/core-js/modules/es7.string.trim-right.js","webpack:///./node_modules/core-js/modules/_flatten-into-array.js"],"names":["spherical","Coordinate","RENDER","process","DEV","sketch","p","size","setup","frameRate","createCanvas","WEBGL","noFill","stroke","width","createLoop","gif","render","open","noiseRadius","draw","background","camera","animLoop","theta","cartesian","x","ceil","COUNT","y","z","push","translate","box","noise2D","pop","location","path","pathname","description","Object","defineProperty","exports","value","CoordinateType","lodash_1","degPerRadian","Math","PI","_a","coordinates","isDegree","type","isRadian","this","cooridnatesByType","Error","length","CARTESIAN_2D","CARTESIAN_3D","cylindrical","CYLINDRICAL","polar","POLAR","SPHERICAL","cylindricalToSpherical","sr","sp","coordinate","rtz","r","t","sqrt","atan2","polarToCart2d","cos","sin","cartesian3dToCylindrical","rt","center","xyz","cartesian2dToPolar","undefined","sphericalToCart3d","sphericalToCylindrical","cr","rtp","cartesian3dToSpherical","x2","y2","z2","xy","isArray","TypeError","prototype","temp","options","$export","flattenIntoArray","toObject","toLength","aFunction","arraySpeciesCreate","P","flatMap","callbackfn","sourceLen","A","O","arguments","$pad","userAgent","WEBKIT_BUG","test","F","padEnd","maxLength","padStart","$trim","repeat","defined","module","that","fillString","left","S","String","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","slice","$reduce","reduceRight","webpackPolyfill","deprecate","paths","children","enumerable","get","l","i","isObject","ctx","IS_CONCAT_SPREADABLE","target","original","source","start","depth","mapper","thisArg","element","spreadable","targetIndex","sourceIndex","mapFn"],"mappings":"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","file":"component---src-pages-sketch-2019-07-14-js-ecb136f58b3dfecb326d.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport { Coordinate } from \"coordinate-systems\";\nconst { spherical } = Coordinate;\n\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const COUNT = 3;\n\n  let size;\n\n  p.setup = function() {\n    if (RENDER) {\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840, p.WEBGL);\n    p.noFill();\n    p.stroke(255);\n\n    size = p.width / COUNT;\n\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n  };\n\n  p.draw = function() {\n    p.background(0);\n\n    p.camera(\n      ...spherical([size * COUNT + size, 0, p.animLoop.theta]).cartesian(),\n      0,\n      0,\n      0,\n      0,\n      1,\n      0\n    );\n\n    for (let x = -p.ceil(COUNT / 2); x <= p.ceil(COUNT / 2); x++) {\n      for (let y = -p.ceil(COUNT / 2); y <= p.ceil(COUNT / 2); y++) {\n        for (let z = -p.ceil(COUNT / 2); z <= p.ceil(COUNT / 2); z++) {\n          p.push();\n          p.translate(size * x, size * y, size * z);\n          p.box(\n            size * p.animLoop.noise2D(x, y),\n            size * p.animLoop.noise2D(x, z),\n            size * p.animLoop.noise2D(y, z)\n          );\n          p.pop();\n        }\n      }\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = require(\"lodash\");\n\nvar CoordinateType;\n\n(function (CoordinateType) {\n  CoordinateType[\"CARTESIAN_2D\"] = \"CARTESIAN_2D\";\n  CoordinateType[\"CARTESIAN_3D\"] = \"CARTESIAN_3D\";\n  CoordinateType[\"CYLINDRICAL\"] = \"CYLINDRICAL\";\n  CoordinateType[\"POLAR\"] = \"POLAR\";\n  CoordinateType[\"SPHERICAL\"] = \"SPHERICAL\";\n})(CoordinateType = exports.CoordinateType || (exports.CoordinateType = {}));\n\nvar degPerRadian = 180 / Math.PI;\n/**\n * @constructor Coordinate\n * @description Defines object which can convert between coordinate systems.\n * It is recommended to use one of the Coodinate.STATIC_CONSTRUCTOR functions\n * to generate your first coordinate before conversions. e.g. Coodinate.spherical(...)\n * @param {Object} config\n * {\n *     label: 'type of initial coordinate',\n *     coords: {\n *         x/y/z/r/t/p: 'k-v pairs'\n *     },\n *     isDegree: Boolean\n * }\n */\n\nvar Coordinate =\n/** @class */\nfunction () {\n  function Coordinate(_a) {\n    var coordinates = _a.coordinates,\n        isDegree = _a.isDegree,\n        isRadian = _a.isRadian,\n        type = _a.type;\n    this.isRadian = true;\n    this.isDegree = false;\n    this.cooridnatesByType = {};\n\n    if (isDegree) {\n      this.isDegree = true;\n      this.isRadian = false;\n    }\n\n    if (!type) throw new Error('no type coordinate type defined');\n    if (!coordinates) throw new Error('no coordinates provided');\n    this.type = type;\n    this.coordinates = coordinates;\n    this.cooridnatesByType[type] = this.coordinates;\n  } //\n  // Static Constructor Functions\n  //\n\n  /**\n   * Create a point provided x, y, and optionally z coordinates\n   * @param  {Object} coordinates\n   * @return {Coordinate}\n   */\n\n\n  Coordinate.cartesian = function (coordinates) {\n    if (coordinates.length === 2) {\n      return new Coordinate({\n        coordinates: coordinates,\n        type: CoordinateType.CARTESIAN_2D\n      });\n    }\n\n    if (coordinates.length === 3) {\n      return new Coordinate({\n        coordinates: coordinates,\n        type: CoordinateType.CARTESIAN_3D\n      });\n    }\n\n    throw new Error('coordinates should have length 2 or 3');\n  };\n\n  Coordinate.cylindrical = function (coordinates) {\n    if (coordinates.length !== 3) {\n      throw new Error('expected exactly 3 params [r, t, z]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.CYLINDRICAL\n    });\n  };\n\n  Coordinate.polar = function (coordinates) {\n    if (coordinates.length !== 2) {\n      throw new Error('expected exactly 2 params [r, t]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.POLAR\n    });\n  };\n\n  Coordinate.spherical = function (coordinates) {\n    if (coordinates.length !== 3) {\n      throw new Error('expected exactly 3 params [r, t, p]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.SPHERICAL\n    });\n  }; //\n  // STATIC Converters\n  //\n\n  /**\n   * Convert a cylindrical to a spherical coordinates\n   * @param  {Array}   rtz\n   * @param  {Boolean} isDegree\n   * @return {Array}   [radius, theta, phi]\n   */\n\n\n  Coordinate.cylindricalToSpherical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var rtz = coordinate;\n    var r = rtz[0];\n    var t = rtz[1];\n    var z = rtz[2];\n    var sr, sp; // sphere radius, sphere theta...\n\n    if (isDegree) {\n      t = t / degPerRadian;\n    }\n\n    sr = Math.sqrt(r * r + z * z);\n    sp = Math.atan2(r, z);\n\n    if (isDegree) {\n      sp = sp * degPerRadian;\n      t = t * degPerRadian;\n    }\n\n    return [sr, t, sp];\n  };\n  /**\n   * Convert polar to 2d cartesian coordinates\n   * @param  {Array}   rt        [radis, theta]\n   * @param  {Boolean} isDegree specifies units\n   * @return {Array}  [x, y]\n   */\n\n\n  Coordinate.polarToCart2d = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var r, t, x, y;\n    r = coordinate[0];\n    t = coordinate[1];\n\n    if (isDegree) {\n      t = t * (1 / degPerRadian);\n    }\n\n    x = r * Math.cos(t);\n    y = r * Math.sin(t);\n    return [x, y];\n  };\n  /**\n   * Convert 3d cartesian to 3d cylindrical coordinates\n   * @param  {Array}      argument [x, y, z] coords\n   * @param  {Boolean=}   isDegree overrides default radian theta assumption\n   * @param  {Array=}     center [x, y] coords of center of circle\n   * @return {Array}      [radius, theta, z]\n   */\n\n\n  Coordinate.cartesian3dToCylindrical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xyz = coordinate;\n    var x = xyz[0];\n    var y = xyz[1];\n    var z = xyz[2];\n    var rt;\n    rt = Coordinate.cartesian2dToPolar({\n      coordinate: [x, y],\n      isDegree: isDegree,\n      center: center ? [center[0], center[1]] : undefined\n    });\n    return [rt[0], rt[1], z];\n  };\n\n  Coordinate.sphericalToCart3d = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var r = coordinate[0];\n    var t = coordinate[1];\n    var p = coordinate[2];\n    var x;\n    var y;\n    var z;\n\n    if (isDegree) {\n      t = t / degPerRadian;\n      p = p / degPerRadian;\n    }\n\n    x = r * Math.sin(p) * Math.cos(t);\n    y = r * Math.sin(p) * Math.sin(t);\n    z = r * Math.cos(p);\n    return [x, y, z];\n  };\n  /**\n   * Convert spherical to cylindrical coordinates\n   */\n\n\n  Coordinate.sphericalToCylindrical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var rtp = coordinate;\n    var r = rtp[0];\n    var t = rtp[1];\n    var p = rtp[2];\n    var cr;\n    var z;\n\n    if (isDegree) {\n      t = t / degPerRadian;\n      p = p / degPerRadian;\n    }\n\n    cr = r * Math.sin(p);\n    z = r * Math.cos(p);\n\n    if (isDegree) {\n      t = t * degPerRadian;\n      p = p * degPerRadian;\n    }\n\n    return [cr, t, z];\n  };\n  /**\n   * Convert 3d cartesian to 3d spherical coordinates\n   * @param  {Array}      argument [x, y, z] coords\n   * @param  {Boolean=}   isDegree overrides default radian theta assumption\n   * @param  {Array=}     center [x, y, z] coords of center of circle\n   * @return {Array}      [radius, theta, phi]\n   */\n\n\n  Coordinate.cartesian3dToSpherical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xyz = coordinate;\n\n    if (center && center.length !== 3) {\n      throw new Error('expected center value to have [x, y, z] coords' + 'for locating sphere center');\n    }\n\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2];\n    var x2;\n    var y2;\n    var z2;\n    var r;\n    var t;\n    var p;\n\n    if (center) {\n      x = x - center[0];\n      y = y - center[1];\n      z = z - center[2];\n    }\n\n    x2 = x * x;\n    y2 = y * y;\n    z2 = z * z;\n    r = Math.sqrt(x2 + y2 + z2);\n\n    if (!r) {\n      p = t = 0;\n    } else {\n      t = Math.atan2(y, x);\n      p = Math.atan2(Math.sqrt(x2 + y2), z);\n\n      if (isDegree) {\n        t = t * degPerRadian;\n        p = p * degPerRadian;\n      }\n    }\n\n    return [r, t, p];\n  };\n  /**\n   * Convert cartesian 2d to polar coordinates\n   * @param  {Array=} center [x, y] coords of center of circle.  Defaults to [0, 0],\n   * however may be offset.\n   * @return {Array}  [radius, theta]\n   */\n\n\n  Coordinate.cartesian2dToPolar = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xy = coordinate;\n    var x, y, r, t;\n\n    if (!lodash_1.isArray(xy) || xy.length !== 2) {\n      throw new TypeError('coorinate must be an [x, y, ...] array');\n    }\n\n    x = xy[0];\n    y = xy[1];\n\n    if (center && (!lodash_1.isArray(center) || center.length !== 2)) {\n      throw new TypeError('expected [x, y] center array');\n    }\n\n    if (center) {\n      x = x - center[0];\n      y = y - center[1];\n    }\n\n    r = Math.sqrt(x * x + y * y);\n    t = Math.atan2(y, x);\n    if (isDegree) t = t * degPerRadian;\n    return [r, t];\n  };\n\n  Coordinate.prototype.cartesian = function () {\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_2D];\n\n      case CoordinateType.CARTESIAN_3D:\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      case CoordinateType.POLAR:\n        this.cooridnatesByType[CoordinateType.CARTESIAN_2D] = Coordinate.polarToCart2d({\n          coordinate: this.cooridnatesByType[CoordinateType.POLAR],\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_2D];\n\n      case CoordinateType.CYLINDRICAL:\n        var _a = this.cooridnatesByType[CoordinateType.CYLINDRICAL],\n            r = _a[0],\n            t = _a[1];\n        var temp = Coordinate.polarToCart2d({\n          coordinate: [r, t],\n          isDegree: this.isDegree\n        });\n        this.cooridnatesByType[CoordinateType.CARTESIAN_3D] = [temp[0], temp[1], this.coordinates[2]];\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      case CoordinateType.SPHERICAL:\n        this.cooridnatesByType[CoordinateType.CARTESIAN_3D] = Coordinate.sphericalToCart3d({\n          coordinate: this.cooridnatesByType[CoordinateType.SPHERICAL],\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      default:\n        throw new Error(\"cannot convert from \" + this.type + \" to cartesian\");\n    }\n  };\n\n  Coordinate.prototype.cylindrical = function (options) {\n    var temp;\n    options = options || {};\n    var center = options.center ? [options.center[0], options.center[1], options.center[2] || 0] : undefined;\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        temp = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: center\n        });\n        this.cooridnatesByType.CYLINDRICAL = [temp[0], temp[1], 0];\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.CYLINDRICAL = Coordinate.cartesian3dToCylindrical({\n          coordinate: this.cooridnatesByType[CoordinateType.CARTESIAN_3D],\n          isDegree: this.isDegree,\n          center: center\n        });\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      case CoordinateType.POLAR:\n        temp = this.cooridnatesByType.POLAR;\n        return [temp[0], temp[1], 0];\n\n      case CoordinateType.CYLINDRICAL:\n        return this.cooridnatesByType.CYLINDRICAL;\n      // identity\n\n      case CoordinateType.SPHERICAL:\n        this.cooridnatesByType.CYLINDRICAL = Coordinate.sphericalToCylindrical({\n          coordinate: this.cooridnatesByType.SPHERICAL,\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      default:\n        throw new Error(\"cannot convert \" + this.type + \" to cylindrical\");\n    }\n  };\n\n  Coordinate.prototype.polar = function (options) {\n    options = options || {};\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        this.cooridnatesByType.POLAR = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.POLAR;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.POLAR = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_3D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.POLAR;\n\n      case CoordinateType.POLAR:\n        return this.cooridnatesByType.POLAR;\n\n      default:\n        throw new Error('cannot convert to/from original/requested types');\n    }\n  };\n  /**\n   * Converts current coordinate to spherical\n   * @param  {Object} options\n   * @return {Array}  coordinates in respective coordinate format\n   */\n\n\n  Coordinate.prototype.spherical = function (options) {\n    var temp;\n    options = options || {};\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        temp = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        this.cooridnatesByType.SPHERICAL = [temp[0], temp[1], 0];\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.SPHERICAL = Coordinate.cartesian3dToSpherical({\n          coordinate: this.cooridnatesByType.CARTESIAN_3D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.POLAR:\n        temp = this.cooridnatesByType.POLAR;\n        return [temp[0], temp[1], 0];\n\n      case CoordinateType.CYLINDRICAL:\n        this.cooridnatesByType.SPHERICAL = Coordinate.cylindricalToSpherical({\n          coordinate: this.cooridnatesByType.CYLINDRICAL,\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.SPHERICAL:\n        return this.cooridnatesByType.SPHERICAL;\n\n      default:\n        throw new Error('cannot convert to/from original/requested types');\n    }\n  };\n\n  return Coordinate;\n}();\n\nexports.Coordinate = Coordinate;","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimLeft', function ($trim) {\n  return function trimLeft() {\n    return $trim(this, 1);\n  };\n}, 'trimStart');\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n  }\n});\n","require(\"core-js/modules/es6.object.define-property\");\n\nmodule.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimRight', function ($trim) {\n  return function trimRight() {\n    return $trim(this, 2);\n  };\n}, 'trimEnd');\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n"],"sourceRoot":""}
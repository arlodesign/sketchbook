{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/10.js"],"names":["RENDER","process","DEV","sketch","p","setup","pixelDensity","frameRate","createCanvas","noStroke","rectMode","CENTER","createLoop","gif","render","open","noiseRadius","draw","background","yPoints","x","width","y","noiseVal","map","animLoop","noise1D","l","push","lerp","height","forEach","col","i","size","rect","SketchPage"],"mappings":"4FAAA,wDAKMA,GALN,UAKeC,GAAYC,MAAO,GAE5BC,EAAS,SAASC,GAGtBA,EAAEC,MAAQ,WACJL,IACFI,EAAEE,aAAa,GACfF,EAAEG,UAAU,KAGdH,EAAEI,aAAa,IAAK,KACpBJ,EAAEK,WACFL,EAAEM,SAASN,EAAEO,QACbP,EAAEQ,WAAW,GAAI,CACfC,MAAKb,GAAS,CAAEc,QAAQ,EAAOC,MAAM,GACrCC,YAAa,MAIjBZ,EAAEa,KAAO,WACPb,EAAEc,WAAW,GAIb,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,GAAKhB,EAAEiB,MAAQ,EAAGD,GAtBlB,GAsBkC,CAGhD,IAFA,IAAIE,EAAI,GACFC,EAAWnB,EAAEoB,IAAIpB,EAAEqB,SAASC,QAAQN,EAAI,KAAM,EAAG,EAAG,EAAG,IACpDO,EAAI,EAAGA,EAAI,EAAGA,GAAKJ,EAC1BI,EAAI,GAAKL,EAAEM,KAAKxB,EAAEyB,KAAK,EAAGzB,EAAE0B,OAAQH,IAEtCR,EAAQS,KAAKN,GAGfH,EAAQY,SAAQ,SAACC,EAAKC,GACpBD,EAAID,SAAQ,SAAAT,GACV,IAAIY,EAAO9B,EAAEoB,IAAIF,EAAG,EAAGlB,EAAE0B,OAjCb,GAiCgC,GAE5C1B,EAAE+B,KAnCU,GAmCLF,EAAeX,EAAGY,EAAMA,GAC/B9B,EAAE+B,KApCU,GAoCLF,EAAe7B,EAAE0B,OAASR,EAAGY,EAAMA,GAC1C9B,EAAE+B,KAAK/B,EAAEiB,MArCG,GAqCKY,EAAeX,EAAGY,EAAMA,GACzC9B,EAAE+B,KAAK/B,EAAEiB,MAtCG,GAsCKY,EAAe7B,EAAE0B,OAASR,EAAGY,EAAMA,WAY7CE,UANI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQjC,OAAQA","file":"component---src-pages-sketch-2019-07-10-js-6d65e93709cae6fb626f.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const GRID_SIZE = 10;\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n    p.noStroke();\n    p.rectMode(p.CENTER);\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n  };\n\n  p.draw = function() {\n    p.background(0);\n\n    let yPoints = [];\n\n    for (let x = 0; x <= p.width / 2; x += GRID_SIZE) {\n      let y = [];\n      const noiseVal = p.map(p.animLoop.noise1D(x / 10), -1, 1, 0, 0.5);\n      for (let l = 0; l < 1; l += noiseVal) {\n        l > 0 && y.push(p.lerp(0, p.height, l));\n      }\n      yPoints.push(y);\n    }\n\n    yPoints.forEach((col, i) => {\n      col.forEach(y => {\n        let size = p.map(y, 0, p.height, GRID_SIZE, 1);\n\n        p.rect(i * GRID_SIZE, y, size, size);\n        p.rect(i * GRID_SIZE, p.height - y, size, size);\n        p.rect(p.width - i * GRID_SIZE, y, size, size);\n        p.rect(p.width - i * GRID_SIZE, p.height - y, size, size);\n      });\n    });\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n  </Layout>\n);\n\nexport default SketchPage;\n"],"sourceRoot":""}
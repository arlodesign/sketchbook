{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/13.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/lib/polarToCartesian.js"],"names":["sketch","p","w","h","GRID_SIZE","random","MARGIN","SIZES","grid","Doodad","x","y","size","this","freq","TWO_PI","floor","drawFunc","pinwheel","horizontalLines","verticalLines","draw","_proto","prototype","push","stroke","fill","square","pop","translate","line","strokeWeight","r","apply","polarToCartesian","concat","start","end","setup","createCanvas","background","width","height","xx","yy","visited","_ref","_ref3","_p$random","filter","_ref2","overlap","Math","max","s","_ref4","length","noLoop","__webpack_exports__","_ref5","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","aLen","arguments","index","undefined","endPos","d","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","angle","distance","cos","sin","centerX","centerY","radiusX","radiusY","asArray"],"mappings":"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","file":"component---src-pages-sketch-2019-04-13-js-70c15fcc445cdf7da7c5.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const GRID_SIZE = p.random([60, 30, 15]);\n  const MARGIN = GRID_SIZE / 10;\n  const SIZES = [1, 2, 3, 5, 8, 13];\n\n  let grid = [];\n  let w;\n  let h;\n\n  class Doodad {\n    constructor(x, y, size) {\n      this.x = x * GRID_SIZE;\n      this.y = y * GRID_SIZE;\n      this.size = size * GRID_SIZE;\n      this.freq = p.TWO_PI / (p.floor(p.random(size * 4, size * 7)) * 2);\n      this.drawFunc = p.random([\n        this.pinwheel,\n        this.horizontalLines,\n        this.verticalLines,\n      ]);\n      this.draw();\n    }\n    draw() {\n      p.push();\n      p.stroke(64);\n      p.fill(p.random(192, 250));\n      p.square(this.x, this.y, this.size);\n      p.pop();\n\n      p.push();\n      p.stroke(255);\n      p.translate(-0.5, -0.5);\n      p.line(this.x, this.y, this.x + this.size, this.y);\n      p.line(this.x, this.y, this.x, this.y + this.size);\n      p.line(\n        this.x + this.size,\n        this.y,\n        this.x + this.size,\n        this.y + this.size\n      );\n      p.line(\n        this.x,\n        this.y + this.size,\n        this.x + this.size,\n        this.y + this.size\n      );\n      p.pop();\n\n      p.push();\n      p.translate(this.x + this.size / 2, this.y + this.size / 2);\n      this.drawFunc();\n      p.pop();\n    }\n    pinwheel() {\n      p.strokeWeight(2);\n      for (let r = 0; r < p.TWO_PI; r += this.freq) {\n        p.line(\n          ...polarToCartesian(0, 0, r, (this.size / 2 - MARGIN) / 3, true),\n          ...polarToCartesian(0, 0, r, this.size / 2 - MARGIN, true)\n        );\n      }\n    }\n    horizontalLines() {\n      p.strokeWeight(2);\n      for (let r = 0; r < p.TWO_PI; r += this.freq) {\n        const start = polarToCartesian(\n          0,\n          0,\n          r,\n          this.size / 2 - (MARGIN + 2),\n          true\n        );\n        const end = [-start[0], start[1]];\n        p.line(...start, ...end);\n      }\n    }\n    verticalLines() {\n      p.strokeWeight(2);\n      for (let r = 0; r < p.TWO_PI; r += this.freq) {\n        const start = polarToCartesian(\n          0,\n          0,\n          r,\n          this.size / 2 - (MARGIN + 2),\n          true\n        );\n        const end = [start[0], -start[1]];\n        p.line(...start, ...end);\n      }\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(255);\n    p.stroke(0);\n\n    w = p.floor(p.width / GRID_SIZE);\n    h = p.floor(p.height / GRID_SIZE);\n\n    for (let xx = 0; xx < w; xx++) {\n      grid.push([]);\n      for (let yy = 0; yy < h; yy++) {\n        grid[xx].push({\n          x: xx,\n          y: yy,\n          visited: false,\n        });\n      }\n    }\n  };\n\n  p.draw = function() {\n    const { x, y } = p.random(\n      [].concat(...grid).filter(({ visited }) => !visited)\n    );\n\n    if (!grid[x][y].visited) {\n      p.fill(p.random(0, 128));\n\n      let size = Math.max(...SIZES);\n      let overlap;\n\n      do {\n        overlap = false;\n        for (let xx = x; xx < size + x; xx++) {\n          for (let yy = y; yy < size + y; yy++) {\n            if (x + size > w || y + size > h || grid[xx][yy].visited) {\n              overlap = true;\n            }\n          }\n        }\n        if (overlap) {\n          size = Math.max(...SIZES.filter(s => s < size));\n        }\n      } while (overlap);\n\n      new Doodad(x, y, size);\n\n      for (let xx = x; xx < size + x; xx++) {\n        for (let yy = y; yy < size + y; yy++) {\n          grid[xx][yy].visited = true;\n        }\n      }\n    }\n\n    ![].concat(...grid).filter(({ visited }) => !visited).length && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/09/02.js","webpack:///./node_modules/coordinate-systems/src/index.js","webpack:///./node_modules/core-js/modules/es7.array.flat-map.js","webpack:///./node_modules/core-js/modules/es7.string.pad-end.js","webpack:///./node_modules/core-js/modules/es7.string.pad-start.js","webpack:///./node_modules/core-js/modules/es7.string.trim-left.js","webpack:///./node_modules/core-js/modules/_string-pad.js","webpack:///./node_modules/core-js/modules/es6.array.reduce-right.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/lib/easing.js","webpack:///./node_modules/core-js/modules/es7.string.trim-right.js","webpack:///./node_modules/core-js/modules/_flatten-into-array.js"],"names":["spherical","Coordinate","RENDER","process","DEV","sketch","p","HUE","random","setup","frameRate","createCanvas","WEBGL","noStroke","colorMode","HSB","createLoop","gif","render","open","noiseRadius","draw","animLoop","noise1D","noise2D","theta","size","width","background","camera","cartesian","pointLight","specularMaterial","map","cubeCount","x","ceil","COUNT","y","z","noise","ease","sin","push","translate","rotateX","cos","TWO_PI","rotateY","box","constrain","abs","pop","location","path","pathname","description","Object","defineProperty","exports","value","CoordinateType","lodash_1","degPerRadian","Math","PI","_a","coordinates","isDegree","type","isRadian","this","cooridnatesByType","Error","length","CARTESIAN_2D","CARTESIAN_3D","cylindrical","CYLINDRICAL","polar","POLAR","SPHERICAL","cylindricalToSpherical","sr","sp","coordinate","rtz","r","t","sqrt","atan2","polarToCart2d","cartesian3dToCylindrical","rt","center","xyz","cartesian2dToPolar","undefined","sphericalToCart3d","sphericalToCylindrical","cr","rtp","cartesian3dToSpherical","x2","y2","z2","xy","isArray","TypeError","prototype","temp","options","$export","flattenIntoArray","toObject","toLength","aFunction","arraySpeciesCreate","P","flatMap","callbackfn","sourceLen","A","O","arguments","$pad","userAgent","WEBKIT_BUG","test","F","padEnd","maxLength","padStart","$trim","repeat","defined","module","that","fillString","left","S","String","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","slice","$reduce","reduceRight","webpackPolyfill","deprecate","paths","children","enumerable","get","l","i","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","isObject","ctx","IS_CONCAT_SPREADABLE","target","original","source","start","depth","mapper","thisArg","element","spreadable","targetIndex","sourceIndex","mapFn"],"mappings":"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","file":"component---src-pages-sketch-2019-09-02-js-68729f9dc464c111cd31.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport { Coordinate } from \"coordinate-systems\";\nimport { easeOutQuint as ease } from \"~lib/easing\";\n\nimport \"p5.createloop\";\n\nconst { spherical } = Coordinate;\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const HUE = p.random(0.9);\n  const COUNT = 3;\n\n  p.setup = function() {\n    if (RENDER) {\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840, p.WEBGL);\n    p.noStroke();\n    p.colorMode(p.HSB, 1);\n\n    p.createLoop(30, {\n      gif: RENDER ? { render: false, open: true } : true,\n      noiseRadius: 1,\n    });\n  };\n\n  p.draw = function() {\n    const { noise1D, noise2D, theta } = p.animLoop;\n    let size = p.width / COUNT;\n\n    p.background(HUE, 0.5, 0.5);\n\n    p.camera(\n      ...spherical([size * COUNT * 3, 10, theta]).cartesian(),\n      0,\n      0,\n      0,\n      0,\n      1,\n      0\n    );\n    p.pointLight(0, 0, 1, 0, 0, -p.width * 3);\n    p.specularMaterial(\n      p.map(noise1D(0.05), -1, 1, HUE - 0.1, HUE + 0.1),\n      0.5,\n      0.8\n    );\n\n    let cubeCount = 1;\n\n    for (let x = -p.ceil(COUNT / 2); x <= p.ceil(COUNT / 2); x++) {\n      for (let y = -p.ceil(COUNT / 2); y <= p.ceil(COUNT / 2); y++) {\n        for (let z = -p.ceil(COUNT / 2); z <= p.ceil(COUNT / 2); z++) {\n          const noise =\n            ease(p.map(p.sin(theta), -1, 1, 0, 1)) *\n            noise2D(x * y * z, cubeCount / 100);\n\n          p.push();\n          p.translate(size * x, size * y, size * z);\n          p.rotateX(noise * p.map(p.cos(theta), -1, 1, 0, p.TWO_PI));\n          p.rotateY(noise * p.map(p.cos(theta), -1, 1, 0, p.TWO_PI));\n          p.box(p.constrain(size * p.abs(p.sin(theta)), size / 10, size));\n          p.pop();\n\n          cubeCount++;\n        }\n      }\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = require(\"lodash\");\n\nvar CoordinateType;\n\n(function (CoordinateType) {\n  CoordinateType[\"CARTESIAN_2D\"] = \"CARTESIAN_2D\";\n  CoordinateType[\"CARTESIAN_3D\"] = \"CARTESIAN_3D\";\n  CoordinateType[\"CYLINDRICAL\"] = \"CYLINDRICAL\";\n  CoordinateType[\"POLAR\"] = \"POLAR\";\n  CoordinateType[\"SPHERICAL\"] = \"SPHERICAL\";\n})(CoordinateType = exports.CoordinateType || (exports.CoordinateType = {}));\n\nvar degPerRadian = 180 / Math.PI;\n/**\n * @constructor Coordinate\n * @description Defines object which can convert between coordinate systems.\n * It is recommended to use one of the Coodinate.STATIC_CONSTRUCTOR functions\n * to generate your first coordinate before conversions. e.g. Coodinate.spherical(...)\n * @param {Object} config\n * {\n *     label: 'type of initial coordinate',\n *     coords: {\n *         x/y/z/r/t/p: 'k-v pairs'\n *     },\n *     isDegree: Boolean\n * }\n */\n\nvar Coordinate =\n/** @class */\nfunction () {\n  function Coordinate(_a) {\n    var coordinates = _a.coordinates,\n        isDegree = _a.isDegree,\n        isRadian = _a.isRadian,\n        type = _a.type;\n    this.isRadian = true;\n    this.isDegree = false;\n    this.cooridnatesByType = {};\n\n    if (isDegree) {\n      this.isDegree = true;\n      this.isRadian = false;\n    }\n\n    if (!type) throw new Error('no type coordinate type defined');\n    if (!coordinates) throw new Error('no coordinates provided');\n    this.type = type;\n    this.coordinates = coordinates;\n    this.cooridnatesByType[type] = this.coordinates;\n  } //\n  // Static Constructor Functions\n  //\n\n  /**\n   * Create a point provided x, y, and optionally z coordinates\n   * @param  {Object} coordinates\n   * @return {Coordinate}\n   */\n\n\n  Coordinate.cartesian = function (coordinates) {\n    if (coordinates.length === 2) {\n      return new Coordinate({\n        coordinates: coordinates,\n        type: CoordinateType.CARTESIAN_2D\n      });\n    }\n\n    if (coordinates.length === 3) {\n      return new Coordinate({\n        coordinates: coordinates,\n        type: CoordinateType.CARTESIAN_3D\n      });\n    }\n\n    throw new Error('coordinates should have length 2 or 3');\n  };\n\n  Coordinate.cylindrical = function (coordinates) {\n    if (coordinates.length !== 3) {\n      throw new Error('expected exactly 3 params [r, t, z]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.CYLINDRICAL\n    });\n  };\n\n  Coordinate.polar = function (coordinates) {\n    if (coordinates.length !== 2) {\n      throw new Error('expected exactly 2 params [r, t]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.POLAR\n    });\n  };\n\n  Coordinate.spherical = function (coordinates) {\n    if (coordinates.length !== 3) {\n      throw new Error('expected exactly 3 params [r, t, p]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.SPHERICAL\n    });\n  }; //\n  // STATIC Converters\n  //\n\n  /**\n   * Convert a cylindrical to a spherical coordinates\n   * @param  {Array}   rtz\n   * @param  {Boolean} isDegree\n   * @return {Array}   [radius, theta, phi]\n   */\n\n\n  Coordinate.cylindricalToSpherical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var rtz = coordinate;\n    var r = rtz[0];\n    var t = rtz[1];\n    var z = rtz[2];\n    var sr, sp; // sphere radius, sphere theta...\n\n    if (isDegree) {\n      t = t / degPerRadian;\n    }\n\n    sr = Math.sqrt(r * r + z * z);\n    sp = Math.atan2(r, z);\n\n    if (isDegree) {\n      sp = sp * degPerRadian;\n      t = t * degPerRadian;\n    }\n\n    return [sr, t, sp];\n  };\n  /**\n   * Convert polar to 2d cartesian coordinates\n   * @param  {Array}   rt        [radis, theta]\n   * @param  {Boolean} isDegree specifies units\n   * @return {Array}  [x, y]\n   */\n\n\n  Coordinate.polarToCart2d = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var r, t, x, y;\n    r = coordinate[0];\n    t = coordinate[1];\n\n    if (isDegree) {\n      t = t * (1 / degPerRadian);\n    }\n\n    x = r * Math.cos(t);\n    y = r * Math.sin(t);\n    return [x, y];\n  };\n  /**\n   * Convert 3d cartesian to 3d cylindrical coordinates\n   * @param  {Array}      argument [x, y, z] coords\n   * @param  {Boolean=}   isDegree overrides default radian theta assumption\n   * @param  {Array=}     center [x, y] coords of center of circle\n   * @return {Array}      [radius, theta, z]\n   */\n\n\n  Coordinate.cartesian3dToCylindrical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xyz = coordinate;\n    var x = xyz[0];\n    var y = xyz[1];\n    var z = xyz[2];\n    var rt;\n    rt = Coordinate.cartesian2dToPolar({\n      coordinate: [x, y],\n      isDegree: isDegree,\n      center: center ? [center[0], center[1]] : undefined\n    });\n    return [rt[0], rt[1], z];\n  };\n\n  Coordinate.sphericalToCart3d = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var r = coordinate[0];\n    var t = coordinate[1];\n    var p = coordinate[2];\n    var x;\n    var y;\n    var z;\n\n    if (isDegree) {\n      t = t / degPerRadian;\n      p = p / degPerRadian;\n    }\n\n    x = r * Math.sin(p) * Math.cos(t);\n    y = r * Math.sin(p) * Math.sin(t);\n    z = r * Math.cos(p);\n    return [x, y, z];\n  };\n  /**\n   * Convert spherical to cylindrical coordinates\n   */\n\n\n  Coordinate.sphericalToCylindrical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var rtp = coordinate;\n    var r = rtp[0];\n    var t = rtp[1];\n    var p = rtp[2];\n    var cr;\n    var z;\n\n    if (isDegree) {\n      t = t / degPerRadian;\n      p = p / degPerRadian;\n    }\n\n    cr = r * Math.sin(p);\n    z = r * Math.cos(p);\n\n    if (isDegree) {\n      t = t * degPerRadian;\n      p = p * degPerRadian;\n    }\n\n    return [cr, t, z];\n  };\n  /**\n   * Convert 3d cartesian to 3d spherical coordinates\n   * @param  {Array}      argument [x, y, z] coords\n   * @param  {Boolean=}   isDegree overrides default radian theta assumption\n   * @param  {Array=}     center [x, y, z] coords of center of circle\n   * @return {Array}      [radius, theta, phi]\n   */\n\n\n  Coordinate.cartesian3dToSpherical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xyz = coordinate;\n\n    if (center && center.length !== 3) {\n      throw new Error('expected center value to have [x, y, z] coords' + 'for locating sphere center');\n    }\n\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2];\n    var x2;\n    var y2;\n    var z2;\n    var r;\n    var t;\n    var p;\n\n    if (center) {\n      x = x - center[0];\n      y = y - center[1];\n      z = z - center[2];\n    }\n\n    x2 = x * x;\n    y2 = y * y;\n    z2 = z * z;\n    r = Math.sqrt(x2 + y2 + z2);\n\n    if (!r) {\n      p = t = 0;\n    } else {\n      t = Math.atan2(y, x);\n      p = Math.atan2(Math.sqrt(x2 + y2), z);\n\n      if (isDegree) {\n        t = t * degPerRadian;\n        p = p * degPerRadian;\n      }\n    }\n\n    return [r, t, p];\n  };\n  /**\n   * Convert cartesian 2d to polar coordinates\n   * @param  {Array=} center [x, y] coords of center of circle.  Defaults to [0, 0],\n   * however may be offset.\n   * @return {Array}  [radius, theta]\n   */\n\n\n  Coordinate.cartesian2dToPolar = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xy = coordinate;\n    var x, y, r, t;\n\n    if (!lodash_1.isArray(xy) || xy.length !== 2) {\n      throw new TypeError('coorinate must be an [x, y, ...] array');\n    }\n\n    x = xy[0];\n    y = xy[1];\n\n    if (center && (!lodash_1.isArray(center) || center.length !== 2)) {\n      throw new TypeError('expected [x, y] center array');\n    }\n\n    if (center) {\n      x = x - center[0];\n      y = y - center[1];\n    }\n\n    r = Math.sqrt(x * x + y * y);\n    t = Math.atan2(y, x);\n    if (isDegree) t = t * degPerRadian;\n    return [r, t];\n  };\n\n  Coordinate.prototype.cartesian = function () {\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_2D];\n\n      case CoordinateType.CARTESIAN_3D:\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      case CoordinateType.POLAR:\n        this.cooridnatesByType[CoordinateType.CARTESIAN_2D] = Coordinate.polarToCart2d({\n          coordinate: this.cooridnatesByType[CoordinateType.POLAR],\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_2D];\n\n      case CoordinateType.CYLINDRICAL:\n        var _a = this.cooridnatesByType[CoordinateType.CYLINDRICAL],\n            r = _a[0],\n            t = _a[1];\n        var temp = Coordinate.polarToCart2d({\n          coordinate: [r, t],\n          isDegree: this.isDegree\n        });\n        this.cooridnatesByType[CoordinateType.CARTESIAN_3D] = [temp[0], temp[1], this.coordinates[2]];\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      case CoordinateType.SPHERICAL:\n        this.cooridnatesByType[CoordinateType.CARTESIAN_3D] = Coordinate.sphericalToCart3d({\n          coordinate: this.cooridnatesByType[CoordinateType.SPHERICAL],\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      default:\n        throw new Error(\"cannot convert from \" + this.type + \" to cartesian\");\n    }\n  };\n\n  Coordinate.prototype.cylindrical = function (options) {\n    var temp;\n    options = options || {};\n    var center = options.center ? [options.center[0], options.center[1], options.center[2] || 0] : undefined;\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        temp = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: center\n        });\n        this.cooridnatesByType.CYLINDRICAL = [temp[0], temp[1], 0];\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.CYLINDRICAL = Coordinate.cartesian3dToCylindrical({\n          coordinate: this.cooridnatesByType[CoordinateType.CARTESIAN_3D],\n          isDegree: this.isDegree,\n          center: center\n        });\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      case CoordinateType.POLAR:\n        temp = this.cooridnatesByType.POLAR;\n        return [temp[0], temp[1], 0];\n\n      case CoordinateType.CYLINDRICAL:\n        return this.cooridnatesByType.CYLINDRICAL;\n      // identity\n\n      case CoordinateType.SPHERICAL:\n        this.cooridnatesByType.CYLINDRICAL = Coordinate.sphericalToCylindrical({\n          coordinate: this.cooridnatesByType.SPHERICAL,\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      default:\n        throw new Error(\"cannot convert \" + this.type + \" to cylindrical\");\n    }\n  };\n\n  Coordinate.prototype.polar = function (options) {\n    options = options || {};\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        this.cooridnatesByType.POLAR = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.POLAR;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.POLAR = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_3D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.POLAR;\n\n      case CoordinateType.POLAR:\n        return this.cooridnatesByType.POLAR;\n\n      default:\n        throw new Error('cannot convert to/from original/requested types');\n    }\n  };\n  /**\n   * Converts current coordinate to spherical\n   * @param  {Object} options\n   * @return {Array}  coordinates in respective coordinate format\n   */\n\n\n  Coordinate.prototype.spherical = function (options) {\n    var temp;\n    options = options || {};\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        temp = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        this.cooridnatesByType.SPHERICAL = [temp[0], temp[1], 0];\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.SPHERICAL = Coordinate.cartesian3dToSpherical({\n          coordinate: this.cooridnatesByType.CARTESIAN_3D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.POLAR:\n        temp = this.cooridnatesByType.POLAR;\n        return [temp[0], temp[1], 0];\n\n      case CoordinateType.CYLINDRICAL:\n        this.cooridnatesByType.SPHERICAL = Coordinate.cylindricalToSpherical({\n          coordinate: this.cooridnatesByType.CYLINDRICAL,\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.SPHERICAL:\n        return this.cooridnatesByType.SPHERICAL;\n\n      default:\n        throw new Error('cannot convert to/from original/requested types');\n    }\n  };\n\n  return Coordinate;\n}();\n\nexports.Coordinate = Coordinate;","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimLeft', function ($trim) {\n  return function trimLeft() {\n    return $trim(this, 1);\n  };\n}, 'trimStart');\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n  }\n});\n","require(\"core-js/modules/es6.object.define-property\");\n\nmodule.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimRight', function ($trim) {\n  return function trimRight() {\n    return $trim(this, 2);\n  };\n}, 'trimEnd');\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n"],"sourceRoot":""}
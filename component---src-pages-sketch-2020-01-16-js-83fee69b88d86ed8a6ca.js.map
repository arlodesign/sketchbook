{"version":3,"sources":["webpack:///./src/pages/sketch/2020/01/16.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/easing.js"],"names":["sketch","p","RENDER","getURLParams","render","setup","pixelDensity","frameRate","createCanvas","WEBGL","noStroke","createLoop","gif","open","draw","theta","animLoop","background","specularMaterial","pointLight","polarToCartesian","width","x","y","height","push","translate","rotateX","dist","scale","easeInOutQuart","abs","cos","box","pop","location","path","pathname","description","polarToCartesianX","center","angle","distance","Math","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"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","file":"component---src-pages-sketch-2020-01-16-js-83fee69b88d86ed8a6ca.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport { easeInOutQuart } from \"~lib/easing\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const DURATION = 20;\n  const RATE = 30;\n  const GRID = 15;\n\n  p.setup = function() {\n    p.pixelDensity(RENDER ? 2 : 1);\n    p.frameRate(RATE);\n    p.createCanvas(660, 840, p.WEBGL);\n    p.noStroke();\n    p.createLoop(DURATION, {\n      gif: RENDER ? { render: false, open: true } : false,\n    });\n  };\n\n  p.draw = function() {\n    const { theta } = p.animLoop;\n    p.background(0);\n    p.specularMaterial(255);\n    p.pointLight(\n      255,\n      255,\n      255,\n      ...polarToCartesian(0, 0, theta, p.width / 2, true),\n      p.width * 2\n    );\n\n    for (let x = -p.width / 2; x <= p.width / 2; x += GRID) {\n      for (let y = -p.height / 2; y <= p.height / 2; y += GRID) {\n        p.push();\n        p.translate(x, y, 0);\n        p.rotateX(theta + p.dist(x, y, 0, 0));\n        p.scale(\n          easeInOutQuart(\n            p.abs(p.cos(theta + p.dist(x, y, p.width / 2, p.height / 2)))\n          )\n        );\n        p.box(GRID);\n        p.pop();\n      }\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/08/28.js"],"names":["RENDER","process","DEV","sketch","p","wx","wy","HUE","random","setup","frameRate","pixelDensity","createCanvas","WEBGL","colorMode","HSB","floor","width","height","createLoop","gif","render","open","noiseRadius","draw","animLoop","noise2D","theta","background","pointLight","x","y","push","specularMaterial","map","translate","GRID","sin","dist","cos","rotateX","HALF_PI","rotateY","rotateZ","box","pop","SketchPage"],"mappings":"6FAAA,wDAKMA,GALN,UAKeC,GAAYC,MAAO,GAG5BC,EAAS,SAASC,GACtB,IACIC,EACAC,EAFEC,EAAMH,EAAEI,OAAO,IAIrBJ,EAAEK,MAAQ,WACRL,EAAEM,UAAU,IACZN,EAAEO,aAAa,GACfP,EAAEQ,aAAa,IAAK,IAAKR,EAAES,OAC3BT,EAAEU,UAAUV,EAAEW,IAAK,GAEnBV,EAAKD,EAAEY,MAAMZ,EAAEa,MAbN,IAcTX,EAAKF,EAAEY,MAAMZ,EAAEc,OAdN,IAgBTd,EAAEe,WAAW,GAAI,CACfC,MAAKpB,GAAS,CAAEqB,QAAQ,EAAOC,MAAM,GACrCC,YAAa,MAIjBnB,EAAEoB,KAAO,WAAY,IAAD,EACSpB,EAAEqB,SAArBC,EADU,EACVA,QAASC,EADC,EACDA,MAEjBvB,EAAEwB,WAAWrB,EAAK,GAAK,IACvBH,EAAEyB,WAAW,EAAG,EAAG,EAAG,EAAG,EAAc,GAAVzB,EAAEa,OAE/B,IAAK,IAAIa,GAAKzB,EAAK,EAAGyB,EAAIzB,EAAIyB,IAC5B,IAAK,IAAIC,GAAKzB,EAAK,EAAGyB,EAAIzB,EAAIyB,IAC5B3B,EAAE4B,OACF5B,EAAE6B,iBACA7B,EAAE8B,IAAIR,EAAQI,EAAGC,IAAK,EAAG,EAAGxB,EAAM,GAAKA,EAAM,IAC7C,GACA,IAEFH,EAAE+B,UApCG,GAqCHL,EAAWM,GArCR,GAsCHL,EAAWK,GACXA,IAAWhC,EAAEiC,IAAIjC,EAAEkC,KAAKR,EAAGC,EAAG3B,EAAEa,MAAQ,EAAG,GAAKU,IAElDvB,EAAE+B,UACA,EACA,EACAC,IAAWhC,EAAEmC,IAAInC,EAAEkC,KAAKR,EAAGC,EAAG,EAAG3B,EAAEc,OAAS,GAAKS,IAEnDvB,EAAEoC,QAAQpC,EAAEqC,SACZrC,EAAEsC,QAAQf,GACVvB,EAAEuC,SAAShB,GACXvB,EAAEwC,IAjDG,UAkDLxC,EAAEyC,QAYKC,UANI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ3C,OAAQA","file":"component---src-pages-sketch-2019-08-28-js-1fc3fcefe2f0fc50352a.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\nconst GRID = 30;\n\nconst sketch = function(p) {\n  const HUE = p.random(0.9);\n  let wx;\n  let wy;\n\n  p.setup = function() {\n    p.frameRate(30);\n    p.pixelDensity(1);\n    p.createCanvas(660, 840, p.WEBGL);\n    p.colorMode(p.HSB, 1);\n\n    wx = p.floor(p.width / GRID);\n    wy = p.floor(p.height / GRID);\n\n    p.createLoop(10, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.5,\n    });\n  };\n\n  p.draw = function() {\n    const { noise2D, theta } = p.animLoop;\n\n    p.background(HUE, 0.5, 0.5);\n    p.pointLight(0, 0, 1, 0, 0, -p.width * 3);\n\n    for (let x = -wx / 2; x < wx; x++) {\n      for (let y = -wy / 2; y < wy; y++) {\n        p.push();\n        p.specularMaterial(\n          p.map(noise2D(x, y), -1, 1, HUE - 0.1, HUE + 0.1),\n          0.5,\n          0.8\n        );\n        p.translate(\n          x * GRID - GRID / 2,\n          y * GRID - GRID / 2,\n          GRID * 5 * p.sin(p.dist(x, y, p.width / 2, 0) + theta)\n        );\n        p.translate(\n          0,\n          0,\n          GRID * 5 * p.cos(p.dist(x, y, 0, p.height / 2) + theta)\n        );\n        p.rotateX(p.HALF_PI);\n        p.rotateY(theta);\n        p.rotateZ(-theta);\n        p.box(GRID, GRID, GRID);\n        p.pop();\n      }\n    }\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n  </Layout>\n);\n\nexport default SketchPage;\n"],"sourceRoot":""}
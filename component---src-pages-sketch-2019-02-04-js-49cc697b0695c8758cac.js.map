{"version":3,"sources":["webpack:///./src/pages/sketch/2019/02/04.js"],"names":["sketch","p","length","y","colors","iteration","colorFunctions","angle","abs","sin","cos","tan","setup","createCanvas","background","width","MARGIN","Array","from","Set","random","blendMode","OVERLAY","rectMode","CENTER","strokeWeight","draw","translate","P","floor","S","C","color","apply","map","c","concat","noFill","stroke","noStroke","fill","beginShape","vertex","i","X","lerp","noise","Y","quadraticVertex","endShape","height","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_7__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_9__","path","pathname"],"mappings":"yKAGMA,EAAS,SAASC,GACtB,IAIIC,EADAC,EAHW,IAKXC,EAAS,GACTC,EAAY,EACVC,EAAiB,CACrB,SAAAC,GAAK,OAA0B,IAAtBN,EAAEO,IAAIP,EAAEQ,IAAIF,KACrB,SAAAA,GAAK,OAA0B,IAAtBN,EAAEO,IAAIP,EAAES,IAAIH,KACrB,SAAAA,GAAK,OAA0B,IAAtBN,EAAEO,IAAIP,EAAEU,IAAIJ,KACrB,SAAAA,GAAK,OAA2B,IAAvBN,EAAEO,IAAIP,EAAEQ,KAAKF,KACtB,SAAAA,GAAK,OAA2B,IAAvBN,EAAEO,IAAIP,EAAES,KAAKH,KACtB,SAAAA,GAAK,OAA2B,IAAvBN,EAAEO,IAAIP,EAAEU,KAAKJ,KACtB,kBAAM,KACN,kBAAM,IACN,kBAAM,MAGRN,EAAEW,MAAQ,WAIR,IAHAX,EAAEY,aAAa,IAAK,KACpBZ,EAAEa,WAAW,KACbZ,EAASD,EAAEc,MAAQC,IACZC,MAAMC,KAAK,IAAIC,IAAIf,IAASF,OAAS,GAC1CE,EAAS,CACPH,EAAEmB,OAAOd,GACTL,EAAEmB,OAAOd,GACTL,EAAEmB,OAAOd,IAGbL,EAAEoB,UAAUpB,EAAEqB,SACdrB,EAAEsB,SAAStB,EAAEuB,QACbvB,EAAEwB,aAAa,IAGjBxB,EAAEyB,KAAO,WACPzB,EAAE0B,UApCW,IAoCOxB,GACpB,IAAMyB,EAAI3B,EAAE4B,MAAM5B,EAAEmB,OApCV,KAqCJU,EAAI5B,EAAS0B,EACbG,EAAI9B,EAAE+B,MAAFC,MAAAhC,EAAWG,EAAO8B,IAAI,SAAAC,GAAC,OAAIA,EAAEhC,EAAIE,KAAhC+B,OAAA,CAA6C,OACpD/B,EAAY,GACdJ,EAAEoC,SACFpC,EAAEqC,OAAOP,KAET9B,EAAEsC,WACFtC,EAAEuC,KAAKT,IAET9B,EAAEwC,aACFxC,EAAEyC,OAAO,EAAG,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAGe,IAAK,CAC1B,IAAMC,EAAI3C,EAAE4C,KAAKf,EAAIa,EAAGb,GAAKa,EAAI,GAAI1C,EAAE6C,MAAMH,EAAGxC,IAC1C4C,EAlDE,GAkDQ9C,EAAE6C,MAAM3C,EAAGwC,GAAK1C,EAAEmB,OAAO,EAAE,EAAG,IAC9CnB,EAAE+C,gBAAgBJ,EAAGG,EAAGjB,GAAKa,EAAI,GAAI,GAEvC1C,EAAEyC,OAAOxC,EAAQ,GACjBD,EAAEgD,YACF9C,GAvDU,IAwDFF,EAAEiD,OAzDG,MA0DX7C,IACAF,EA3DW,KAEI,KA2DbE,GACFJ,EAAEkD,WAKOC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAczD,OAAQA,EAAQ0D,KAAMJ,EAASK","file":"component---src-pages-sketch-2019-02-04-js-49cc697b0695c8758cac.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const MARGIN = 100;\n  const GAP = 30;\n  const ITERATIONS = 15;\n  let y = MARGIN;\n  let length;\n  let colors = [];\n  let iteration = 0;\n  const colorFunctions = [\n    angle => p.abs(p.sin(angle)) * 240,\n    angle => p.abs(p.cos(angle)) * 240,\n    angle => p.abs(p.tan(angle)) * 240,\n    angle => p.abs(p.sin(-angle)) * 240,\n    angle => p.abs(p.cos(-angle)) * 240,\n    angle => p.abs(p.tan(-angle)) * 240,\n    () => 240,\n    () => 15,\n    () => 128,\n  ];\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(127);\n    length = p.width - MARGIN * 2;\n    while (Array.from(new Set(colors)).length < 3) {\n      colors = [\n        p.random(colorFunctions),\n        p.random(colorFunctions),\n        p.random(colorFunctions),\n      ];\n    }\n    p.blendMode(p.OVERLAY);\n    p.rectMode(p.CENTER);\n    p.strokeWeight(2);\n  };\n\n  p.draw = function() {\n    p.translate(MARGIN, y);\n    const P = p.floor(p.random(GAP));\n    const S = length / P;\n    const C = p.color(...colors.map(c => c(y * iteration)), 127);\n    if (iteration % 2) {\n      p.noFill();\n      p.stroke(C);\n    } else {\n      p.noStroke();\n      p.fill(C);\n    }\n    p.beginShape();\n    p.vertex(0, 0);\n    for (let i = 0; i < P; i++) {\n      const X = p.lerp(S * i, S * (i + 1), p.noise(i, y));\n      const Y = GAP * p.noise(y, i) * p.random([-1, 1]);\n      p.quadraticVertex(X, Y, S * (i + 1), 0);\n    }\n    p.vertex(length, 0);\n    p.endShape();\n    y += GAP;\n    if (y > p.height - MARGIN) {\n      iteration++;\n      y = MARGIN;\n    }\n    if (iteration === ITERATIONS) {\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} />\n);\n"],"sourceRoot":""}
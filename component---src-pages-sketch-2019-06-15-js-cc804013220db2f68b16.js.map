{"version":3,"sources":["webpack:///./src/pages/sketch/2019/06/15.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/core-js/modules/_create-property.js"],"names":["sketch","p","HUE","random","points","setup","createCanvas","noFill","stroke","colorMode","HSB","initPoints","Array","from","a","TWO_PI","d","height","aSpeed","_loop","angle","concat","map","pt","Object","assign","draw","background","beginShape","curveVertex","apply","polarToCartesian","width","length","noise","frameCount","forEach","_ref","i","endShape","push","blendMode","MULTIPLY","x","y","fill","rect","GRID_SIZE","pop","__webpack_exports__","_ref2","location","_emotion_core__WEBPACK_IMPORTED_MODULE_4__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_6__","path","pathname","description","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","aLen","arguments","index","undefined","end","endPos","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","distance","Math","cos","sin","centerX","centerY","radiusX","radiusY","asArray","ctx","call","isArrayIter","createProperty","getIterFn","S","F","iter","arrayLike","result","step","iterator","C","mapfn","mapping","iterFn","next","done","$defineProperty","createDesc","object","f"],"mappings":"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","file":"component---src-pages-sketch-2019-06-15-js-cc804013220db2f68b16.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const STEPS = 50;\n  const GRID_SIZE = 60;\n  const HUE = p.random(70);\n\n  let points = [];\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.noFill();\n    p.stroke(255);\n    p.colorMode(p.HSB, 100);\n\n    const initPoints = Array.from(Array(3), () => ({\n      a: p.random(p.TWO_PI),\n      d: p.random(p.height),\n      aSpeed: p.random(0.005, 0.01) * p.random([-1, 1]),\n    }));\n\n    for (let angle = 0; angle < p.TWO_PI; angle += p.TWO_PI / STEPS) {\n      points = points.concat(\n        initPoints.map(pt => Object.assign({}, pt, { a: pt.a + angle }))\n      );\n    }\n  };\n\n  p.draw = function() {\n    p.background(0);\n\n    p.beginShape();\n    p.curveVertex(\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        points[points.length - 3].a,\n        points[points.length - 3].d *\n          p.noise(\n            points[points.length - 3].d,\n            points[points.length - 3].a,\n            p.frameCount / 400\n          ),\n        true\n      )\n    );\n    p.curveVertex(\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        points[points.length - 2].a,\n        points[points.length - 2].d *\n          p.noise(\n            points[points.length - 2].d,\n            points[points.length - 2].a,\n            p.frameCount / 400\n          ),\n        true\n      )\n    );\n    p.curveVertex(\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        points[points.length - 1].a,\n        points[points.length - 1].d *\n          p.noise(\n            points[points.length - 1].d,\n            points[points.length - 1].a,\n            p.frameCount / 400\n          ),\n        true\n      )\n    );\n    points.forEach(({ a, d, aSpeed }, i) => {\n      p.curveVertex(\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          a,\n          d * p.noise(d, a, p.frameCount / 400),\n          true\n        )\n      );\n      points[i].a += aSpeed;\n    });\n\n    p.endShape();\n\n    p.push();\n    p.blendMode(p.MULTIPLY);\n    for (let x = 0; x < p.width; x += GRID_SIZE) {\n      for (let y = 0; y < p.height; y += GRID_SIZE) {\n        p.fill(\n          p.map(p.noise(x + 1, y + 1, p.frameCount / 10), 0, 1, HUE, HUE + 30),\n          100,\n          100,\n          50\n        );\n        p.rect(\n          x - GRID_SIZE / 3,\n          y - GRID_SIZE / 3,\n          GRID_SIZE + GRID_SIZE / 3,\n          GRID_SIZE + GRID_SIZE / 3\n        );\n      }\n    }\n    p.pop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/11/18.js","webpack:///./src/pages/sketch/2019/11/30.js","webpack:///./src/pages/sketch/2020/01/13.js","webpack:///./src/pages/sketch/2020/02/04.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/easing.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.values.js","webpack:///./src/pages/sketch/2019/10/16.js","webpack:///./src/util/screensaver-sketches.js","webpack:///./src/pages/screensaver.js","webpack:///./src/pages/sketch/2019/07/09.js","webpack:///./src/pages/sketch/2020/02/17.js","webpack:///./src/pages/sketch/2019/11/26.js","webpack:///./src/pages/sketch/2020/03/29.js","webpack:///./src/lib/shuffle.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js"],"names":["sketch","w","h","p","RENDER","getURLParams","render","setup","pixelDensity","frameRate","min","windowWidth","floor","windowHeight","createCanvas","stroke","fill","strokeWeight","createLoop","gif","open","noiseRadius","draw","animLoop","theta","noise1D","blendMode","BLEND","background","DIFFERENCE","translate","width","height","rotate","a","TWO_PI","push","polarToCartesian","sin","beginShape","vertex","cos","endShape","CLOSE","pop","location","path","pathname","description","maxR","dist","noStroke","scale","map","QUARTER_PI","offsetA","direction","r","Math","pow","offsetB","quad","MULTIPLIERS","shuffle","noSmooth","strokeCap","SQUARE","MULTIPLY","y","WEIGHT","line","margin","totalHeight","COLORS","rectMode","CORNERS","noise2D","x","i","gap","polarToCartesianX","center","angle","distance","polarToCartesianY","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","$export","$values","S","values","it","process","DEV","HUE","random","boxes","prevMod","Box","sqrt","GRID","this","HALF_PI","PI","rotateDirection","turning","offset","noise","thirdLine","turn","turnVal","ease","colorMode","HSB","DARKEST","forEach","b","sketches","sketch20190709","sketch20191016","sketch20191118","sketch20191126","sketch20191130","sketch20200113","sketch20200204","sketch20200217","sketch20200329","ScreensaverWrapper","ScreensaverSketch","props","sketchRef","React","createRef","canvas","componentDidMount","p5","current","componentDidUpdate","remove","componentWillUnmount","ref","Component","Screensaver","interval","useState","index","setIndex","useEffect","setInterval","length","clearInterval","title","Helmet","type","circles","Circle","startA","c","circle","SIZE","ai","circleCount","cols","rows","gridWidth","gridHeight","HEX_WIDTH","ROTATION","EASINGS","Object","easing","hexagons","MASK","createGraphics","HEX_RADIUS","Hexagon","dir","clr","arc","HEX_HEIGHT","img","get","mask","image","hexX","hexY","hex","CENTER","square","size","socialDistance","particles","id","Particle","pos","createVector","acc","trails","color","setAlpha","ellipse","repulsors","concat","filter","sort","aPos","bPos","update","cp","unshift","slice","Vector","sub","normalize","add","force","mult","mag","setMag","isOnCanvas","mouseX","mouseY","pushParticle","mousePressed","mouseDragged","touchMoved","frameCount","particle","text","j","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","key","O","keys","result","call"],"mappings":"kjCAKA,IAAMA,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IAAMC,EAASD,EAAEE,eAAeC,OAEhCH,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UAAU,IAEZR,EAAIA,GAAKE,EAAEO,IAAIP,EAAEQ,YAAa,MAC9BT,EAAIA,GAAKC,EAAES,MAAMX,GAAKE,EAAEU,aAAeV,EAAEQ,cAEzCR,EAAEW,aAAab,EAAGC,GAClBC,EAAEY,OAAO,KACTZ,EAAEa,KAAK,KACPb,EAAEc,aAAa,GAEfd,EAAEe,WAAW,GAAI,CACfC,MAAKf,GAAS,CAAEE,QAAQ,EAAOc,MAAM,GACrCC,YAAa,MAIjBlB,EAAEmB,KAAO,WAAY,IAAD,EACSnB,EAAEoB,SAArBC,EADU,EACVA,MAAOC,EADG,EACHA,QACftB,EAAEuB,UAAUvB,EAAEwB,OACdxB,EAAEyB,WAAW,GACbzB,EAAEuB,UAAUvB,EAAE0B,YACd1B,EAAE2B,UAAU3B,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,GACpC7B,EAAE8B,OAAO9B,EAAEoB,SAASC,OAEpB,IAAK,IAAIU,EAAI,EAAGA,EAAI/B,EAAEgC,OAAQD,GAAK/B,EAAEgC,OAAS,EAC5ChC,EAAEiC,OACFjC,EAAE8B,OAAOC,EAAIV,GACbrB,EAAE2B,UAAF,MAAA3B,EAAC,EACIkC,YACD,EACA,EACAlC,EAAEgC,OAAS,GACD,KAAVhC,EAAE4B,MAAgB5B,EAAEmC,IAAId,IACxB,KAGJrB,EAAE8B,OAAgB,GAART,GAEVrB,EAAEoC,aACFpC,EAAEqC,OAAF,MAAArC,EAAC,EACIkC,YACD,EACA,EACAlC,EAAEgC,OAASV,EAAQ,KACT,KAAVtB,EAAE4B,MAAgB5B,EAAEmC,IAAId,IACxB,KAGJrB,EAAEqC,OAAF,MAAArC,EAAC,EACIkC,YACD,EACA,EACW,KAAXlC,EAAEgC,OAAiBV,EAAQ,KACjB,KAAVtB,EAAE4B,MAAgB5B,EAAEsC,IAAIjB,IACxB,KAGJrB,EAAEqC,OAAF,MAAArC,EAAC,EACIkC,YACD,EACA,EACW,KAAXlC,EAAEgC,OAAiBV,EAAQ,KACjB,KAAVtB,EAAE4B,MAAgB5B,EAAEmC,IAAId,IACxB,KAGJrB,EAAEuC,SAASvC,EAAEwC,OACbxC,EAAEyC,SAKK,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE7C,OAAQA,EAAO,IAAK,KACpB8C,KAAMD,EAASE,SACfC,YAAY,O,o9BClFhB,IAAMhD,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IAEI8C,EAFE7C,EAASD,EAAEE,eAAeC,OAIhCH,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UAAU,IAEZR,EAAIA,GAAKE,EAAEO,IAAIP,EAAEQ,YAAa,MAC9BT,EAAIA,GAAKC,EAAES,MAAMX,GAAKE,EAAEU,aAAeV,EAAEQ,cAEzCR,EAAEW,aAAab,EAAGC,GAElB+C,EAAO9C,EAAE+C,KAAK,EAAG,EAAG/C,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,GAC5C7B,EAAEgD,WAEFhD,EAAEe,WAAW,GAAI,CACfC,MAAKf,GAAS,CAAEE,QAAQ,EAAOc,MAAM,GACrCC,YAAa,KAIjBlB,EAAEmB,KAAO,WAAY,IAAD,EACSnB,EAAEoB,SAArBC,EADU,EACVA,MAAOC,EADG,EACHA,QAEftB,EAAEyB,WAAW,KACbzB,EAAEiC,OACFjC,EAAE2B,UAAU3B,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,GACpC7B,EAAE8B,OAAOT,GACTrB,EAAEiD,MAAMjD,EAAEkD,IAAI5B,EAAQ,KAAO,EAAG,EAAG,EAAG,IAEtCtB,EAAEa,KAAK,GACP,IAAK,IAAIkB,EAAI,EAAGA,EAAI/B,EAAEgC,OAAQD,GAAK/B,EAAEmD,WAAa,EAGhD,IAFA,IAAIC,EAAU,EACVC,EAAY,EACPC,EAAItD,EAAE4B,MAAQ,IAAM0B,GAAKR,EAAMQ,GAAKC,KAAKC,IAAIF,EAAG,OAAQ,CAC/D,IAAIG,EAAUL,EAAU9B,EAAQ,KAAQ+B,EAExCrD,EAAE0D,KAAF,MAAA1D,EAAC,EACIkC,YAAiB,EAAG,EAAGH,EAAIqB,EAASE,GAAG,IAD3C,SAEIpB,YACD,EACA,EACAH,EAAI0B,EACJH,EAAIC,KAAKC,IAAIF,EAAG,QAChB,IAPH,EASIpB,YACD,EACA,EACAH,EAAI0B,EAAUzD,EAAEmD,WAAa,GAC7BG,EAAIC,KAAKC,IAAIF,EAAG,QAChB,IAdH,EAgBIpB,YAAiB,EAAG,EAAGH,EAAIqB,EAAUpD,EAAEmD,WAAa,GAAIG,GAAG,MAEhEF,EAAUK,EACVJ,GAAaA,EAIjBrD,EAAEyC,SAIO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE7C,OAAQA,EAAO,IAAK,KACpB8C,KAAMD,EAASE,SACfC,YAAY,O,oCC5EhB,gGAIMhD,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IAAMC,EAASD,EAAEE,eAAeC,OAG1BwD,EAAc3D,EAAE4D,QAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAG9C5D,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UANS,IAQXR,EAAIA,GAAKE,EAAEO,IAAIP,EAAEQ,YAAa,MAC9BT,EAAIA,GAAKC,EAAES,MAAMX,GAAKE,EAAEU,aAAeV,EAAEQ,cAEzCR,EAAEW,aAAab,EAAGC,GAClBC,EAAEe,WAba,GAaQ,CACrBC,MAAKf,GAAS,CAAEE,QAAQ,EAAOc,MAAM,KAEvCjB,EAAEc,aAbW,GAcbd,EAAE6D,WACF7D,EAAE8D,UAAU9D,EAAE+D,SAGhB/D,EAAEmB,KAAO,WACPnB,EAAEuB,UAAUvB,EAAEwB,OACdxB,EAAEyB,WAAW,KACbzB,EAAEuB,UAAUvB,EAAEgE,UAEd,IAAK,IAAIC,EAAI,EAAGA,EAAIjE,EAAE6B,OAAQoC,GAAKC,EAAY,CAC7C,IAAMnC,EAAI/B,EAAEkD,IACVe,EACA,EACAjE,EAAE6B,OACF7B,EAAEoB,SAASC,MACXrB,EAAEoB,SAASC,MAAQrB,EAAEgC,QAGvBhC,EAAEY,OAAO,QACTZ,EAAEmE,KACAnE,EAAEkD,IAAIlD,EAAEmC,IAAIJ,EAAI4B,EAAY,KAAM,EAAG,EAAG,EAAG3D,EAAE4B,OAC7CqC,EACAjE,EAAEkD,IAAIlD,EAAEsC,IAAIP,EAAI4B,EAAY,KAAM,EAAG,EAAG,EAAG3D,EAAE4B,OAC7CqC,GAGFjE,EAAEY,OAAO,WACTZ,EAAEmE,KACAnE,EAAEkD,IAAIlD,EAAEmC,IAAIJ,EAAI4B,EAAY,KAAM,EAAG,EAAG,EAAG3D,EAAE4B,OAC7CqC,EAAIC,EACJlE,EAAEkD,IAAIlD,EAAEsC,IAAIP,EAAI4B,EAAY,KAAM,EAAG,EAAG,EAAG3D,EAAE4B,OAC7CqC,EAAIC,GAENlE,EAAEY,OAAO,UACTZ,EAAEmE,KACAnE,EAAEkD,IAAIlD,EAAEmC,IAAIJ,EAAI4B,EAAY,KAAM,EAAG,EAAG,EAAG3D,EAAE4B,OAC7CqC,EAlDS,EAmDTjE,EAAEkD,IAAIlD,EAAEsC,IAAIP,EAAI4B,EAAY,KAAM,EAAG,EAAG,EAAG3D,EAAE4B,OAC7CqC,EApDS,OA0DJ,0BAAGvB,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE7C,OAAQA,EAAO,IAAK,KACpB8C,KAAMD,EAASE,SACfC,YAAY,O,oCCxEhB,gGAIMhD,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IAMIoE,EACAC,EAPEpE,EAASD,EAAEE,eAAeC,OAI1BmE,EAAStE,EAAE4D,QAAQ,CAAC,OAAQ,UAAW,WAK7C5D,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UATS,IAWXR,EAAIA,GAAKE,EAAEO,IAAIP,EAAEQ,YAAa,MAC9BT,EAAIA,GAAKC,EAAES,MAAMX,GAAKE,EAAEU,aAAeV,EAAEQ,cAEzCR,EAAEW,aAAab,EAAGC,GAClBC,EAAE6D,WACF7D,EAAE8D,UAAU9D,EAAE+D,QACd/D,EAAEyB,WAAW,KACbzB,EAAEe,WAnBa,GAmBQ,CACrBC,MAAKf,GAAS,CAAEE,QAAQ,EAAOc,MAAM,GACrCC,YAAa,KAEflB,EAAEuE,SAASvE,EAAEwE,SACbJ,EAASpE,EAAES,MAAMT,EAAE4B,MAAQ,IAC3ByC,EAAcrE,EAAE6B,OAAkB,EAATuC,GAG3BpE,EAAEmB,KAAO,WAAY,IAAD,EACSnB,EAAEoB,SAArBC,EADU,EACVA,MAAOoD,EADG,EACHA,QACfzE,EAAEuB,UAAUvB,EAAEwB,OACdxB,EAAEyB,WAAW,KACbzB,EAAEuB,UAAUvB,EAAEgE,UAEd,IAAK,IAAIU,EAAIN,EAAQM,GAAK1E,EAAE4B,MAAQwC,EAAQM,IAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B3E,EAAEY,OAAO0D,EAAOK,IAChB,IAAMC,EAAM5E,EAAEkD,IACZlD,EAAEmC,IACAd,GAASsD,EAAI,GACX3E,EAAEkD,IAAIwB,EAAGN,EAAQpE,EAAE4B,MAAQwC,EAAQ,EAAGpE,EAAEgC,QACxC2C,IAEH,EACD,EACAN,EAAc,EACdA,GAEIJ,EAAIjE,EAAEkD,IACVuB,EAAQC,EAAGC,IACV,EACD,EACAP,EACAA,EAASC,EAAcO,GAGzB5E,EAAEmE,KAAKO,EAAGN,EAAQM,EAAI,EAAGT,GACzBjE,EAAEmE,KAAKO,EAAGT,EAAIW,EAAKF,EAAI,EAAG1E,EAAE6B,OAASuC,OAMhC,0BAAG1B,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE7C,OAAQA,EAAO,IAAK,KACpB8C,KAAMD,EAASE,SACfC,YAAY,O,kCC1EhB,0GAAMgC,EAAoB,SAACC,EAAQC,EAAOC,GACxC,OAAOF,EAASvB,KAAKjB,IAAIyC,GAASC,GAE9BC,EAAoB,SAACH,EAAQC,EAAOC,GACxC,OAAOF,EAASvB,KAAKpB,IAAI4C,GAASC,GAsB9BE,EAA0B,SAC9BC,EACAC,EACAL,EACAM,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMb,EAAIS,EAAU5B,KAAKjB,IAAIyC,GAASM,EAChCpB,EAAImB,EAAU7B,KAAKpB,IAAI4C,GAASO,EACtC,OAAOC,EAAU,CAACb,EAAGT,GAAK,CAAES,IAAGT,MAIlB/B,IAzBU,SACvBiD,EACAC,EACAL,EACAC,EACAO,QACG,IADHA,OAAU,GAEV,IAAMb,EAAIG,EAAkBM,EAASJ,EAAOC,GACtCf,EAAIgB,EAAkBG,EAASL,EAAOC,GAC5C,OAAOO,EAAU,CAACb,EAAGT,GAAK,CAAES,IAAGT,O,kCCxBjC,2kBAGA,IAAMuB,EAAS,SAAAC,GAAC,OAAIA,GAGdC,EAAa,SAAAD,GAAC,OAAIA,EAAIA,GAGtBE,EAAc,SAAAF,GAAC,OAAIA,GAAK,EAAIA,IAG5BG,EAAgB,SAAAH,GAAC,OAAKA,EAAI,GAAM,EAAIA,EAAIA,GAAU,EAAI,EAAIA,GAAKA,EAAlB,GAG7CI,EAAc,SAAAJ,GAAC,OAAIA,EAAIA,EAAIA,GAG3BK,EAAe,SAAAL,GAAC,QAAMA,EAAIA,EAAIA,EAAI,GAGlCM,EAAiB,SAAAN,GAAC,OACtBA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,GAAKA,EAAI,IAAM,EAAIA,EAAI,IAAM,EAAIA,EAAI,GAAK,GAG5DO,EAAc,SAAAP,GAAC,OAAIA,EAAIA,EAAIA,EAAIA,GAG/BQ,EAAe,SAAAR,GAAC,OAAI,KAAMA,EAAIA,EAAIA,EAAIA,GAGtCS,EAAiB,SAAAT,GAAC,OACtBA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,IAAMA,EAAIA,EAAIA,EAAIA,GAGhDU,EAAc,SAAAV,GAAC,OAAIA,EAAIA,EAAIA,EAAIA,EAAIA,GAGnCW,EAAe,SAAAX,GAAC,OAAI,IAAMA,EAAIA,EAAIA,EAAIA,EAAIA,GAG1CY,EAAiB,SAAAZ,GAAC,OACtBA,EAAI,GAAM,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,KAAOA,EAAIA,EAAIA,EAAIA,EAAIA,I,qBCzChE,IAAIa,EAAU,EAAQ,QAClBC,EAAU,EAAQ,OAAR,EAA8B,GAE5CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BC,OAAQ,SAAgBC,GACtB,OAAOH,EAAQG,O,kCCNnB,wHAMMzG,EAAS0G,GAAYC,MAAO,EAG5B/G,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IACM6G,EAAM7G,EAAE8G,SAEVC,EAAQ,GACRC,EAAU,EAIRC,GAHEjH,EAAEkH,KAAKC,MANL,WAUR,WAAYzC,EAAGT,GACbmD,KAAK1C,EAAIA,EACT0C,KAAKnD,EAAIA,EACTmD,KAAKtF,OAAS9B,EAAE8G,OAAO,CAAC,EAAG9G,EAAEqH,QAASrH,EAAEsH,GAAItH,EAAEqH,QAAUrH,EAAEsH,KAC1DF,KAAKG,gBAAkBvH,EAAE8G,OAAO,EAAE,EAAG,IACrCM,KAAKI,SAAU,EACfJ,KAAKK,OAASzH,EAAE0H,MAAMhD,EAAGT,GAAKjE,EAAEgC,OAChCoF,KAAKO,UAAY3H,EAAE8G,SAAW,GAjBxB,mBAoBR3F,KAAA,SAAKyG,GAAO,IACFvG,EAAUrB,EAAEoB,SAAZC,MAEJuG,IACFR,KAAKtF,QAAU9B,EAAEmD,WAAaiE,KAAKG,iBAGrC,IAAMM,EAAU7H,EAAEkD,IAAI7B,EAAQrB,EAAEmD,WAAY,EAAGnD,EAAEmD,WAAY,EAAG,GAEhEnD,EAAEiC,OACFjC,EAAE2B,UAAUyF,KAAK1C,EAAIyC,GAAUC,KAAKnD,EAAIkD,IACxCnH,EAAE8B,OACA9B,EAAEkD,IACA4E,yBAAKD,GACL,EACA,EACAT,KAAKtF,OACLsF,KAAKtF,OAAS9B,EAAEmD,WAAaiE,KAAKG,kBAGtCvH,EAAEc,aAjCMqG,IAmCRnH,EAAEmE,KAAK,EAAG,GAAG,IAAW,IACxBnE,EAAEmE,KAAK,EAAG,EAAGgD,GAAUA,IACvBC,KAAKO,WAAa3H,EAAEmE,KAAK,EAAG,GAAG,GAAWgD,IAC1CnH,EAAEyC,OA7CI,MAiDVzC,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UAAU,IAEZR,EAAIA,GAAKE,EAAEO,IAAIP,EAAEQ,YAAa,MAC9BT,EAAIA,GAAKC,EAAES,MAAMX,GAAKE,EAAEU,aAAeV,EAAEQ,cAEzCR,EAAEW,aAAab,EAAGC,GAClBC,EAAE+H,UAAU/H,EAAEgI,IAAK,GACnBhI,EAAEY,OAAOiG,EAAK,GAAK,IAEnB7G,EAAEe,WA/DS,GA+DY,CACrBC,MAAKf,GAAS,CAAEE,QAAQ,EAAOc,MAAM,KAGvC,IAAK,IAAIyD,EAAI,EAAGA,EAAI1E,EAAE4B,MAAO8C,GA/DlB,GAgET,IAAK,IAAIT,EAAI,EAAGA,EAAIjE,EAAE6B,OAAQoC,GAhErB,GAiEP8C,EAAM9E,KAAK,IAAIgF,EAAIvC,EAAGT,KAK5BjE,EAAEmB,KAAO,WACPnB,EAAEuB,UAAUvB,EAAEwB,OACdxB,EAAEyB,WAAW,EAAIoF,EAAK,EAAG,GACzB7G,EAAEuB,UAAUvB,EAAEiI,SAEdlB,EAAMmB,SAAQ,SAAAC,GAAC,OAAIA,EAAEhH,KAAKnB,EAAEoB,SAASC,MAAQrB,EAAEmD,YAAc6D,MAC7DA,EAAUhH,EAAEoB,SAASC,MAAQrB,EAAEmD,cAItB,0BAAGT,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE7C,OAAQA,EAAO,IAAK,KACpB8C,KAAMD,EAASE,SACfC,YAAY,O,8NCvEDuF,EAZExE,YAAQ,CACvByE,SACAC,SACAC,SACAC,SACAC,SACAC,SACAC,SACAC,SACAC,W,YCfF,IAAMC,EAAkB,6NAkBlBC,E,oBACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,UAAYC,IAAMC,YACvB,EAAKC,OAAS,KAHG,E,kHAKnBC,kBAAA,WACEjC,KAAKgC,OAAS,IAAIE,GAAGlC,KAAK4B,MAAMnJ,OAAQuH,KAAK6B,UAAUM,U,EAEzDC,mBAAA,WACEpC,KAAKgC,OAAOK,SACZrC,KAAKgC,OAAS,IAAIE,GAAGlC,KAAK4B,MAAMnJ,OAAQuH,KAAK6B,UAAUM,U,EAEzDG,qBAAA,WACEtC,KAAKgC,OAAOK,U,EAEdtJ,OAAA,WACE,OAAO,YAAC2I,EAAD,CAAoBa,IAAKvC,KAAK6B,a,GAjBTC,IAAMU,WA0DvBC,UArCK,WAAO,IAGrBC,EAHoB,EACEC,mBAAS,GAA5BC,EADiB,KACVC,EADU,KAkBxB,OAbAC,qBAAU,WAQR,OAPAJ,EAAWK,aACT,WACEF,EAASD,EAAQ,IAAM5B,EAASgC,OAAS,EAAIJ,EAAQ,KAEvDrD,GAAYC,IAAM,IAAO,MAGpB,WACLyD,cAAcP,OAKhB,8BACE,YAAC,IAAD,CAAKQ,MAAM,gBACX,YAACC,EAAA,EAAD,KACE,qBAAOC,KAAK,YAAZ,iLAUF,YAAC,EAAD,CAAmB3K,OAAQuI,EAAS4B,U,2+CCxE1C,IAEMnK,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IAAMsE,EAAStE,EAAE4D,QAAQ,CAAC,OAAQ,SAAU,YAGxC6G,EAAU,GAERC,EANI,WAOR,WAAYhG,EAAGT,GACbmD,KAAK1C,EAAIA,EACT0C,KAAKnD,EAAIA,EACTmD,KAAKuD,OAAS3K,EAAE8G,OAAO9G,EAAEgC,QAVnB,mBAYRb,KAAA,WAAQ,IAAD,OACLmD,EAAO4D,SAAQ,SAAC0C,EAAGjG,GACjB3E,EAAEa,KAAK+J,GACP5K,EAAE6K,OAAF,MAAA7K,EAAC,EACIkC,YACD,EAAKwC,EACL,EAAKT,EACL,EAAK0G,OAAS3K,EAAEoB,SAASC,MAASrB,EAAEgC,OAASsC,EAAO8F,OAAUzF,EAjB7D,GAkBM3E,EAAEkD,IAAIlD,EAAEsC,IAAItC,EAAEoB,SAASC,QAAS,EAAG,EAAG,EAAG,IAChD,IANH,QAQCrB,EAAEkD,IACAlD,EAAEsC,IAAItC,EAAEoB,SAASC,QAChB,EACD,EACAyJ,GAzBC,GA0BD9K,EAAEkD,IAAIlD,EAAEoB,SAASqD,QAAQ,EAAKC,EAAG,EAAKT,IAAK,EAAG,EAAG,EAAG,WA5BpD,KAkCVjE,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UAAU,IAEZR,EAAIA,GAAKE,EAAEO,IAAIP,EAAEQ,YAAa,KAC9BT,EAAIA,GAAKC,EAAES,MAAMX,GAAKE,EAAEU,aAAeV,EAAEQ,cAEzCR,EAAEW,aAAab,EAAGC,GAElBC,EAAEgD,WACFhD,EAAEe,WAAW,EAAG,CACdC,KAA8C,EAC9CE,YAAa,KAEfuJ,EAAQxI,KAAK,IAAIyI,EAAO1K,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,IAKhD,IAHA,IAAIyB,EAhDK,GAiDLqH,EAAS,EAENrH,EAAItD,EAAE4B,MAAQ,GAAG,CAEtB,IADA,IAAImJ,EAAK,EAEP/K,EAAE+C,KAAF,MAAA/C,EAAC,EACIkC,YAAiBlC,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,EAAG,EAAGyB,GAAG,IADtD,SAEIpB,YAAiBlC,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,EAAGkJ,EAAIzH,GAAG,MAxDnD,IA2DLyH,GAAU,KAKZ,IAFA,IAAMC,EAAczH,KAAK9C,MAAMT,EAAEgC,OAAS+I,GAGpChJ,EAAI4I,EACR5I,EAAI/B,EAAEgC,OAAS2I,EACf5I,GAAK/B,EAAEgC,OAASgJ,EAEhBP,EAAQxI,KAAR,EACMyI,EADN,EAEOxI,YAAiBlC,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,EAAGE,EAAGuB,GAAG,MAK3DA,GA5EO,GA6EPqH,GAAUI,IAId/K,EAAEmB,KAAO,WACPnB,EAAEuB,UAAUvB,EAAEwB,OACdxB,EAAEyB,WAAW,KACbzB,EAAEuB,UAAUvB,EAAEgE,UACdyG,EAAQvC,SAAQ,SAAA0C,GAAC,OAAIA,EAAEzJ,aAId,0BAAGuB,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE7C,OAAQA,EAAO,IAAK,KACpB8C,KAAMD,EAASE,SACfC,YAAY,O,k/BCjGhB,IAAMhD,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IAWIiL,EACAC,EACAC,EACAC,EAdEnL,EAASD,EAAEE,eAAeC,OAI1BkL,EAAYrL,EAAES,MADD,GACOT,EAAEkH,KAAK,IAE3BoE,EAAWtL,EAAEgC,OAAS,EAEtBuJ,EAAUvL,EAAE4D,QAAQ4H,OAAO/E,OAAOgF,IAEpCC,EAAW,GAKX1E,EAAU,EAER2E,EAAO3L,EAAE4L,eAAeP,EAZXQ,KAanBF,EAAK/K,OAAO,GACZ+K,EAAK9K,KAAK,GACV8K,EAAKvJ,aACLuJ,EAAKhK,UAAUgK,EAAK/J,MAAQ,EAAG+J,EAAK9J,OAAS,GAC7C,IAAK,IAAIE,EAAI,EAAGA,EAAI/B,EAAEgC,OAAQD,GAAK/B,EAAEgC,OAAS,EAC5C2J,EAAKtJ,OAAL,MAAAsJ,EAAI,EACCzJ,YAAiB,EAAG,EAAGH,EAAI/B,EAAEgC,OAAS,GArB1B,IAqB0C,KAG7D2J,EAAKpJ,WA5BK,IA8BJuJ,EA9BI,WA+BR,WAAYpH,EAAGT,GACbmD,KAAK1C,EAAIA,EACT0C,KAAKnD,EAAIA,EACTmD,KAAKtF,OAAS9B,EAAE8G,OACd,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG5D,KAAI,SAAAyB,GAAC,OAAI2G,EAAW3G,EAAI3E,EAAEgC,OAAS,OAExDoF,KAAK2E,IAAM/L,EAAE8G,OAAO,CAAC,GAAI,IACzBM,KAAKI,SAAU,EAEfJ,KAAKgC,OAASpJ,EAAE4L,eAAeP,EAlChBQ,KAmCfzE,KAAKgC,OAAOpG,WACZoE,KAAKgC,OAAOvI,KAAK,GA1CX,mBA6CRM,KAAA,SAAKyG,GAAO,IAAD,OACDvG,EAAUrB,EAAEoB,SAAZC,MAEJuG,IACFR,KAAKtF,QAAUwJ,EAAWlE,KAAK2E,KAGjC,IAAMlE,EAAU7H,EAAEkD,IAAI7B,EAAQiK,EAAU,EAAGA,EAAU,EAAG,GAExDlE,KAAKgC,OAAO3H,WAAW,KACvB2F,KAAKgC,OAAOnH,OACZmF,KAAKgC,OAAO7H,UAAUvB,EAAEgE,UACxBoD,KAAKgC,OAAOzH,UAAUyF,KAAKgC,OAAOxH,MAAQ,EAAGwF,KAAKgC,OAAOvH,OAAS,GAElE,CAAC,OAAQ,UAAW,UAAUqG,SAAQ,SAAC8D,EAAKrH,GAC1C,EAAKyE,OAAOnH,OACZ,EAAKmH,OAAOvI,KAAKmL,GACjB,EAAK5C,OAAOtH,OACV9B,EAAEkD,IACAqI,EAAQ5G,GAAGkD,GACX,EACA,EACA,EAAK/F,OACL,EAAKA,OAASwJ,EAAW,EAAKS,MAGlC,EAAK3C,OAAO6C,IAAI,EAAG,EAAGC,IAAgBA,IAAgB,EAAGlM,EAAEsH,IAC3D,EAAK8B,OAAO3G,SAEd2E,KAAKgC,OAAO3G,MAEZ,IAAM0J,EAAM/E,KAAKgC,OAAOgD,MACxBD,EAAIE,KAAKV,GAET3L,EAAEsM,MAAMH,EAAK/E,KAAK1C,EAAI2G,EAAY,EAAGjE,KAAKnD,EAAIiI,KA/ExC,KAmFVlM,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UAlFS,IAoFXR,EAAIA,GAAKE,EAAEO,IAAIP,EAAEQ,YAAa,MAC9BT,EAAIA,GAAKC,EAAES,MAAMX,GAAKE,EAAEU,aAAeV,EAAEQ,cAEzCR,EAAEW,aAAab,EAAGC,GAClBC,EAAEe,WAzFa,GAyFQ,CACrBC,MAAKf,GAAS,CAAEE,QAAQ,EAAOc,MAAM,GACrCC,YAAa,KAGf+J,EAAOjL,EAAES,OAAOT,EAAE4B,MAAQyJ,EAAY,GAAKA,GAC3CH,EAAOlL,EAAES,OAAOT,EAAE4B,MAAQsK,IAAX,IACff,EAAYF,EAAOI,EAAYA,EAAY,EAC3CD,EAAiB,GAAJF,EAA6BgB,GAE1C,IAAK,IAAIxH,EAAI,EAAGA,EAAIuG,EAAMvG,IACxB,IAAK,IAAIT,EAAI,EAAGA,EAAIiH,EAAMjH,IAAK,CAC7B,IAAMsI,EACJ7H,EAAI2G,GACHpH,EAAI,EAAIoH,EAAYA,EAAY,IAChCrL,EAAE4B,MAAQuJ,GAAa,EACpBqB,EArGOX,IAsGX5H,EAAiB,IACjBiI,IACClM,EAAE6B,OAASuJ,GAAc,EAE5BM,EAASzJ,KAAK,IAAI6J,EAAQS,EAAMC,MAKtCxM,EAAEmB,KAAO,WACPnB,EAAEyB,WAAW,KACbiK,EAASxD,SAAQ,SAAAuE,GAAG,OAAIA,EAAItL,KAAKnB,EAAEoB,SAASC,MAAQiK,GAAYtE,MAChEA,EAAUhH,EAAEoB,SAASC,MAAQiK,KAIpB,0BAAG5I,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE7C,OAAQA,EAAO,IAAK,KACpB8C,KAAMD,EAASE,SACfC,YAAY,O,kKCjIVhD,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IAAMC,EAASD,EAAEE,eAAeC,OAGhCH,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UAAU,IAEZR,EAAIA,GAAKE,EAAEO,IAAIP,EAAEQ,YAAa,MAC9BT,EAAIA,GAAKC,EAAES,MAAMX,GAAKE,EAAEU,aAAeV,EAAEQ,cAEzCR,EAAEW,aAAab,EAAGC,GAClBC,EAAEe,WAAW,GAAI,CACfC,MAAKf,GAAS,CAAEE,QAAQ,EAAOc,MAAM,KAEvCjB,EAAEuE,SAASvE,EAAE0M,QACb1M,EAAEgD,WACFhD,EAAEa,KAAK,MAGTb,EAAEmB,KAAO,WAAY,IACXE,EAAUrB,EAAEoB,SAAZC,MACRrB,EAAEuB,UAAUvB,EAAEwB,OACdxB,EAAEyB,WAAW,GACbzB,EAAEuB,UAAUvB,EAAE0B,YAEd,IAAK,IAAIgD,EAAIyC,IAAUzC,EAAI1E,EAAE4B,MAAO8C,GAxBzB,GAyBT,IAAK,IAAIT,EAAIkD,IAAUlD,EAAIjE,EAAE6B,OAAQoC,GAzB5B,GA0BPjE,EAAEiC,OACFjC,EAAE2B,UAAU+C,EAAGT,GACfjE,EAAE2M,OACA,EACA,EACAxF,GAEEW,wBACE9H,EAAEkD,IACAlD,EAAEsC,IAAItC,EAAE+C,KAAK2B,EAAGT,EAAGjE,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,GAAKR,IAC/C,EACD,EACA,EACA,IAGN8F,KAEFnH,EAAEyC,SAMG,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE7C,OAAQA,EAAO,IAAK,KACpB8C,KAAMD,EAASE,SACfC,YAAY,O,49BC1DhB,IAAMhD,EAAS,SAACC,EAAGC,GAAJ,OACb,SAASC,GACP,IAAI4M,EAAO,EACPC,EAAiB,EACjBC,EAAY,GACZC,EAAK,EAEHC,EANI,WAOR,WAAYtI,EAAGT,GACbmD,KAAK2F,KAAOA,EACZ3F,KAAK6F,IAAMjN,EAAEkN,aAAaxI,EAAGT,GAC7BmD,KAAK2E,IAAM/L,EAAEkN,aACXlN,EAAE8G,OAAO,CAAC,KAAO,MACjB9G,EAAE8G,OAAO,CAAC,KAAO,OAEnBM,KAAK+F,IAAMnN,EAAEkN,eACb9F,KAAKgG,OAAS,GACdhG,KAAKiG,MAAQrN,EAAEqN,MAAM,CAAC,aAAc,YAAa,SAASjG,KAAK2F,GAAK,IACpE3F,KAAKiG,MAAMC,SAAS,KAjBd,2BAmBRnM,KAAA,WACEnB,EAAEgD,WACFhD,EAAEa,KAAK,GAAI,IACXuG,KAAKgG,OAAOlF,SAAQ,SAAA+E,GAAG,OAAIjN,EAAEuN,QAAF,MAAAvN,EAAC,EAAYiN,GAAZ,QAAiBL,QAE7C5M,EAAEa,KAAKuG,KAAKiG,OACZrN,EAAEuN,QAAQnG,KAAK6F,IAAIvI,EAAG0C,KAAK6F,IAAIhJ,EAAG2I,IAzB5B,EA6BRY,UAAA,WAAa,IAAD,OACNlK,EAAI,CACN,IAAI0J,EAAS5F,KAAK6F,IAAIvI,EAAG,GACzB,IAAIsI,EAAS5F,KAAK6F,IAAIvI,EAAG1E,EAAE6B,QAC3B,IAAImL,EAAS,EAAG5F,KAAK6F,IAAIhJ,GACzB,IAAI+I,EAAShN,EAAE4B,MAAOwF,KAAK6F,IAAIhJ,IAC/BwJ,OAAOX,GAaT,OAZAxJ,EAAIA,EACDoK,QAAO,qBAAGX,KAAgB,EAAKA,MAC/BW,QACC,gBAAGT,EAAH,EAAGA,IAAH,OACEjN,EAAE+C,KAAKkK,EAAIvI,EAAGuI,EAAIhJ,EAAG,EAAKgJ,IAAIvI,EAAG,EAAKuI,IAAIhJ,GAAK4I,KAElDc,MACC,kBAAQC,EAAR,EAAGX,IAAoBY,EAAvB,EAAkBZ,IAAlB,OACEjN,EAAE+C,KAAK6K,EAAKlJ,EAAGkJ,EAAK3J,EAAG,EAAKgJ,IAAIvI,EAAG,EAAKuI,IAAIhJ,GAC5CjE,EAAE+C,KAAK8K,EAAKnJ,EAAGmJ,EAAK5J,EAAG,EAAKgJ,IAAIvI,EAAG,EAAKuI,IAAIhJ,MAC9C,IA9CE,EAkDR6J,OAAA,WACE,IAAMC,EAAK3G,KAAKoG,YAIhB,GAHApG,KAAKgG,OAAOY,QAAQ,CAAC5G,KAAK6F,IAAIvI,EAAG0C,KAAK6F,IAAIhJ,IAC1CmD,KAAKgG,OAAShG,KAAKgG,OAAOa,MAAM,EAAG,GAE/BF,EAAI,CACN,IAAM1K,EAAYiG,GAAG4E,OAAOC,IAAIJ,EAAGd,IAAK7F,KAAK6F,KAC7C5J,EAAUvB,OAAO9B,EAAEsH,IACnBjE,EAAU+K,YACVhH,KAAK2E,IAAIsC,IAAIhL,GACb+D,KAAK2E,IAAIqC,YACThH,KAAK6F,IAAIoB,IAAIjH,KAAK2E,KAElB,IAAMuC,EAAQhF,GAAG4E,OAAOK,KAAKnH,KAAK2E,IAAK3E,KAAK6F,KACtClK,EAAO/C,EAAE+C,KAAKgL,EAAGd,IAAIvI,EAAGqJ,EAAGd,IAAIhJ,EAAGmD,KAAK6F,IAAIvI,EAAG0C,KAAK6F,IAAIhJ,GACvDuK,EAAM1G,uBAAM+E,EAAiB9J,GAAQ8J,GAC3CyB,EAAMG,OAAOD,GACbpH,KAAK+F,IAAIkB,IAAIC,GAEblH,KAAK6F,IAAIoB,IAAIjH,KAAK+F,UAElB/F,KAAK2E,IAAM/L,EAAEkN,aAAa,EAAG,GAC7B9F,KAAK+F,IAAMnN,EAAEkN,gBAxET,KA6EV,SAASwB,IACP,OACE1O,EAAE2O,QAAU,GACZ3O,EAAE4O,QAAU,GACZ5O,EAAE2O,QAAU3O,EAAE4B,OACd5B,EAAE4O,QAAU5O,EAAE6B,OAIlB,SAASgN,IACPH,GAAc5B,EAAU7K,KAAK,IAAI+K,EAAShN,EAAE2O,OAAQ3O,EAAE4O,SAGxD5O,EAAE8O,aAAeD,EACjB7O,EAAE+O,aAAeF,EACjB7O,EAAEgP,WAAa,WAEb,OADAH,KACQH,GAGV1O,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UAAU,IAEZR,EAAIA,GAAKE,EAAEO,IAAIP,EAAEQ,YAAa,MAC9BT,EAAIA,GAAKC,EAAES,MAAMX,GAAKE,EAAEU,aAAeV,EAAEQ,cAEzCR,EAAEW,aAAab,EAAGC,GAClBC,EAAE6D,WACFiJ,EAAU7K,KAAK,IAAI+K,EAAShN,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,IACpD+K,EAAO5M,EAAE4B,MAAQ,GACjBiL,GAAkB7M,EAAE4B,MAAQ,GAG9B5B,EAAEmB,KAAO,WACPnB,EAAEyB,WAAW,KAETzB,EAAEiP,WAAa,KAAQ,GACzBnC,EAAU7K,KAAK,IAAI+K,EAAShN,EAAE4B,MAAQ,EAAG5B,EAAE6B,OAAS,IAGtDiL,EAAU5E,SAAQ,SAAAgH,GAChBA,EAASpB,SACToB,EAAS/N,UAIX2L,EAAYA,EAAUY,QACpB,gBAAGT,EAAH,EAAGA,IAAH,OACEA,EAAIvI,GAAa,EAAPkI,GACVK,EAAIvI,EAAI1E,EAAE4B,MAAe,EAAPgL,GAClBK,EAAIhJ,GAAa,EAAP2I,GACVK,EAAIhJ,EAAIjE,EAAE6B,OAAgB,EAAP+K,KAGvB5M,EAAEa,KAAK,GACPb,EAAEmP,KAAKrC,EAAU1C,OAAQ,GAAIpK,EAAE6B,OAAS,OAI/B,0BAAGa,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE7C,OAAQA,EAAO,IAAK,KACpB8C,KAAMD,EAASE,SACfC,YAAY,oD,kCCnJD,SAASe,EAAQ7B,GAC9B,IAAK,IAAI4C,EAAI5C,EAAEqI,OAAS,EAAGzF,EAAI,EAAGA,IAAK,CACrC,IAAMyK,EAAI7L,KAAK9C,MAAM8C,KAAKuD,UAAYnC,EAAI,IADL,EAEtB,CAAC5C,EAAEqN,GAAIrN,EAAE4C,IAAvB5C,EAAE4C,GAFkC,KAE9B5C,EAAEqN,GAF4B,KAIvC,OAAOrN,EALT,mC,qBCAA,IAAIsN,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUlJ,GAOf,IANA,IAKImJ,EALAC,EAAIP,EAAU7I,GACdqJ,EAAOT,EAAQQ,GACf1F,EAAS2F,EAAK3F,OACdzF,EAAI,EACJqL,EAAS,GAEN5F,EAASzF,GACdkL,EAAME,EAAKpL,KACN0K,IAAeG,EAAOS,KAAKH,EAAGD,IACjCG,EAAO/N,KAAK2N,EAAY,CAACC,EAAKC,EAAED,IAAQC,EAAED,IAG9C,OAAOG","file":"component---src-pages-screensaver-js-8983067ade28b215481d.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = (w, h) =>\n  function(p) {\n    const RENDER = p.getURLParams().render;\n\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(30);\n\n      w = w || p.min(p.windowWidth, 1280);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n      p.stroke(255);\n      p.fill(255);\n      p.strokeWeight(2);\n\n      p.createLoop(40, {\n        gif: RENDER ? { render: false, open: true } : false,\n        noiseRadius: 0.5,\n      });\n    };\n\n    p.draw = function() {\n      const { theta, noise1D } = p.animLoop;\n      p.blendMode(p.BLEND);\n      p.background(0);\n      p.blendMode(p.DIFFERENCE);\n      p.translate(p.width / 2, p.height / 2);\n      p.rotate(p.animLoop.theta);\n\n      for (let a = 0; a < p.TWO_PI; a += p.TWO_PI / 9) {\n        p.push();\n        p.rotate(a + theta);\n        p.translate(\n          ...polarToCartesian(\n            0,\n            0,\n            p.TWO_PI / 12,\n            p.width * 0.333 * p.sin(theta),\n            true\n          )\n        );\n        p.rotate(-theta * 2);\n\n        p.beginShape();\n        p.vertex(\n          ...polarToCartesian(\n            0,\n            0,\n            p.TWO_PI * noise1D(0.05),\n            p.width * 0.333 * p.sin(theta),\n            true\n          )\n        );\n        p.vertex(\n          ...polarToCartesian(\n            0,\n            0,\n            p.TWO_PI * 0.333 * noise1D(0.06),\n            p.width * 0.333 * p.cos(theta),\n            true\n          )\n        );\n        p.vertex(\n          ...polarToCartesian(\n            0,\n            0,\n            p.TWO_PI * 0.666 * noise1D(0.07),\n            p.width * 0.333 * p.sin(theta),\n            true\n          )\n        );\n        p.endShape(p.CLOSE);\n        p.pop();\n      }\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 480)}\n    path={location.pathname}\n    description=\"\"\n  />\n);\n\nexport { sketch };\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport \"p5.createloop\";\n\nconst sketch = (w, h) =>\n  function(p) {\n    const RENDER = p.getURLParams().render;\n\n    let maxR;\n\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(30);\n\n      w = w || p.min(p.windowWidth, 1280);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n\n      maxR = p.dist(0, 0, p.width / 2, p.height / 2);\n      p.noStroke();\n\n      p.createLoop(40, {\n        gif: RENDER ? { render: false, open: true } : false,\n        noiseRadius: 1,\n      });\n    };\n\n    p.draw = function() {\n      const { theta, noise1D } = p.animLoop;\n\n      p.background(255);\n      p.push();\n      p.translate(p.width / 2, p.height / 2);\n      p.rotate(theta);\n      p.scale(p.map(noise1D(0.1), -1, 1, 1, 4));\n\n      p.fill(0);\n      for (let a = 0; a < p.TWO_PI; a += p.QUARTER_PI / 6) {\n        let offsetA = 0;\n        let direction = 1;\n        for (let r = p.width / 1000; r <= maxR; r += Math.pow(r, 1.001)) {\n          let offsetB = offsetA + noise1D(0.05) * direction;\n\n          p.quad(\n            ...polarToCartesian(0, 0, a + offsetA, r, true),\n            ...polarToCartesian(\n              0,\n              0,\n              a + offsetB,\n              r + Math.pow(r, 1.001),\n              true\n            ),\n            ...polarToCartesian(\n              0,\n              0,\n              a + offsetB + p.QUARTER_PI / 10,\n              r + Math.pow(r, 1.001),\n              true\n            ),\n            ...polarToCartesian(0, 0, a + offsetA + p.QUARTER_PI / 10, r, true)\n          );\n          offsetA = offsetB;\n          direction = -direction;\n        }\n      }\n\n      p.pop();\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 840)}\n    path={location.pathname}\n    description=\"\"\n  />\n);\n\nexport { sketch };\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst sketch = (w, h) =>\n  function(p) {\n    const RENDER = p.getURLParams().render;\n    const DURATION = 49;\n    const RATE = 30;\n    const MULTIPLIERS = p.shuffle([1, 2, 3, 5, 7, 11]);\n    const WEIGHT = 2;\n\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(RATE);\n\n      w = w || p.min(p.windowWidth, 1280);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n      p.createLoop(DURATION, {\n        gif: RENDER ? { render: false, open: true } : false,\n      });\n      p.strokeWeight(WEIGHT);\n      p.noSmooth();\n      p.strokeCap(p.SQUARE);\n    };\n\n    p.draw = function() {\n      p.blendMode(p.BLEND);\n      p.background(255);\n      p.blendMode(p.MULTIPLY);\n\n      for (let y = 0; y < p.height; y += WEIGHT * 2) {\n        const a = p.map(\n          y,\n          0,\n          p.height,\n          p.animLoop.theta,\n          p.animLoop.theta + p.TWO_PI\n        );\n\n        p.stroke(\"cyan\");\n        p.line(\n          p.map(p.sin(a * MULTIPLIERS[0]), -1, 1, 0, p.width),\n          y,\n          p.map(p.cos(a * MULTIPLIERS[1]), -1, 1, 0, p.width),\n          y\n        );\n\n        p.stroke(\"magenta\");\n        p.line(\n          p.map(p.sin(a * MULTIPLIERS[2]), -1, 1, 0, p.width),\n          y + WEIGHT / 2,\n          p.map(p.cos(a * MULTIPLIERS[3]), -1, 1, 0, p.width),\n          y + WEIGHT / 2\n        );\n        p.stroke(\"yellow\");\n        p.line(\n          p.map(p.sin(a * MULTIPLIERS[4]), -1, 1, 0, p.width),\n          y + WEIGHT,\n          p.map(p.cos(a * MULTIPLIERS[5]), -1, 1, 0, p.width),\n          y + WEIGHT\n        );\n      }\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 840)}\n    path={location.pathname}\n    description=\"\"\n  />\n);\n\nexport { sketch };\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst sketch = (w, h) =>\n  function(p) {\n    const RENDER = p.getURLParams().render;\n    const DURATION = 20;\n    const RATE = 30;\n\n    const COLORS = p.shuffle([\"cyan\", \"magenta\", \"yellow\"]);\n\n    let margin;\n    let totalHeight;\n\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(RATE);\n\n      w = w || p.min(p.windowWidth, 1280);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n      p.noSmooth();\n      p.strokeCap(p.SQUARE);\n      p.background(255);\n      p.createLoop(DURATION, {\n        gif: RENDER ? { render: false, open: true } : false,\n        noiseRadius: 0.1,\n      });\n      p.rectMode(p.CORNERS);\n      margin = p.floor(p.width / 30);\n      totalHeight = p.height - margin * 2;\n    };\n\n    p.draw = function() {\n      const { theta, noise2D } = p.animLoop;\n      p.blendMode(p.BLEND);\n      p.background(255);\n      p.blendMode(p.MULTIPLY);\n\n      for (let x = margin; x <= p.width - margin; x++) {\n        for (let i = 0; i < 3; i++) {\n          p.stroke(COLORS[i]);\n          const gap = p.map(\n            p.sin(\n              theta * (i + 1) +\n                p.map(x, margin, p.width - margin, 0, p.TWO_PI) +\n                i\n            ),\n            -1,\n            1,\n            totalHeight / 4,\n            totalHeight\n          );\n          const y = p.map(\n            noise2D(x, i),\n            -1,\n            1,\n            margin,\n            margin + totalHeight - gap\n          );\n\n          p.line(x, margin, x + 1, y);\n          p.line(x, y + gap, x + 1, p.height - margin);\n        }\n      }\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 840)}\n    path={location.pathname}\n    description=\"\"\n  />\n);\n\nexport { sketch };\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport { easeInOutQuint as ease } from \"~lib/easing\";\nimport Link from \"~components/link\";\n\nconst RENDER = process.env.DEV && false;\nconst DURATION = 15;\n\nconst sketch = (w, h) =>\n  function(p) {\n    const GRID = 60;\n    const HUE = p.random();\n\n    let boxes = [];\n    let prevMod = 0;\n    let d = p.sqrt(GRID * GRID + GRID * GRID);\n    let wGrid = GRID / 2;\n\n    class Box {\n      constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.rotate = p.random([0, p.HALF_PI, p.PI, p.HALF_PI + p.PI]);\n        this.rotateDirection = p.random([-1, 1]);\n        this.turning = false;\n        this.offset = p.noise(x, y) * p.TWO_PI;\n        this.thirdLine = p.random() < 0.5;\n      }\n\n      draw(turn) {\n        const { theta } = p.animLoop;\n\n        if (turn) {\n          this.rotate += p.QUARTER_PI * this.rotateDirection;\n        }\n\n        const turnVal = p.map(theta % p.QUARTER_PI, 0, p.QUARTER_PI, 0, 1);\n\n        p.push();\n        p.translate(this.x + GRID / 2, this.y + GRID / 2);\n        p.rotate(\n          p.map(\n            ease(turnVal),\n            0,\n            1,\n            this.rotate,\n            this.rotate + p.QUARTER_PI * this.rotateDirection\n          )\n        );\n        p.strokeWeight(wGrid);\n\n        p.line(0, 0, -GRID / 2, -GRID / 2);\n        p.line(0, 0, GRID / 2, GRID / 2);\n        this.thirdLine && p.line(0, 0, -GRID / 2, GRID / 2);\n        p.pop();\n      }\n    }\n\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(30);\n\n      w = w || p.min(p.windowWidth, 1280);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n      p.colorMode(p.HSB, 1);\n      p.stroke(HUE, 0.8, 0.7);\n\n      p.createLoop(DURATION, {\n        gif: RENDER ? { render: false, open: true } : false,\n      });\n\n      for (let x = 0; x < p.width; x += GRID) {\n        for (let y = 0; y < p.height; y += GRID) {\n          boxes.push(new Box(x, y));\n        }\n      }\n    };\n\n    p.draw = function() {\n      p.blendMode(p.BLEND);\n      p.background(1 - HUE, 1, 1);\n      p.blendMode(p.DARKEST);\n\n      boxes.forEach(b => b.draw(p.animLoop.theta % p.QUARTER_PI <= prevMod));\n      prevMod = p.animLoop.theta % p.QUARTER_PI;\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 840)}\n    path={location.pathname}\n    description=\"\"\n  />\n);\n\nexport { sketch };\n","import { sketch as sketch20190709 } from \"../pages/sketch/2019/07/09\";\nimport { sketch as sketch20191016 } from \"../pages/sketch/2019/10/16\";\nimport { sketch as sketch20191118 } from \"../pages/sketch/2019/11/18\";\nimport { sketch as sketch20191126 } from \"../pages/sketch/2019/11/26\";\nimport { sketch as sketch20191130 } from \"../pages/sketch/2019/11/30\";\nimport { sketch as sketch20200113 } from \"../pages/sketch/2020/01/13\";\nimport { sketch as sketch20200204 } from \"../pages/sketch/2020/02/04\";\nimport { sketch as sketch20200217 } from \"../pages/sketch/2020/02/17\";\nimport { sketch as sketch20200329 } from \"../pages/sketch/2020/03/29\";\n\nimport shuffle from \"~lib/shuffle\";\n\nconst sketches = shuffle([\n  sketch20190709,\n  sketch20191016,\n  sketch20191118,\n  sketch20191126,\n  sketch20191130,\n  sketch20200113,\n  sketch20200204,\n  sketch20200217,\n  sketch20200329,\n]);\n\nexport default sketches;\n","import React, { useState, useEffect } from \"react\";\nimport SEO from \"~components/seo\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"@emotion/styled\";\nimport sketches from \"../util/screensaver-sketches\";\n\nconst ScreensaverWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  & > canvas {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100% !important;\n    height: 100% !important;\n  }\n`;\n\nclass ScreensaverSketch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sketchRef = React.createRef();\n    this.canvas = null;\n  }\n  componentDidMount() {\n    this.canvas = new p5(this.props.sketch, this.sketchRef.current);\n  }\n  componentDidUpdate() {\n    this.canvas.remove();\n    this.canvas = new p5(this.props.sketch, this.sketchRef.current);\n  }\n  componentWillUnmount() {\n    this.canvas.remove();\n  }\n  render() {\n    return <ScreensaverWrapper ref={this.sketchRef} />;\n  }\n}\n\nconst Screensaver = () => {\n  const [index, setIndex] = useState(0);\n\n  let interval;\n\n  useEffect(() => {\n    interval = setInterval(\n      () => {\n        setIndex(index + 1 === sketches.length ? 0 : index + 1);\n      },\n      process.env.DEV ? 5000 : 120000\n    );\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  return (\n    <>\n      <SEO title=\"Screensaver\" />\n      <Helmet>\n        <style type=\"text/css\">{`\n            html, body {\n              width: 100%;\n              max-width: 100%;\n              margin: 0;\n              overflow: hidden;\n            }\n          `}</style>\n      </Helmet>\n\n      <ScreensaverSketch sketch={sketches[index]()} />\n    </>\n  );\n};\n\nexport default Screensaver;\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport \"p5.createloop\";\n\nconst RENDER = false;\n\nconst sketch = (w, h) =>\n  function(p) {\n    const COLORS = p.shuffle([\"cyan\", \"yellow\", \"magenta\"]);\n    let SIZE = 30;\n\n    let circles = [];\n\n    class Circle {\n      constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.startA = p.random(p.TWO_PI);\n      }\n      draw() {\n        COLORS.forEach((c, i) => {\n          p.fill(c);\n          p.circle(\n            ...polarToCartesian(\n              this.x,\n              this.y,\n              this.startA + p.animLoop.theta + (p.TWO_PI / COLORS.length) * i,\n              SIZE * p.map(p.cos(p.animLoop.theta), -1, 1, 0, 2),\n              true\n            ),\n            p.map(\n              p.cos(p.animLoop.theta),\n              -1,\n              1,\n              SIZE / 3,\n              p.map(p.animLoop.noise2D(this.x, this.y), -1, 1, 1, 3) * SIZE\n            )\n          );\n        });\n      }\n    }\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(30);\n\n      w = w || p.min(p.windowWidth, 960);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n\n      p.noStroke();\n      p.createLoop(5, {\n        gif: RENDER ? { render: false, open: true } : false,\n        noiseRadius: 0.2,\n      });\n      circles.push(new Circle(p.width / 2, p.height / 2));\n\n      let r = SIZE;\n      let startA = 0;\n\n      while (r < p.width / 2) {\n        let ai = 0;\n        while (\n          p.dist(\n            ...polarToCartesian(p.width / 2, p.height / 2, 0, r, true),\n            ...polarToCartesian(p.width / 2, p.height / 2, ai, r, true)\n          ) < SIZE\n        ) {\n          ai = ai + 0.001;\n        }\n\n        const circleCount = Math.floor(p.TWO_PI / ai);\n\n        for (\n          let a = startA;\n          a < p.TWO_PI + startA;\n          a += p.TWO_PI / circleCount\n        ) {\n          circles.push(\n            new Circle(\n              ...polarToCartesian(p.width / 2, p.height / 2, a, r, true)\n            )\n          );\n        }\n\n        r += SIZE;\n        startA += ai;\n      }\n    };\n\n    p.draw = function() {\n      p.blendMode(p.BLEND);\n      p.background(255);\n      p.blendMode(p.MULTIPLY);\n      circles.forEach(c => c.draw());\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 840)}\n    path={location.pathname}\n    description=\"\"\n  />\n);\n\nexport { sketch };\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport * as easing from \"~lib/easing\";\n\nconst sketch = (w, h) =>\n  function(p) {\n    const RENDER = p.getURLParams().render;\n    const DURATION = 30;\n    const RATE = 30;\n    const HEX_RADIUS = 60;\n    const HEX_WIDTH = p.floor(p.sqrt(3) * HEX_RADIUS);\n    const HEX_HEIGHT = HEX_RADIUS * 2;\n    const ROTATION = p.TWO_PI / 3;\n\n    const EASINGS = p.shuffle(Object.values(easing));\n\n    let hexagons = [];\n    let cols;\n    let rows;\n    let gridWidth;\n    let gridHeight;\n    let prevMod = 0;\n\n    const MASK = p.createGraphics(HEX_WIDTH, HEX_HEIGHT);\n    MASK.stroke(0);\n    MASK.fill(0);\n    MASK.beginShape();\n    MASK.translate(MASK.width / 2, MASK.height / 2);\n    for (let a = 0; a < p.TWO_PI; a += p.TWO_PI / 6) {\n      MASK.vertex(\n        ...polarToCartesian(0, 0, a + p.TWO_PI / 12, HEX_RADIUS, true)\n      );\n    }\n    MASK.endShape();\n\n    class Hexagon {\n      constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.rotate = p.random(\n          [0, 1, 2, 3, 4, 5].map(i => ROTATION * i + p.TWO_PI / 12)\n        );\n        this.dir = p.random([1, -1]);\n        this.turning = false;\n\n        this.canvas = p.createGraphics(HEX_WIDTH, HEX_HEIGHT);\n        this.canvas.noStroke();\n        this.canvas.fill(0);\n      }\n\n      draw(turn) {\n        const { theta } = p.animLoop;\n\n        if (turn) {\n          this.rotate += ROTATION * this.dir;\n        }\n\n        const turnVal = p.map(theta % ROTATION, 0, ROTATION, 0, 1);\n\n        this.canvas.background(255);\n        this.canvas.push();\n        this.canvas.blendMode(p.MULTIPLY);\n        this.canvas.translate(this.canvas.width / 2, this.canvas.height / 2);\n\n        [\"cyan\", \"magenta\", \"yellow\"].forEach((clr, i) => {\n          this.canvas.push();\n          this.canvas.fill(clr);\n          this.canvas.rotate(\n            p.map(\n              EASINGS[i](turnVal),\n              0,\n              1,\n              this.rotate,\n              this.rotate + ROTATION * this.dir\n            )\n          );\n          this.canvas.arc(0, 0, HEX_HEIGHT * 2, HEX_HEIGHT * 2, 0, p.PI);\n          this.canvas.pop();\n        });\n        this.canvas.pop();\n\n        const img = this.canvas.get();\n        img.mask(MASK);\n\n        p.image(img, this.x - HEX_WIDTH / 2, this.y - HEX_HEIGHT / 2);\n      }\n    }\n\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(RATE);\n\n      w = w || p.min(p.windowWidth, 1280);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n      p.createLoop(DURATION, {\n        gif: RENDER ? { render: false, open: true } : false,\n        noiseRadius: 0.5,\n      });\n\n      cols = p.floor((p.width - HEX_WIDTH / 2) / HEX_WIDTH);\n      rows = p.floor((p.width - HEX_HEIGHT / 4) / (HEX_HEIGHT * 0.75));\n      gridWidth = cols * HEX_WIDTH + HEX_WIDTH / 2;\n      gridHeight = rows * (HEX_HEIGHT * 0.75) + HEX_HEIGHT / 4;\n\n      for (let x = 0; x < cols; x++) {\n        for (let y = 0; y < rows; y++) {\n          const hexX =\n            x * HEX_WIDTH +\n            (y % 2 ? HEX_WIDTH : HEX_WIDTH / 2) +\n            (p.width - gridWidth) / 2;\n          const hexY =\n            y * HEX_HEIGHT * 0.75 +\n            HEX_HEIGHT / 2 +\n            (p.height - gridHeight) / 2;\n\n          hexagons.push(new Hexagon(hexX, hexY));\n        }\n      }\n    };\n\n    p.draw = function() {\n      p.background(255);\n      hexagons.forEach(hex => hex.draw(p.animLoop.theta % ROTATION <= prevMod));\n      prevMod = p.animLoop.theta % ROTATION;\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 840)}\n    path={location.pathname}\n    description=\"\"\n  />\n);\n\nexport { sketch };\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport { easeInOutQuad as ease } from \"~lib/easing\";\nimport \"p5.createloop\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = (w, h) =>\n  function(p) {\n    const RENDER = p.getURLParams().render;\n    const GRID = 15;\n\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(30);\n\n      w = w || p.min(p.windowWidth, 1280);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n      p.createLoop(20, {\n        gif: RENDER ? { render: false, open: true } : false,\n      });\n      p.rectMode(p.CENTER);\n      p.noStroke();\n      p.fill(255);\n    };\n\n    p.draw = function() {\n      const { theta } = p.animLoop;\n      p.blendMode(p.BLEND);\n      p.background(0);\n      p.blendMode(p.DIFFERENCE);\n\n      for (let x = GRID / 2; x < p.width; x += GRID) {\n        for (let y = GRID / 2; y < p.height; y += GRID) {\n          p.push();\n          p.translate(x, y);\n          p.square(\n            0,\n            0,\n            GRID *\n              2 *\n              ease(\n                p.map(\n                  p.cos(p.dist(x, y, p.width / 2, p.height / 2) + theta),\n                  -1,\n                  1,\n                  0,\n                  1\n                )\n              ),\n            GRID / 2\n          );\n          p.pop();\n        }\n      }\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 840)}\n    path={location.pathname}\n    description=\"\"\n  />\n);\n\nexport { sketch };\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport { easeOutQuad as ease } from \"~lib/easing\";\n\nconst sketch = (w, h) =>\n  function(p) {\n    let size = 0;\n    let socialDistance = 0;\n    let particles = [];\n    let id = 0;\n\n    class Particle {\n      constructor(x, y) {\n        this.id = ++id;\n        this.pos = p.createVector(x, y);\n        this.dir = p.createVector(\n          p.random([0.01, -0.01]),\n          p.random([0.01, -0.01])\n        );\n        this.acc = p.createVector();\n        this.trails = [];\n        this.color = p.color([\"lightgreen\", \"darkgreen\", \"green\"][this.id % 3]);\n        this.color.setAlpha(128);\n      }\n      draw() {\n        p.noStroke();\n        p.fill(96, 32);\n        this.trails.forEach(pos => p.ellipse(...pos, size));\n\n        p.fill(this.color);\n        p.ellipse(this.pos.x, this.pos.y, size);\n\n        // p.text(this.id, this.pos.x, this.pos.y);\n      }\n      repulsors() {\n        let r = [\n          new Particle(this.pos.x, 0),\n          new Particle(this.pos.x, p.height),\n          new Particle(0, this.pos.y),\n          new Particle(p.width, this.pos.y),\n        ].concat(particles);\n        r = r\n          .filter(({ id }) => id !== this.id)\n          .filter(\n            ({ pos }) =>\n              p.dist(pos.x, pos.y, this.pos.x, this.pos.y) < socialDistance\n          )\n          .sort(\n            ({ pos: aPos }, { pos: bPos }) =>\n              p.dist(aPos.x, aPos.y, this.pos.x, this.pos.y) -\n              p.dist(bPos.x, bPos.y, this.pos.x, this.pos.y)\n          )[0];\n\n        return r;\n      }\n      update() {\n        const cp = this.repulsors();\n        this.trails.unshift([this.pos.x, this.pos.y]);\n        this.trails = this.trails.slice(0, 5);\n\n        if (cp) {\n          const direction = p5.Vector.sub(cp.pos, this.pos);\n          direction.rotate(p.PI);\n          direction.normalize();\n          this.dir.add(direction);\n          this.dir.normalize();\n          this.pos.add(this.dir);\n\n          const force = p5.Vector.mult(this.dir, this.pos);\n          const dist = p.dist(cp.pos.x, cp.pos.y, this.pos.x, this.pos.y);\n          const mag = ease((socialDistance - dist) / socialDistance);\n          force.setMag(mag);\n          this.acc.add(force);\n\n          this.pos.add(this.acc);\n        } else {\n          this.dir = p.createVector(0, 0);\n          this.acc = p.createVector();\n        }\n      }\n    }\n\n    function isOnCanvas() {\n      return (\n        p.mouseX >= 0 &&\n        p.mouseY >= 0 &&\n        p.mouseX <= p.width &&\n        p.mouseY <= p.height\n      );\n    }\n\n    function pushParticle() {\n      isOnCanvas && particles.push(new Particle(p.mouseX, p.mouseY));\n    }\n\n    p.mousePressed = pushParticle;\n    p.mouseDragged = pushParticle;\n    p.touchMoved = function() {\n      pushParticle();\n      return !isOnCanvas;\n    };\n\n    p.setup = function() {\n      p.pixelDensity(1);\n      p.frameRate(30);\n\n      w = w || p.min(p.windowWidth, 1280);\n      h = h || p.floor(w * (p.windowHeight / p.windowWidth));\n\n      p.createCanvas(w, h);\n      p.noSmooth();\n      particles.push(new Particle(p.width / 2, p.height / 2));\n      size = p.width / 20;\n      socialDistance += p.width / 8;\n    };\n\n    p.draw = function() {\n      p.background(128);\n\n      if (p.frameCount % 100 === 0) {\n        particles.push(new Particle(p.width / 2, p.height / 2));\n      }\n\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // remove off-canvas particles for performance\n      particles = particles.filter(\n        ({ pos }) =>\n          pos.x > -(size * 2) &&\n          pos.x < p.width + size * 2 &&\n          pos.y > -(size * 2) &&\n          pos.y < p.height + size * 2\n      );\n\n      p.fill(0);\n      p.text(particles.length, 10, p.height - 10);\n    };\n  };\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch(660, 660)}\n    path={location.pathname}\n    description=\"Click and drag to maintain social distancing.\"\n  />\n);\n\nexport { sketch };\n","export default function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/11/22.js"],"names":["sketch","p","myFont","RENDER","getURLParams","render","HUE","random","Box","this","x","width","w","color","glitch","floor","setY","y","height","animLoop","noise1D","noiseRadius","draw","theta","fill","rect","abs","frameCount","boxes","myWords","preload","loadFont","withPrefix","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","open","colorMode","HSL","Array","map","blendMode","BLEND","background","DIFFERENCE","noStroke","textFont","textAlign","CENTER","key","length","str","max","min","text","toUpperCase","forEach","b","location","path","pathname","description"],"mappings":"4KAKMA,EAAS,SAASC,GACtB,IA+BIC,EA/BEC,EAASF,EAAEG,eAAeC,OAC1BC,EAAML,EAAEM,SAERC,EAJmB,WAKvB,aACEC,KAAKC,EAAIT,EAAEM,OAAON,EAAEU,OACpBF,KAAKG,EAAIX,EAAEM,OAAON,EAAEU,OAEpBF,KAAKI,MAAQZ,EAAEY,MAAMP,EAAK,EAAGL,EAAEM,UAC/BE,KAAKK,OAASb,EAAEc,MAAMd,EAAEM,OAAO,GAAI,KAVd,2BAYvBS,KAAA,WACEP,KAAKQ,EAAIhB,EAAEiB,OAASjB,EAAEkB,SAASC,QAAQX,KAAKK,OAAQ,CAAEO,YAAa,OAb9C,EAevBC,KAAA,WAAQ,IAAD,EACsBrB,EAAEkB,SAArBI,EADH,EACGA,MAAOH,EADV,EACUA,QACD,IAAVG,GAAad,KAAKO,OACtBf,EAAEuB,KAAKf,KAAKI,OACZZ,EAAEwB,KACAhB,KAAKC,EAAIT,EAAEU,MAAQS,EAAQX,KAAKC,EAAG,CAAEW,YAAa,KAClDZ,KAAKQ,EACLR,KAAKG,EAAIX,EAAEyB,IAAIN,EAAQX,KAAKC,EAAG,CAAEW,YAAa,MAC9CpB,EAAEiB,OAAS,GAETjB,EAAE0B,WAAalB,KAAKK,QAAW,GACjCL,KAAKO,QA1Bc,KA+BrBY,EAAQ,GAGRC,EAAU,CACZ,gBACA,aACA,WACA,QACA,UACA,UACA,YACA,QACA,QACA,YACA,UACA,iBACA,QACA,SACA,OACA,QACA,WACA,UACA,WACA,WACA,OACA,aACA,UACA,WACA,WACA,QACA,UACA,YACA,aACA,WACA,WACA,aACA,UACA,mBACA,QACA,SACA,UACA,SACA,YACA,QACA,WACA,SACA,YACA,QACA,SACA,UACA,SACA,QACA,SACA,SACA,eACA,SACA,WACA,UACA,eACA,mBACA,SACA,OACA,YACA,kBACA,WACA,aACA,gBACA,cACA,WACA,YACA,SACA,cACA,YACA,UACA,QACA,WACA,OACA,QACA,SACA,cACA,UACA,SACA,cACA,WACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,QACA,cACA,SAGF5B,EAAE6B,QAAU,WACV5B,EAASD,EAAE8B,SAASC,qBAAW,gCAGjC/B,EAAEgC,MAAQ,WACJ9B,IACFF,EAAEiC,aAAa,GACfjC,EAAEkC,UAAU,KAGdlC,EAAEmC,aAAa,IAAK,KACpBnC,EAAEoC,WAAW,GAAI,CACfC,MAAKnC,GAAS,CAAEE,QAAQ,EAAOkC,MAAM,GACrClB,YAAa,KAEfpB,EAAEuC,UAAUvC,EAAEwC,IAAK,GAEnBb,EAAQc,MAAM,IACXlB,OACAmB,KAAI,kBAAM,IAAInC,MAGnBP,EAAEqB,KAAO,WACPrB,EAAE2C,UAAU3C,EAAE4C,OACd5C,EAAE6C,WAAW,GACb7C,EAAE2C,UAAU3C,EAAE8C,YACd9C,EAAE+C,WAEF/C,EAAEgD,SAAS/C,EAAQ,KACnBD,EAAEiD,UAAUjD,EAAEkD,QAEd,IAAK,IAAIlC,EAAI,GAAIA,EAAIhB,EAAEiB,OAAQD,GAAK,GAAI,CACtChB,EAAEuB,KAAKlB,EAAKL,EAAEyB,IAAIzB,EAAEkB,SAASC,QAAQH,IAAK,GAAK,IAC/C,IAAMmC,EAAMnD,EAAEc,MAAMd,EAAEyB,IAAIzB,EAAEkB,SAASC,QAAQH,IAAMY,EAAQwB,QACrDC,EACJzB,EAAQ5B,EAAEsD,IAAIH,EAAM,EAAG,IACvBvB,EAAQuB,GACRvB,EAAQ5B,EAAEuD,IAAIJ,EAAM,EAAGvB,EAAQwB,OAAS,IAC1CpD,EAAEwD,KAAKH,EAAII,cAAezD,EAAEU,MAAQ,EAAGM,GAGzCW,EAAM+B,SAAQ,SAAAC,GAAC,OAAIA,EAAEtC,YAIV,0BAAGuC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc7D,OAAQA,EAAQ8D,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-11-22-js-cf61c8bae0110d6c5897.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport { withPrefix } from \"gatsby\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const HUE = p.random();\n\n  class Box {\n    constructor() {\n      this.x = p.random(p.width);\n      this.w = p.random(p.width);\n\n      this.color = p.color(HUE, 1, p.random());\n      this.glitch = p.floor(p.random(15, 60));\n    }\n    setY() {\n      this.y = p.height * p.animLoop.noise1D(this.glitch, { noiseRadius: 300 });\n    }\n    draw() {\n      const { theta, noise1D } = p.animLoop;\n      if (theta === 0) this.setY();\n      p.fill(this.color);\n      p.rect(\n        this.x + p.width * noise1D(this.x, { noiseRadius: 20 }),\n        this.y,\n        this.w * p.abs(noise1D(this.x, { noiseRadius: 10 })),\n        p.height / 2\n      );\n      if (p.frameCount % this.glitch === 0) {\n        this.setY();\n      }\n    }\n  }\n\n  let boxes = [];\n  let myFont;\n  // https://api.datamuse.com/words?rel_trg=nervous\n  let myWords = [\n    \"acetylcholine\",\n    \"activation\",\n    \"activity\",\n    \"acute\",\n    \"alcohol\",\n    \"anxiety\",\n    \"autonomic\",\n    \"blood\",\n    \"brain\",\n    \"breakdown\",\n    \"cardiac\",\n    \"cardiovascular\",\n    \"cause\",\n    \"causes\",\n    \"cell\",\n    \"cells\",\n    \"cerebral\",\n    \"chronic\",\n    \"clinical\",\n    \"collapse\",\n    \"cord\",\n    \"depression\",\n    \"disease\",\n    \"diseases\",\n    \"disorder\",\n    \"drugs\",\n    \"effects\",\n    \"endocrine\",\n    \"exhaustion\",\n    \"exposure\",\n    \"function\",\n    \"functional\",\n    \"ganglia\",\n    \"gastrointestinal\",\n    \"heart\",\n    \"humans\",\n    \"illness\",\n    \"immune\",\n    \"infection\",\n    \"liver\",\n    \"membrane\",\n    \"mental\",\n    \"molecular\",\n    \"motor\",\n    \"muscle\",\n    \"muscles\",\n    \"myelin\",\n    \"nerve\",\n    \"nerves\",\n    \"neural\",\n    \"neurological\",\n    \"neuron\",\n    \"neuronal\",\n    \"neurons\",\n    \"neuroscience\",\n    \"neurotransmitter\",\n    \"organs\",\n    \"pain\",\n    \"paralysis\",\n    \"parasympathetic\",\n    \"patients\",\n    \"peripheral\",\n    \"physiological\",\n    \"psychiatric\",\n    \"receptor\",\n    \"receptors\",\n    \"reflex\",\n    \"respiratory\",\n    \"responses\",\n    \"sensory\",\n    \"shock\",\n    \"skeletal\",\n    \"skin\",\n    \"sleep\",\n    \"spinal\",\n    \"stimulation\",\n    \"stimuli\",\n    \"stress\",\n    \"sympathetic\",\n    \"symptoms\",\n    \"synaptic\",\n    \"syndrome\",\n    \"system\",\n    \"systems\",\n    \"tissue\",\n    \"tissues\",\n    \"toxicity\",\n    \"tract\",\n    \"vertebrates\",\n    \"virus\",\n  ];\n\n  p.preload = function() {\n    myFont = p.loadFont(withPrefix(\"/assets/NewsCycle-Bold.ttf\"));\n  };\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n    p.colorMode(p.HSL, 1);\n\n    boxes = Array(30)\n      .fill()\n      .map(() => new Box());\n  };\n\n  p.draw = function() {\n    p.blendMode(p.BLEND);\n    p.background(0);\n    p.blendMode(p.DIFFERENCE);\n    p.noStroke();\n\n    p.textFont(myFont, 100);\n    p.textAlign(p.CENTER);\n\n    for (let y = 77; y < p.height; y += 76) {\n      p.fill(HUE, p.abs(p.animLoop.noise1D(y)), 0.5, 0.5);\n      const key = p.floor(p.abs(p.animLoop.noise1D(y)) * myWords.length);\n      const str =\n        myWords[p.max(key - 1, 0)] +\n        myWords[key] +\n        myWords[p.min(key + 1, myWords.length - 1)];\n      p.text(str.toUpperCase(), p.width / 2, y);\n    }\n\n    boxes.forEach(b => b.draw());\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
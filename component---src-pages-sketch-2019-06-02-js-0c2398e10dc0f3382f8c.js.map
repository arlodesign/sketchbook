{"version":3,"sources":["webpack:///./src/pages/sketch/2019/06/02.js","webpack:///./src/lib/polarToCartesian.js"],"names":["sketch","p","particles","Particle","x","y","this","velocity","createVector","random","position","move","prev","add","map","noise","frameCount","mult","display","stroke","cos","strokeWeight","dist","width","height","line","setup","createCanvas","a","TWO_PI","push","polarToCartesian","background","draw","forEach","particle","SketchPage","href","polarToCartesianEllipse","centerX","centerY","angle","radiusX","radiusY","asArray","Math","sin","distance","center","polarToCartesianX","polarToCartesianY"],"mappings":"2lCAKA,IAAMA,EAAS,SAASC,GACtB,IACIC,EAAY,GAEVC,EAJmB,WAKvB,WAAYC,EAAGC,GACbC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAETC,KAAKC,SAAWN,EAAEO,aAAaP,EAAEQ,QAAQ,EAAG,GAAIR,EAAEQ,QAAQ,EAAG,IAC7DH,KAAKI,SAAWT,EAAEO,aAAaF,KAAKF,EAAGE,KAAKD,GAVvB,2BAavBM,KAAA,WACEL,KAAKM,KAAO,CAAER,EAAGE,KAAKI,SAASN,EAAGC,EAAGC,KAAKI,SAASL,GACnDC,KAAKC,SAASM,IACZZ,EAAEO,aACAP,EAAEa,IACAb,EAAEc,MACAT,KAAKI,SAASN,EAAI,IAClBE,KAAKI,SAASL,EAAI,IAClBJ,EAAEe,WAAa,KAEjB,EACA,GACC,GACD,IAEFf,EAAEa,IACAb,EAAEc,MACAT,KAAKI,SAASN,EAAI,IAClBE,KAAKI,SAASL,EAAI,IAClBJ,EAAEe,WAAa,KAEjB,EACA,GACC,GACD,MAINV,KAAKC,SAASU,KAxCD,SAyCbX,KAAKI,SAASG,IAAIP,KAAKC,WA1CF,EA6CvBW,QAAA,WAAW,IAAD,EACSZ,KAAKI,SAAdN,EADA,EACAA,EAAGC,EADH,EACGA,EACXJ,EAAEkB,OAAOlB,EAAEa,IAAIb,EAAEmB,IAAInB,EAAEe,WAAa,MAAO,EAAG,EAAG,EAAG,MACpDf,EAAEoB,aACApB,EAAEa,IACAb,EAAEqB,KAAKlB,EAAGC,EAAGJ,EAAEsB,MAAQ,EAAGtB,EAAEuB,OAAS,GACrC,EACAvB,EAAEqB,KAAK,EAAG,EAAGrB,EAAEsB,MAAQ,EAAGtB,EAAEuB,OAAS,GACrC,EACA,KAGJvB,EAAEwB,KAAKnB,KAAKM,KAAKR,EAAGE,KAAKM,KAAKP,EAAGD,EAAGC,IAzDf,KA6DzBJ,EAAEyB,MAAQ,WACRzB,EAAE0B,aAAa,IAAK,KACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI3B,EAAE4B,OAAQD,GAAK3B,EAAE4B,OAAS,GAC5C3B,EAAU4B,KAAV,EACM3B,EADN,EAEO4B,YAAiB9B,EAAEsB,MAAQ,EAAGtB,EAAEuB,OAAS,EAAGI,EAAG,IAAI,MAI5D3B,EAAE+B,WAAW,IAGf/B,EAAEgC,KAAO,WACP/B,EAAUgC,SAAQ,SAAAC,GAChBA,EAASxB,OACTwB,EAASjB,eAgBAkB,UAXI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQpC,OAAQA,IAChB,oEAEE,6BAFF,eAGc,uBAAGqC,KAAK,gCAAR,gBAHd,Q,kCCzFJ,sCAiBMC,EAA0B,SAC9BC,EACAC,EACAC,EACAC,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMxC,EAAImC,EAAUM,KAAKzB,IAAIqB,GAASC,EAChCrC,EAAImC,EAAUK,KAAKC,IAAIL,GAASE,EACtC,OAAOC,EAAU,CAACxC,EAAGC,GAAK,CAAED,IAAGC,MAIlB0B,IAzBU,SACvBQ,EACAC,EACAC,EACAM,EACAH,QACG,IADHA,OAAU,GAEV,IAAMxC,EAbkB,SAAC4C,EAAQP,EAAOM,GACxC,OAAOC,EAASH,KAAKzB,IAAIqB,GAASM,EAYxBE,CAAkBV,EAASE,EAAOM,GACtC1C,EAXkB,SAAC2C,EAAQP,EAAOM,GACxC,OAAOC,EAASH,KAAKC,IAAIL,GAASM,EAUxBG,CAAkBV,EAASC,EAAOM,GAC5C,OAAOH,EAAU,CAACxC,EAAGC,GAAK,CAAED,IAAGC","file":"component---src-pages-sketch-2019-06-02-js-0c2398e10dc0f3382f8c.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  let multiplier = 0.97;\n  let particles = [];\n\n  class Particle {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n\n      this.velocity = p.createVector(p.random(-1, 1), p.random(-1, 1));\n      this.position = p.createVector(this.x, this.y);\n    }\n\n    move() {\n      this.prev = { x: this.position.x, y: this.position.y };\n      this.velocity.add(\n        p.createVector(\n          p.map(\n            p.noise(\n              this.position.x / 300,\n              this.position.y / 200,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          ),\n          p.map(\n            p.noise(\n              this.position.x / 200,\n              this.position.y / 300,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          )\n        )\n      );\n      this.velocity.mult(multiplier, multiplier);\n      this.position.add(this.velocity);\n    }\n\n    display() {\n      const { x, y } = this.position;\n      p.stroke(p.map(p.cos(p.frameCount / 500), -1, 1, 0, 255));\n      p.strokeWeight(\n        p.map(\n          p.dist(x, y, p.width / 2, p.height / 2),\n          0,\n          p.dist(0, 0, p.width / 2, p.height / 2),\n          5,\n          10\n        )\n      );\n      p.line(this.prev.x, this.prev.y, x, y);\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    for (let a = 0; a < p.TWO_PI; a += p.TWO_PI / 50) {\n      particles.push(\n        new Particle(\n          ...polarToCartesian(p.width / 2, p.height / 2, a, 10, true)\n        )\n      );\n    }\n    p.background(0);\n  };\n\n  p.draw = function() {\n    particles.forEach(particle => {\n      particle.move();\n      particle.display();\n    });\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n    <p>\n      Reload page for a different variation.\n      <br />\n      Inspired by <a href=\"https://github.com/wangyasai\">Yasaiâ€™s work</a>.\n    </p>\n  </Layout>\n);\n\nexport default SketchPage;\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/coordinate-systems/src/index.js","webpack:///./node_modules/core-js/modules/es7.array.flat-map.js","webpack:///./node_modules/core-js/modules/es7.string.pad-end.js","webpack:///./node_modules/core-js/modules/es7.string.pad-start.js","webpack:///./node_modules/core-js/modules/es7.string.trim-left.js","webpack:///./node_modules/core-js/modules/_string-pad.js","webpack:///./node_modules/core-js/modules/es6.array.reduce-right.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/core-js/modules/es7.string.trim-right.js","webpack:///./src/pages/sketch/2019/09/29.js","webpack:///./node_modules/core-js/modules/_flatten-into-array.js"],"names":["Object","defineProperty","exports","value","CoordinateType","lodash_1","degPerRadian","Math","PI","Coordinate","_a","coordinates","isDegree","type","isRadian","this","cooridnatesByType","Error","cartesian","length","CARTESIAN_2D","CARTESIAN_3D","cylindrical","CYLINDRICAL","polar","POLAR","spherical","SPHERICAL","cylindricalToSpherical","sr","sp","coordinate","rtz","r","t","z","sqrt","atan2","polarToCart2d","cos","sin","cartesian3dToCylindrical","rt","center","xyz","x","y","cartesian2dToPolar","undefined","sphericalToCart3d","p","sphericalToCylindrical","cr","rtp","cartesian3dToSpherical","x2","y2","z2","xy","isArray","TypeError","prototype","temp","options","$export","flattenIntoArray","toObject","toLength","aFunction","arraySpeciesCreate","P","flatMap","callbackfn","sourceLen","A","O","arguments","$pad","userAgent","WEBKIT_BUG","test","F","padEnd","maxLength","padStart","$trim","repeat","defined","module","that","fillString","left","S","String","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","ceil","slice","$reduce","reduceRight","webpackPolyfill","deprecate","paths","children","enumerable","get","l","i","RENDER","process","DEV","sketch","radius","HUE","random","setup","pixelDensity","frameRate","createCanvas","WEBGL","createLoop","gif","render","open","noiseRadius","colorMode","HSB","width","draw","theta","animLoop","background","stroke","strokeWeight","noFill","cameraPosition","camera","startingPoint","th","beginShape","curveVertex","phi","rThetaPhi","map","endShape","CLOSE","noStroke","fill","pointLight","specularMaterial","sphere","location","path","pathname","description","isObject","ctx","IS_CONCAT_SPREADABLE","target","original","source","start","depth","mapper","thisArg","element","spreadable","targetIndex","sourceIndex","mapFn"],"mappings":"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","file":"component---src-pages-sketch-2019-09-29-js-a6d4834a5a0244845ba4.js","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = require(\"lodash\");\n\nvar CoordinateType;\n\n(function (CoordinateType) {\n  CoordinateType[\"CARTESIAN_2D\"] = \"CARTESIAN_2D\";\n  CoordinateType[\"CARTESIAN_3D\"] = \"CARTESIAN_3D\";\n  CoordinateType[\"CYLINDRICAL\"] = \"CYLINDRICAL\";\n  CoordinateType[\"POLAR\"] = \"POLAR\";\n  CoordinateType[\"SPHERICAL\"] = \"SPHERICAL\";\n})(CoordinateType = exports.CoordinateType || (exports.CoordinateType = {}));\n\nvar degPerRadian = 180 / Math.PI;\n/**\n * @constructor Coordinate\n * @description Defines object which can convert between coordinate systems.\n * It is recommended to use one of the Coodinate.STATIC_CONSTRUCTOR functions\n * to generate your first coordinate before conversions. e.g. Coodinate.spherical(...)\n * @param {Object} config\n * {\n *     label: 'type of initial coordinate',\n *     coords: {\n *         x/y/z/r/t/p: 'k-v pairs'\n *     },\n *     isDegree: Boolean\n * }\n */\n\nvar Coordinate =\n/** @class */\nfunction () {\n  function Coordinate(_a) {\n    var coordinates = _a.coordinates,\n        isDegree = _a.isDegree,\n        isRadian = _a.isRadian,\n        type = _a.type;\n    this.isRadian = true;\n    this.isDegree = false;\n    this.cooridnatesByType = {};\n\n    if (isDegree) {\n      this.isDegree = true;\n      this.isRadian = false;\n    }\n\n    if (!type) throw new Error('no type coordinate type defined');\n    if (!coordinates) throw new Error('no coordinates provided');\n    this.type = type;\n    this.coordinates = coordinates;\n    this.cooridnatesByType[type] = this.coordinates;\n  } //\n  // Static Constructor Functions\n  //\n\n  /**\n   * Create a point provided x, y, and optionally z coordinates\n   * @param  {Object} coordinates\n   * @return {Coordinate}\n   */\n\n\n  Coordinate.cartesian = function (coordinates) {\n    if (coordinates.length === 2) {\n      return new Coordinate({\n        coordinates: coordinates,\n        type: CoordinateType.CARTESIAN_2D\n      });\n    }\n\n    if (coordinates.length === 3) {\n      return new Coordinate({\n        coordinates: coordinates,\n        type: CoordinateType.CARTESIAN_3D\n      });\n    }\n\n    throw new Error('coordinates should have length 2 or 3');\n  };\n\n  Coordinate.cylindrical = function (coordinates) {\n    if (coordinates.length !== 3) {\n      throw new Error('expected exactly 3 params [r, t, z]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.CYLINDRICAL\n    });\n  };\n\n  Coordinate.polar = function (coordinates) {\n    if (coordinates.length !== 2) {\n      throw new Error('expected exactly 2 params [r, t]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.POLAR\n    });\n  };\n\n  Coordinate.spherical = function (coordinates) {\n    if (coordinates.length !== 3) {\n      throw new Error('expected exactly 3 params [r, t, p]');\n    }\n\n    return new Coordinate({\n      coordinates: coordinates,\n      type: CoordinateType.SPHERICAL\n    });\n  }; //\n  // STATIC Converters\n  //\n\n  /**\n   * Convert a cylindrical to a spherical coordinates\n   * @param  {Array}   rtz\n   * @param  {Boolean} isDegree\n   * @return {Array}   [radius, theta, phi]\n   */\n\n\n  Coordinate.cylindricalToSpherical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var rtz = coordinate;\n    var r = rtz[0];\n    var t = rtz[1];\n    var z = rtz[2];\n    var sr, sp; // sphere radius, sphere theta...\n\n    if (isDegree) {\n      t = t / degPerRadian;\n    }\n\n    sr = Math.sqrt(r * r + z * z);\n    sp = Math.atan2(r, z);\n\n    if (isDegree) {\n      sp = sp * degPerRadian;\n      t = t * degPerRadian;\n    }\n\n    return [sr, t, sp];\n  };\n  /**\n   * Convert polar to 2d cartesian coordinates\n   * @param  {Array}   rt        [radis, theta]\n   * @param  {Boolean} isDegree specifies units\n   * @return {Array}  [x, y]\n   */\n\n\n  Coordinate.polarToCart2d = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var r, t, x, y;\n    r = coordinate[0];\n    t = coordinate[1];\n\n    if (isDegree) {\n      t = t * (1 / degPerRadian);\n    }\n\n    x = r * Math.cos(t);\n    y = r * Math.sin(t);\n    return [x, y];\n  };\n  /**\n   * Convert 3d cartesian to 3d cylindrical coordinates\n   * @param  {Array}      argument [x, y, z] coords\n   * @param  {Boolean=}   isDegree overrides default radian theta assumption\n   * @param  {Array=}     center [x, y] coords of center of circle\n   * @return {Array}      [radius, theta, z]\n   */\n\n\n  Coordinate.cartesian3dToCylindrical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xyz = coordinate;\n    var x = xyz[0];\n    var y = xyz[1];\n    var z = xyz[2];\n    var rt;\n    rt = Coordinate.cartesian2dToPolar({\n      coordinate: [x, y],\n      isDegree: isDegree,\n      center: center ? [center[0], center[1]] : undefined\n    });\n    return [rt[0], rt[1], z];\n  };\n\n  Coordinate.sphericalToCart3d = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var r = coordinate[0];\n    var t = coordinate[1];\n    var p = coordinate[2];\n    var x;\n    var y;\n    var z;\n\n    if (isDegree) {\n      t = t / degPerRadian;\n      p = p / degPerRadian;\n    }\n\n    x = r * Math.sin(p) * Math.cos(t);\n    y = r * Math.sin(p) * Math.sin(t);\n    z = r * Math.cos(p);\n    return [x, y, z];\n  };\n  /**\n   * Convert spherical to cylindrical coordinates\n   */\n\n\n  Coordinate.sphericalToCylindrical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree;\n    var rtp = coordinate;\n    var r = rtp[0];\n    var t = rtp[1];\n    var p = rtp[2];\n    var cr;\n    var z;\n\n    if (isDegree) {\n      t = t / degPerRadian;\n      p = p / degPerRadian;\n    }\n\n    cr = r * Math.sin(p);\n    z = r * Math.cos(p);\n\n    if (isDegree) {\n      t = t * degPerRadian;\n      p = p * degPerRadian;\n    }\n\n    return [cr, t, z];\n  };\n  /**\n   * Convert 3d cartesian to 3d spherical coordinates\n   * @param  {Array}      argument [x, y, z] coords\n   * @param  {Boolean=}   isDegree overrides default radian theta assumption\n   * @param  {Array=}     center [x, y, z] coords of center of circle\n   * @return {Array}      [radius, theta, phi]\n   */\n\n\n  Coordinate.cartesian3dToSpherical = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xyz = coordinate;\n\n    if (center && center.length !== 3) {\n      throw new Error('expected center value to have [x, y, z] coords' + 'for locating sphere center');\n    }\n\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2];\n    var x2;\n    var y2;\n    var z2;\n    var r;\n    var t;\n    var p;\n\n    if (center) {\n      x = x - center[0];\n      y = y - center[1];\n      z = z - center[2];\n    }\n\n    x2 = x * x;\n    y2 = y * y;\n    z2 = z * z;\n    r = Math.sqrt(x2 + y2 + z2);\n\n    if (!r) {\n      p = t = 0;\n    } else {\n      t = Math.atan2(y, x);\n      p = Math.atan2(Math.sqrt(x2 + y2), z);\n\n      if (isDegree) {\n        t = t * degPerRadian;\n        p = p * degPerRadian;\n      }\n    }\n\n    return [r, t, p];\n  };\n  /**\n   * Convert cartesian 2d to polar coordinates\n   * @param  {Array=} center [x, y] coords of center of circle.  Defaults to [0, 0],\n   * however may be offset.\n   * @return {Array}  [radius, theta]\n   */\n\n\n  Coordinate.cartesian2dToPolar = function (_a) {\n    var coordinate = _a.coordinate,\n        isDegree = _a.isDegree,\n        center = _a.center;\n    var xy = coordinate;\n    var x, y, r, t;\n\n    if (!lodash_1.isArray(xy) || xy.length !== 2) {\n      throw new TypeError('coorinate must be an [x, y, ...] array');\n    }\n\n    x = xy[0];\n    y = xy[1];\n\n    if (center && (!lodash_1.isArray(center) || center.length !== 2)) {\n      throw new TypeError('expected [x, y] center array');\n    }\n\n    if (center) {\n      x = x - center[0];\n      y = y - center[1];\n    }\n\n    r = Math.sqrt(x * x + y * y);\n    t = Math.atan2(y, x);\n    if (isDegree) t = t * degPerRadian;\n    return [r, t];\n  };\n\n  Coordinate.prototype.cartesian = function () {\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_2D];\n\n      case CoordinateType.CARTESIAN_3D:\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      case CoordinateType.POLAR:\n        this.cooridnatesByType[CoordinateType.CARTESIAN_2D] = Coordinate.polarToCart2d({\n          coordinate: this.cooridnatesByType[CoordinateType.POLAR],\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_2D];\n\n      case CoordinateType.CYLINDRICAL:\n        var _a = this.cooridnatesByType[CoordinateType.CYLINDRICAL],\n            r = _a[0],\n            t = _a[1];\n        var temp = Coordinate.polarToCart2d({\n          coordinate: [r, t],\n          isDegree: this.isDegree\n        });\n        this.cooridnatesByType[CoordinateType.CARTESIAN_3D] = [temp[0], temp[1], this.coordinates[2]];\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      case CoordinateType.SPHERICAL:\n        this.cooridnatesByType[CoordinateType.CARTESIAN_3D] = Coordinate.sphericalToCart3d({\n          coordinate: this.cooridnatesByType[CoordinateType.SPHERICAL],\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType[CoordinateType.CARTESIAN_3D];\n\n      default:\n        throw new Error(\"cannot convert from \" + this.type + \" to cartesian\");\n    }\n  };\n\n  Coordinate.prototype.cylindrical = function (options) {\n    var temp;\n    options = options || {};\n    var center = options.center ? [options.center[0], options.center[1], options.center[2] || 0] : undefined;\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        temp = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: center\n        });\n        this.cooridnatesByType.CYLINDRICAL = [temp[0], temp[1], 0];\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.CYLINDRICAL = Coordinate.cartesian3dToCylindrical({\n          coordinate: this.cooridnatesByType[CoordinateType.CARTESIAN_3D],\n          isDegree: this.isDegree,\n          center: center\n        });\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      case CoordinateType.POLAR:\n        temp = this.cooridnatesByType.POLAR;\n        return [temp[0], temp[1], 0];\n\n      case CoordinateType.CYLINDRICAL:\n        return this.cooridnatesByType.CYLINDRICAL;\n      // identity\n\n      case CoordinateType.SPHERICAL:\n        this.cooridnatesByType.CYLINDRICAL = Coordinate.sphericalToCylindrical({\n          coordinate: this.cooridnatesByType.SPHERICAL,\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType.CYLINDRICAL;\n\n      default:\n        throw new Error(\"cannot convert \" + this.type + \" to cylindrical\");\n    }\n  };\n\n  Coordinate.prototype.polar = function (options) {\n    options = options || {};\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        this.cooridnatesByType.POLAR = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.POLAR;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.POLAR = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_3D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.POLAR;\n\n      case CoordinateType.POLAR:\n        return this.cooridnatesByType.POLAR;\n\n      default:\n        throw new Error('cannot convert to/from original/requested types');\n    }\n  };\n  /**\n   * Converts current coordinate to spherical\n   * @param  {Object} options\n   * @return {Array}  coordinates in respective coordinate format\n   */\n\n\n  Coordinate.prototype.spherical = function (options) {\n    var temp;\n    options = options || {};\n\n    switch (this.type) {\n      case CoordinateType.CARTESIAN_2D:\n        temp = Coordinate.cartesian2dToPolar({\n          coordinate: this.cooridnatesByType.CARTESIAN_2D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        this.cooridnatesByType.SPHERICAL = [temp[0], temp[1], 0];\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.CARTESIAN_3D:\n        this.cooridnatesByType.SPHERICAL = Coordinate.cartesian3dToSpherical({\n          coordinate: this.cooridnatesByType.CARTESIAN_3D,\n          isDegree: this.isDegree,\n          center: options.center\n        });\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.POLAR:\n        temp = this.cooridnatesByType.POLAR;\n        return [temp[0], temp[1], 0];\n\n      case CoordinateType.CYLINDRICAL:\n        this.cooridnatesByType.SPHERICAL = Coordinate.cylindricalToSpherical({\n          coordinate: this.cooridnatesByType.CYLINDRICAL,\n          isDegree: this.isDegree\n        });\n        return this.cooridnatesByType.SPHERICAL;\n\n      case CoordinateType.SPHERICAL:\n        return this.cooridnatesByType.SPHERICAL;\n\n      default:\n        throw new Error('cannot convert to/from original/requested types');\n    }\n  };\n\n  return Coordinate;\n}();\n\nexports.Coordinate = Coordinate;","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimLeft', function ($trim) {\n  return function trimLeft() {\n    return $trim(this, 1);\n  };\n}, 'trimStart');\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n  }\n});\n","require(\"core-js/modules/es6.object.define-property\");\n\nmodule.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimRight', function ($trim) {\n  return function trimRight() {\n    return $trim(this, 2);\n  };\n}, 'trimEnd');\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport { Coordinate, CoordinateType } from \"coordinate-systems\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const HUE = p.random(0.9);\n  let radius;\n\n  p.setup = function() {\n    !RENDER && p.pixelDensity(1);\n    !RENDER && p.frameRate(30);\n    p.createCanvas(660, 840, p.WEBGL);\n    p.createLoop(60, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n    p.colorMode(p.HSB, 1);\n\n    radius = p.width / 5;\n  };\n\n  p.draw = function() {\n    const { theta } = p.animLoop;\n    p.background(HUE, 0.5, 0.5);\n    p.stroke(HUE, 0.8, 0.2);\n    p.strokeWeight(2);\n    p.noFill();\n\n    const cameraPosition = Coordinate.spherical([\n      p.width / 2,\n      p.animLoop.theta,\n      p.sin(p.animLoop.theta) * (p.PI / 3),\n    ]);\n    p.camera(...cameraPosition.cartesian(), 0, 0, 0, 0, 1, 0);\n\n    const segments = 60;\n    const startingPoint = Coordinate.spherical([radius, 0, 0]);\n    let th = 0;\n    p.beginShape();\n    p.curveVertex(...startingPoint.cartesian());\n    for (let phi = 0; phi <= p.PI; phi += p.PI / segments) {\n      const rThetaPhi = Coordinate.spherical([radius, th, phi]);\n      p.curveVertex(...rThetaPhi.cartesian());\n      th += p.map(p.cos(theta), -1, 1, 0, p.PI / 3);\n    }\n    p.endShape(p.CLOSE);\n\n    p.noStroke();\n    p.fill(HUE, 0.5, 0.8);\n    p.pointLight(0, 0, 1, 0, 0, -p.width * 3);\n    p.pointLight(0, 0, 0.5, 0, 0, p.width * 3);\n\n    p.specularMaterial(HUE, 0.5, 0.8);\n    p.sphere(p.width / 6, !RENDER ? 24 : 48, !RENDER ? 16 : 32);\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n"],"sourceRoot":""}
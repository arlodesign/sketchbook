{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/05.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","sketch","p","img","preload","loadImage","withPrefix","setup","createCanvas","draw","background","scale","map","mouseX","width","x","y","height","noiseVal","noise","blend","MULTIPLY","touchMoved","mouseY","_ref","location","a","createElement","path","pathname","description"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAIMQ,EAAS,SAASC,GACtB,IACIC,EAEJD,EAAEE,QAAU,WACVD,EAAMD,EAAEG,UAAUC,YAAW,uBAG/BJ,EAAEK,MAAQ,WACRL,EAAEM,aAAa,IAAK,MAGtBN,EAAEO,KAAO,WACPP,EAAEQ,WAAWP,GAEb,IADA,IAAMQ,EAAQT,EAAEU,IAAIV,EAAEW,OAAQ,EAAGX,EAAEY,MAAO,EAb3B,IAcNC,EAAI,EAAGA,EAAIb,EAAEY,MAAQ,EAAGC,GAdlB,GAeb,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAEe,OAAS,EAAGD,GAfrB,GAeoC,CAC/C,IAAME,EAAWhB,EAAEiB,MAAMJ,EAAGC,GAAKL,EACjCT,EAAEkB,MACAjB,EACAY,EACAC,EApBS,MAuBTD,EAAIG,EACJF,EAAIE,EAxBK,GAyBa,EAAXA,EAzBF,GA0Ba,EAAXA,EACXhB,EAAEmB,YAMVnB,EAAEoB,WAAa,WACb,GACEpB,EAAEW,QAAU,GACZX,EAAEqB,QAAU,GACZrB,EAAEW,QAAUX,EAAEY,OACdZ,EAAEqB,QAAUrB,EAAEe,OAEd,OAAO,IAKEtB,EAAA,iBAAA6B,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACb5B,EAAA6B,EAAAC,cAAC5B,EAAA,EAAD,CAAcE,OAAQA,EAAQ2B,KAAMH,EAASI,SAAUC,YAAY","file":"component---src-pages-sketch-2018-12-05-js-5f4bd7ed57fc7a193544.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport { withPrefix } from \"gatsby\";\n\nconst sketch = function(p) {\n  const tileSize = 60;\n  let img;\n\n  p.preload = function() {\n    img = p.loadImage(withPrefix(\"/assets/susan.png\"));\n  };\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n  };\n\n  p.draw = function() {\n    p.background(img);\n    const scale = p.map(p.mouseX, 0, p.width, 0, tileSize);\n    for (let x = 0; x < p.width + 0; x += tileSize) {\n      for (let y = 0; y < p.height + 0; y += tileSize) {\n        const noiseVal = p.noise(x, y) * scale;\n        p.blend(\n          img,\n          x,\n          y,\n          tileSize,\n          tileSize,\n          x - noiseVal,\n          y - noiseVal,\n          tileSize + noiseVal * 2,\n          tileSize + noiseVal * 2,\n          p.MULTIPLY\n        );\n      }\n    }\n  };\n\n  p.touchMoved = function() {\n    if (\n      p.mouseX >= 0 &&\n      p.mouseY >= 0 &&\n      p.mouseX <= p.width &&\n      p.mouseY <= p.height\n    ) {\n      return false;\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Move pointer or finger over sketch.\" />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/14.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/lib/addNoise.js"],"names":["sketch","p","w","h","GRID_SIZE","SIZES","grid","Doodad","x","y","size","this","random","arc","triangle","_proto","prototype","push","translate","rotate","HALF_PI","PI","pop","beginShape","vertex","endShape","CLOSE","setup","createCanvas","colorMode","HSB","hue","background","fill","noStroke","floor","width","height","xx","yy","visited","draw","_ref","_ref3","_p$random","concat","apply","filter","_ref2","overlap","Math","max","s","_ref4","length","addNoise","noLoop","__webpack_exports__","_ref5","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","aLen","arguments","index","undefined","end","endPos","intensity","PTS","console","log","i","ellipse","randomGaussian","pixelDensity"],"mappings":"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","file":"component---src-pages-sketch-2019-04-14-js-ca664bfb17e469b08524.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport addNoise from \"~lib/addNoise\";\n\nconst sketch = function(p) {\n  const GRID_SIZE = 60;\n  const SIZES = [1, 2, 3, 5, 8, 13, 21];\n\n  let grid = [];\n  let w;\n  let h;\n\n  class Doodad {\n    constructor(x, y, size) {\n      this.x = x * GRID_SIZE;\n      this.y = y * GRID_SIZE;\n      this.size = size * GRID_SIZE;\n\n      p.random() < 0.3 ? this.arc() : this.triangle();\n    }\n    arc() {\n      p.push();\n      p.translate(this.x + this.size / 2, this.y + this.size / 2);\n      p.rotate(p.random([0, p.HALF_PI, p.PI, p.HALF_PI + p.PI]));\n      p.arc(\n        -this.size / 2,\n        -this.size / 2,\n        this.size * 2,\n        this.size * 2,\n        0,\n        p.HALF_PI\n      );\n      p.pop();\n    }\n    triangle() {\n      p.push();\n      p.translate(this.x + this.size / 2, this.y + this.size / 2);\n      p.rotate(p.random([0, p.HALF_PI, p.PI, p.HALF_PI + p.PI]));\n      p.beginShape();\n      p.vertex(-this.size / 2, -this.size / 2);\n      p.vertex(this.size / 2, this.size / 2);\n      p.vertex(-this.size / 2, this.size / 2);\n      p.endShape(p.CLOSE);\n      p.pop();\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 100);\n\n    const hue = p.random(100);\n    p.background(hue, 25, 25);\n    p.fill(100 - hue, 50, 75);\n\n    p.noStroke();\n\n    w = p.floor(p.width / GRID_SIZE);\n    h = p.floor(p.height / GRID_SIZE);\n\n    for (let xx = 0; xx < w; xx++) {\n      grid.push([]);\n      for (let yy = 0; yy < h; yy++) {\n        grid[xx].push({\n          x: xx,\n          y: yy,\n          visited: false,\n        });\n      }\n    }\n  };\n\n  p.draw = function() {\n    const { x, y } = p.random(\n      [].concat(...grid).filter(({ visited }) => !visited)\n    );\n\n    if (!grid[x][y].visited) {\n      let size = Math.max(...SIZES);\n      let overlap;\n\n      do {\n        overlap = false;\n        for (let xx = x; xx < size + x; xx++) {\n          for (let yy = y; yy < size + y; yy++) {\n            if (x + size > w || y + size > h || grid[xx][yy].visited) {\n              overlap = true;\n            }\n          }\n        }\n        if (overlap) {\n          size = Math.max(...SIZES.filter(s => s < size));\n        }\n      } while (overlap);\n\n      new Doodad(x, y, size);\n\n      for (let xx = x; xx < size + x; xx++) {\n        for (let yy = y; yy < size + y; yy++) {\n          grid[xx][yy].visited = true;\n        }\n      }\n    }\n\n    if (![].concat(...grid).filter(({ visited }) => !visited).length) {\n      addNoise(p, 0.1);\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","const addNoise = (p, intensity = 0.5) => {\n  const PTS = p.width * p.height * 0.02;\n\n  console.log(PTS);\n\n  p.push();\n  for (let i = 0; i < PTS; i++) {\n    p.fill(\n      i % 2\n        ? `rgba(0, 0, 0, ${intensity})`\n        : `rgba(255, 255, 255, ${intensity})`\n    );\n    p.noStroke();\n    p.ellipse(\n      p.randomGaussian(p.width / 2, p.width / 3),\n      p.randomGaussian(p.height / 2, p.height / 3),\n      1 / (p.pixelDensity() / 2)\n    );\n  }\n  p.pop();\n};\n\nexport default addNoise;\n"],"sourceRoot":""}
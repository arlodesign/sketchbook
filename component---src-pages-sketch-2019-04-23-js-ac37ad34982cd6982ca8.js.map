{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/23.js","webpack:///./src/lib/polarToCartesian.js"],"names":["sketch","p","SCALAR","floor","random","a","setup","createCanvas","background","stroke","strokeWeight","draw","i","_polarToCartesianElli","polarToCartesianEllipse","width","height","TWO_PI","x","y","push","translate","lx","cos","ly","sin","l","noise","point","lerp","pop","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","_components_link__WEBPACK_IMPORTED_MODULE_4__","href","__webpack_require__","d","polarToCartesianX","polarToCartesianY","center","angle","distance","Math","centerX","centerY","radiusX","radiusY","asArray","polarToCartesian"],"mappings":"yJAOMA,EAAS,SAASC,GACtB,IAAMC,EAASD,EAAEE,MAAMF,EAAEG,OAAO,EAAG,IAG/BC,EAAI,EAERJ,EAAEK,MAAQ,WACRL,EAAEM,aAAa,IAAK,KACpBN,EAAEO,WAAW,GACbP,EAAEQ,OAAO,IAAK,MACdR,EAAES,aAAa,KAGjBT,EAAEU,KAAO,WACP,IAAK,IAAIC,EAAI,EAAGA,EAZJ,EAYeA,IAAK,KAAAC,EACfC,YACbb,EAAEc,MAAQ,EACVd,EAAEe,OAAS,EACXX,EAAIJ,EAAEgB,QAAUL,EAhBR,GAiBRX,EAAEc,MAAQ,EACVd,EAAEe,OAAS,GALPE,EADwBL,EACxBK,EAAGC,EADqBN,EACrBM,EAQTlB,EAAEmB,OACFnB,EAAEoB,UAAUH,EAAGC,GAKf,IAHA,IAAMG,EAAKJ,EAAKA,EAAIhB,EAAUD,EAAEsB,IAAIrB,GAAUA,EAAS,GAAKG,GACtDmB,EAAKL,EAAKD,EAAIhB,EAAUD,EAAEwB,IAAIvB,EAASG,GAEpCqB,EAAI,EAAGA,EAAI,EAAGA,GAAKzB,EAAE0B,MAAML,EAAIE,GAAM,IAAM,IAClDE,EAAI,GAAKzB,EAAEG,SAAWsB,GAAKzB,EAAE2B,MAAM3B,EAAE4B,KAAK,EAAGP,EAAII,GAAIzB,EAAE4B,KAAK,EAAGL,EAAIE,IAGrEzB,EAAE6B,OAGJzB,GAAKJ,EAAEgB,OAAS,KACZhB,EAAEgB,QAAUhB,EAAE8B,WAIPC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CACErC,OAAQA,EACRsC,KAAMJ,EAASK,SACfC,YACEL,OAAAC,EAAA,EAAAD,CAAAM,EAAApC,EAAAqC,SAAA,KACEP,OAAAC,EAAA,EAAAD,CAAA,gDACAA,OAAAC,EAAA,EAAAD,CAAA,oBACW,IACTA,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAMC,KAAK,4CAAX,cAEQ,IAJV,8FCvDRC,EAAAC,EAAAd,EAAA,sBAAAe,IAAAF,EAAAC,EAAAd,EAAA,sBAAAgB,IAAAH,EAAAC,EAAAd,EAAA,sBAAAlB,IAAA,IAAMiC,EAAoB,SAACE,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAK7B,IAAI2B,GAASC,GAE9BH,EAAoB,SAACC,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAK3B,IAAIyB,GAASC,GAa9BrC,EAA0B,SAC9BuC,EACAC,EACAJ,EACAK,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMvC,EAAImC,EAAUD,KAAK7B,IAAI2B,GAASK,EAChCpC,EAAImC,EAAUF,KAAK3B,IAAIyB,GAASM,EACtC,OAAOC,EAAU,CAACvC,EAAGC,GAAK,CAAED,IAAGC,MAIlBuC,IAzBU,SACvBL,EACAC,EACAJ,EACAC,EACAM,QACG,IADHA,OAAU,GAEV,IAAMvC,EAAI6B,EAAkBM,EAASH,EAAOC,GACtChC,EAAI6B,EAAkBM,EAASJ,EAAOC,GAC5C,OAAOM,EAAU,CAACvC,EAAGC,GAAK,CAAED,IAAGC","file":"component---src-pages-sketch-2019-04-23-js-ac37ad34982cd6982ca8.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian, {\n  polarToCartesianEllipse,\n} from \"~lib/polarToCartesian\";\nimport Link from \"~components/link\";\n\nconst sketch = function(p) {\n  const SCALAR = p.floor(p.random(3, 8));\n  const LINES = 6;\n\n  let a = 0;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.stroke(255, 255 / LINES);\n    p.strokeWeight(0.5);\n  };\n\n  p.draw = function() {\n    for (let i = 0; i < LINES; i++) {\n      let { x, y } = polarToCartesianEllipse(\n        p.width / 3,\n        p.height / 3,\n        a + p.TWO_PI * (i / LINES),\n        p.width / 5,\n        p.height / 5\n      );\n\n      p.push();\n      p.translate(x, y);\n\n      const lx = x + (x / SCALAR) * p.cos(SCALAR * (SCALAR / 2) * a);\n      const ly = y + (x / SCALAR) * p.sin(SCALAR * a);\n\n      for (let l = 0; l < 1; l += p.noise(lx, ly) / 10 || 0.01) {\n        l > 0 && p.random() > l && p.point(p.lerp(0, lx, l), p.lerp(0, ly, l));\n      }\n\n      p.pop();\n    }\n\n    a += p.TWO_PI / 10000;\n    a > p.TWO_PI && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description={\n      <>\n        <p>Be patient. This one takes a while.</p>\n        <p>\n          Props to{\" \"}\n          <Link href=\"https://www.instagram.com/p/Bwa3dHIBtBb/\">\n            iso.hedron\n          </Link>{\" \"}\n          for posting their code. I started there and tweaked.\n        </p>\n      </>\n    }\n  />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/29.js"],"names":["RENDER","process","DEV","sketch","p","GRID","boxes","Box","x","y","this","rotate","random","HALF_PI","prototype","draw","push","translate","i","strokeWeight","map","sin","animLoop","theta","line","pop","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","render","open","noiseRadius","width","height","background","forEach","b","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description"],"mappings":"+HAIMA,UAASC,GAAYC,MAAO,GAE5BC,EAAS,SAASC,GACtB,IAAMC,EAAO,GAETC,EAAQ,GAENC,EALmB,WAMvB,SAAAA,EAAYC,EAAGC,GACbC,KAAKF,EAAIA,EAAIH,EAAO,EACpBK,KAAKD,EAAIA,EAAIJ,EAAO,EACpBK,KAAKC,OAASP,EAAEQ,OAAO,CAAC,EAAGR,EAAES,UATR,OAAAN,EAAAO,UAYvBC,KAAA,WACEX,EAAEY,OACFZ,EAAEa,UAAUP,KAAKF,EAAGE,KAAKD,GACzBL,EAAEO,OAAOD,KAAKC,QAEd,IAAK,IAAIO,GAAKb,EAAO,EAAGa,EAAIb,EAAO,EAAGa,GAAKb,EAAO,EAChDD,EAAEe,aACAf,EAAEgB,IACAF,GACCb,EAAO,EACRA,EAAO,EACPD,EAAEgB,IAAIhB,EAAEiB,IAAIjB,EAAEkB,SAASC,QAAS,EAAG,EAAG,EAAG,GACzCnB,EAAEgB,IAAIhB,EAAEiB,IAAIjB,EAAEkB,SAASC,QAAS,EAAG,EAAG,EAAG,KAI7CnB,EAAEoB,KAAKN,EAAGb,EAAO,EAAGA,EAAO,EAAGa,GAC9Bd,EAAEoB,MAAMN,GAAIb,EAAO,GAAIA,EAAO,GAAIa,GAGpCd,EAAEqB,OAhCmBlB,EAAA,GAoCzBH,EAAEsB,MAAQ,WACJ1B,IACFI,EAAEuB,aAAa,GACfvB,EAAEwB,UAAU,KAGdxB,EAAEyB,aAAa,IAAK,KAEpBzB,EAAE0B,WAAW,EAAG,CACdC,MAAK/B,GAAS,CAAEgC,QAAQ,EAAOC,MAAM,GACrCC,YAAa,KAGf,IAAK,IAAI1B,EAAI,EAAGA,EAAIJ,EAAE+B,MAAO3B,GAAKH,EAChC,IAAK,IAAII,EAAI,EAAGA,EAAIL,EAAEgC,OAAQ3B,GAAKJ,EACjCC,EAAMU,KAAK,IAAIT,EAAIC,EAAGC,KAK5BL,EAAEW,KAAO,WACPX,EAAEiC,WAAW,KAEb/B,EAAMgC,QAAQ,SAAAC,GAAC,OAAIA,EAAExB,WAIVyB,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAc1C,OAAQA,EAAQ2C,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2019-07-29-js-df0f960afda55812d5a4.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const GRID = 60;\n\n  let boxes = [];\n\n  class Box {\n    constructor(x, y) {\n      this.x = x + GRID / 2;\n      this.y = y + GRID / 2;\n      this.rotate = p.random([0, p.HALF_PI]);\n    }\n\n    draw() {\n      p.push();\n      p.translate(this.x, this.y);\n      p.rotate(this.rotate);\n\n      for (let i = -GRID / 2; i < GRID / 2; i += GRID / 7) {\n        p.strokeWeight(\n          p.map(\n            i,\n            -GRID / 2,\n            GRID / 2,\n            p.map(p.sin(p.animLoop.theta), -1, 1, 5, 1),\n            p.map(p.sin(p.animLoop.theta), -1, 1, 1, 5)\n          )\n        );\n\n        p.line(i, GRID / 2, GRID / 2, i);\n        p.line(-i, -GRID / 2, -GRID / 2, -i);\n      }\n\n      p.pop();\n    }\n  }\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n\n    p.createLoop(5, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n\n    for (let x = 0; x < p.width; x += GRID) {\n      for (let y = 0; y < p.height; y += GRID) {\n        boxes.push(new Box(x, y));\n      }\n    }\n  };\n\n  p.draw = function() {\n    p.background(255);\n\n    boxes.forEach(b => b.draw());\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
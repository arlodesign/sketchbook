{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/06.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","sketch","p","particle","Particle","x","this","location","createVector","velocity","random","noiseValues","_proto","prototype","update","add","noise","apply","concat","frameCount","y","draw","point","setup","createCanvas","background","width","_ref","a","createElement","path","pathname","description"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,GAAAN,EAAA,KAAAA,EAAA,MAIMO,EAAS,SAASC,GAAG,IAoBrBC,EAnBEC,EADmB,WAEvB,SAAAA,EAAYC,GACVC,KAAKC,SAAWL,EAAEM,aAAaH,EAAG,GAClCC,KAAKG,SAAWP,EAAEM,aAAaN,EAAEQ,QAAQ,EAAG,GAAIR,EAAEQ,QAAQ,EAAG,IAC7DJ,KAAKK,YAAc,CAACT,EAAEQ,SAAUR,EAAEQ,UALb,IAAAE,EAAAR,EAAAS,UAAA,OAAAD,EAOvBE,OAAA,WACER,KAAKC,SAASQ,IACZb,EAAEM,aACAF,KAAKG,SAASJ,EAAIH,EAAEc,MAAFC,MAAAf,EAAWI,KAAKK,YAAfO,OAAA,CAA4BhB,EAAEiB,WAAa,OAC9Db,KAAKG,SAASW,EAAIlB,EAAEc,MAAFC,MAAAf,EAAWI,KAAKK,YAAfO,OAAA,CAA4BhB,EAAEiB,WAAa,UAX7CP,EAevBS,KAAA,WACEnB,EAAEoB,MAAMhB,KAAKC,SAASF,EAAGC,KAAKC,SAASa,IAhBlBhB,EAAA,GAsBzBF,EAAEqB,MAAQ,WACRrB,EAAEsB,aAAa,IAAK,KACpBtB,EAAEuB,WAAW,KACbtB,EAAW,IAAIC,EAASF,EAAEwB,MAAQ,IAGpCxB,EAAEmB,KAAO,WACPlB,EAASW,SACTX,EAASkB,SAIEzB,EAAA,iBAAA+B,GAAA,IAAGpB,EAAHoB,EAAGpB,SAAH,OACbT,EAAA8B,EAAAC,cAAC7B,EAAA,EAAD,CAAcC,OAAQA,EAAQ6B,KAAMvB,EAASwB,SAAUC,YAAY","file":"component---src-pages-sketch-2019-04-06-js-0a77d5cb0afaad95640c.js","sourcesContent":["import React from \"react\";\nimport p5 from \"p5\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  class Particle {\n    constructor(x) {\n      this.location = p.createVector(x, 0);\n      this.velocity = p.createVector(p.random(-5, 5), p.random(-5, 5));\n      this.noiseValues = [p.random(), p.random()];\n    }\n    update() {\n      this.location.add(\n        p.createVector(\n          this.velocity.x * p.noise(...this.noiseValues, p.frameCount / 100),\n          this.velocity.y * p.noise(...this.noiseValues, p.frameCount / 100)\n        )\n      );\n    }\n    draw() {\n      p.point(this.location.x, this.location.y);\n    }\n  }\n\n  let particle;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(255);\n    particle = new Particle(p.width / 2);\n  };\n\n  p.draw = function() {\n    particle.update();\n    particle.draw();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
const CF=[r=>240*abs(sin(r)),r=>240*abs(cos(r)),r=>240*abs(tan(r)),r=>240*abs(sin(r+PI)),r=>240*abs(cos(r+PI)),r=>240*abs(tan(r+PI)),r=>240*abs(sin(-r)),r=>240*abs(cos(-r)),r=>240*abs(tan(-r)),r=>240*abs(sin(-r+PI)),r=>240*abs(cos(-r+PI)),r=>240*abs(tan(-r+PI))];let r1Speed,r2Speed,r3Speed,r,g,b,r1=0,r2=0,r3=0,getColor=()=>{};function setup(){for(pixelDensity(4),createCanvas(660,840).parent("my-canvas"),background(0),r1Speed=random(.05,.1)/TWO_PI*random([-1,1]),r2Speed=random(.15,.25)/TWO_PI*random([-1,1]),r3Speed=random(.01,.015)/TWO_PI;[...new Set([r,g,b])].length<3;)r=random(CF),g=random(CF),b=random(CF);getColor=(e=>color(r(e),g(e),b(e),8)),noStroke(),blendMode(HARD_LIGHT)}function draw(){translate(width/2,height*sin(r3));const{x:r,y:e}=polarToCartesian(0,0,r1,200),a=polarToCartesian(r,e,r2,500*sin(r3));if(height*sin(r3)<0&&e<0&&a.y<0)return noLoop(),void(drawingComplete=!0);fill(getColor(2*r3)),beginShape(),vertex(0,0),quadraticVertex(a.x,a.y,r,e),endShape(CLOSE),r1+=r1Speed,r2+=r2Speed,r3+=r3Speed}
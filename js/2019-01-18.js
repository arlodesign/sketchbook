let drawing,lastPoint,circleCount=3,circles=[],viewGuides=!1,speeds=[...Array(10).keys()].map(e=>(e+1)/10);function guideColor(e){return color(255,0,0,e)}function lineIntersection(e,i,s,c,r,l,t,n){const o=((t-r)*(i-l)-(n-l)*(e-r))/((n-l)*(s-e)-(t-r)*(c-i)),d=((s-e)*(i-l)-(c-i)*(e-r))/((n-l)*(s-e)-(t-r)*(c-i));return o>=0&&o<=1&&d>=0&&d<=1?{x:floor(e+o*(s-e)),y:floor(i+o*(c-i))}:{x:null,y:null}}function setup(){createCanvas(660,840).parent("my-canvas"),drawing=createGraphics(width,height);for(let e=0;e<circleCount;e++){const i=random(speeds),s=width/6*random(.1,1);speeds=speeds.filter(e=>e!==i),circles.push({r:HALF_PI*e,speed:i/TWO_PI,size:s,direction:random([1,-1])})}noFill()}function draw(){background(255),frameRate(viewGuides?15:30),image(drawing,0,0);const e=width/2+cos(circles[0].r)*(width/2-2*circles[1].size),i=circles[0].size/2,s=e+cos(circles[0].r)*(circles[0].size/2),c=i+sin(circles[0].r)*(circles[0].size/2),r=width-circles[1].size/2,l=height/2+cos(circles[1].r)*(height/2-(circles[0].size+circles[2].size)),t=r+cos(circles[1].r)*(circles[1].size/2),n=l+sin(circles[1].r)*(circles[1].size/2),o=width/2+cos(circles[2].r)*(width/2-2*circles[1].size),d=height-circles[2].size/2,a=o+cos(circles[2].r)*(circles[2].size/2),u=d+sin(circles[2].r)*(circles[2].size/2),h=circles[1].size/2,z=height/2+cos(circles[1].r)*(height/2-(circles[0].size+circles[2].size)),w=h+cos(circles[1].r+HALF_PI)*(circles[1].size/2),g=z+sin(circles[1].r+HALF_PI)*(circles[1].size/2);viewGuides&&(stroke(guideColor(128)),strokeWeight(1),ellipse(e,i,circles[0].size),ellipse(r,l,circles[1].size),ellipse(o,d,circles[2].size),ellipse(h,z,circles[1].size),line(s,c,a,u),line(t,n,w,g));for(let e=0;e<circles.length;e++)circles[e].r+=circles[e].speed*circles[e].direction;const{x:p,y:f}=lineIntersection(s,c,a,u,t,n,w,g);if(p&&f&&frameCount>1)for(let e=0;e<1;e+=.01)drawing.line(p,f,lastPoint.x,lastPoint.y);lastPoint=p&&f?{x:p,y:f}:lastPoint}function mousePressed(){viewGuides=!viewGuides}setTimeout(()=>{drawingComplete=!0},6e4);
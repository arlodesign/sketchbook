let circleSize,gridGap,focusX,focuxY,circles=[],distance=0,direction=1,userControl=!1;class Circle{constructor(i,e){this.x=i,this.y=e}draw(){noFill();for(let i=0;i<gridGap;i++)stroke(`rgba(0, 0, 0, ${i/gridGap})`),ellipse(lerp(this.x,focusX,i/gridGap/2),lerp(this.y,focusY,i/gridGap/2),circleSize-i*gridGap+map(dist(this.x,this.y,focusX,focusY),0,dist(0,0,width,height),2*circleSize,-circleSize,!0))}}function setup(){pixelDensity(4),createCanvas(660,840).parent("my-canvas"),circleSize=random(100,250),gridGap=circleSize/10,focusX=width/2,focusY=height/2;const i=floor((width-gridGap)/(circleSize+gridGap)),e=floor((height-gridGap)/(circleSize+gridGap)),c=(width-i*circleSize)/(i+1),r=(height-e*circleSize)/(e+1);for(let i=-c-circleSize/2;i<=width+circleSize;i+=circleSize+c)for(let e=-r-circleSize/2;e<=height+circleSize;e+=circleSize+r)circles.push(new Circle(i,e))}function draw(){background(255),focusX=userControl?mouseX:width/2+cos(frameCount/(2*gridGap))*distance,focusY=userControl?mouseY:height/2+sin(frameCount/(2*gridGap))*distance,circles.forEach(i=>i.draw()),(distance+=direction)===width/2&&(direction=-1),distance<circleSize&&(direction=1),drawingComplete=!0}function mouseClicked(){userControl=!userControl}function touchMoved(){if(mouseX>=0&&mouseY>=0&&mouseX<=width&&mouseY<=height)return!1}
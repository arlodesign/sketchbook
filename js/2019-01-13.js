let maxDist,gridSize,vectors=[],showDots=!0;function setup(){pixelDensity(1),createCanvas(660,840).parent("my-canvas"),gridSize=floor(random(25,50));for(let e=0;e<=gridSize;e++)for(let t=0;t<=gridSize;t++){const r=floor(width/gridSize*e),o=floor(height/gridSize*t);dist(r,o,width/2,height/2)<width/2-100&&random()<.5&&vectors.push({vector:createVector(r,o),reached:!1,reachedBy:0})}vectors[0].reached=!0,vectors[0].reachedBy=-1,maxDist=dist(0,0,width,height),background(0),strokeWeight(2),fill(0)}function draw(){fill(255),ellipse(width/2,height/2,width/2+100+width/gridSize*8),push(),stroke(showDots?"red":255),vectors.filter(e=>!e.reached).forEach(({vector:e})=>point(e.x,e.y)),pop();let e,t,r=maxDist;drawingComplete||(vectors.forEach((o,i)=>{o.reached||vectors.forEach((c,h)=>{if(c.reached){const s=dist(o.vector.x,o.vector.y,c.vector.x,c.vector.y);s<r&&(r=s,t=i,e=h)}})}),vectors[t].reached=!0,vectors[t].reachedBy=e),vectors.forEach(({vector:e,reached:t,reachedBy:r},o)=>{if(t&&r>-1){const{x:t,y:i}=vectors[r].vector;stroke(0),strokeWeight(2),noFill(),line(e.x,e.y,t,i),fill(0),strokeWeight(1),triangle(e.x,e.y,t,i,t,e.y),e.x!==t&&e.y!==i||o%4!=0||ellipse(t,i,dist(t,i,e.x,e.y))}}),vectors.filter(e=>e.reached).length===vectors.length&&(noLoop(),drawingComplete=!0)}
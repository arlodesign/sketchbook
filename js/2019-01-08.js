const goldenRatio=1.6180339887;let magicNumber,margin,maxDist,vertexCount=1,vertices=[],showDots=!0;function setup(){for(pixelDensity(4),createCanvas(660,840).parent("my-canvas"),background(255),magicNumber=floor(random(5,8));!isPrime(vertexCount);)vertexCount=floor(random(20*magicNumber,25*magicNumber));const e=width/2/magicNumber;maxDist=width/2-(margin=e/magicNumber);for(let r=0;r<magicNumber;r++)vertices=vertices.concat(Array.from(Array(vertexCount*(r+1)),(t,o)=>{const c=map(o*magicNumber,0,vertexCount,0,TWO_PI),i=constrain(randomGaussian((r*e+(r+1)*e)/2,e/magicNumber+noise(c)*magicNumber),0,maxDist);return{vector:createVector(width/2+cos(c)*i,height/2+sin(c)*i),reached:!1}}));vertices[floor(random(vertexCount))].reached=!0}function draw(){push(),stroke(showDots?"red":255),strokeWeight(1),vertices.filter(e=>!e.reached).forEach(({vector:e})=>point(e.x,e.y)),pop();const e=vertices.filter(e=>e.reached);let r,t,o=maxDist;strokeWeight(2),vertices.forEach((c,i)=>{c.reached||e.forEach(({vector:e})=>{const a=dist(e.x,e.y,c.vector.x,c.vector.y);a<o&&(o=a,t=i,r=e)})}),line(r.x,r.y,vertices[t].vector.x,vertices[t].vector.y),vertices[t].reached=!0,vertices.filter(e=>e.reached).length===vertices.length&&(noLoop(),drawingComplete=!0)}function mousePressed(){showDots=!showDots}
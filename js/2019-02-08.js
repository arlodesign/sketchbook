let axis,SHAPES_COUNT=3,POINTS_PER_SHAPE=4,shapes=[];function preload(){img=loadImage("/assets/susan.png")}class Shape{constructor(){const t=[t=>240*abs(sin(t)),t=>240*abs(cos(t)),t=>240*abs(tan(t)),t=>240*abs(sin(t+PI)),t=>240*abs(cos(t+PI)),t=>240*abs(tan(t+PI)),t=>240*abs(sin(-t)),t=>240*abs(cos(-t)),t=>240*abs(tan(-t)),t=>240*abs(sin(-t+PI)),t=>240*abs(cos(-t+PI)),t=>240*abs(tan(-t+PI))];for(this.cf=[];[...new Set(this._cf)].length<3;)this._cf=[random(t),random(t),random(t)];this.points=[...Array(POINTS_PER_SHAPE).keys()].map(t=>new Point)}_clr(){return color(this._cf[0](frameCount),this._cf[1](frameCount),this._cf[2](frameCount))}draw(){blendMode(frameCount%3?DIFFERENCE:ADD),noStroke(),fill(this._clr()),beginShape(),vertex(this.points[0].location.x,this.points[0].location.y),this.points.forEach(({location:t},s)=>{0!==s&&(vertex(t.x,t.y),this.points[s].move())}),vertex(this.points[0].location.x,this.points[0].location.y),endShape(CLOSE)}}class Point{constructor(){this._angle=random(TWO_PI),this._dist=random(200,350),this._speed=random([-.05,.05]),this.location=this._getLocation()}_getLocation(){return polarToCartesian(axis.x,axis.y,this._angle,this._dist)}move(){this._angle+=this._speed,this.location=this._getLocation()}}function setup(){pixelDensity(4),createCanvas(660,840).parent("my-canvas"),background(255),axis=createVector(width/2,350),shapes=[...Array(SHAPES_COUNT).keys()].map(t=>new Shape),setTimeout(()=>{noLoop(),drawingComplete=!0},2e4)}function draw(){shapes.forEach((t,s)=>t.draw()),blendMode(DARKEST),image(img,0,0,width,height)}
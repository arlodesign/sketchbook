let points=[];function getVectors(){return{position:createVector(randomGaussian(width/2,width/15),randomGaussian(height/2,height/15)),velocity:createVector(random(-.1,.1),random(-.1,.1)),acceleration:createVector(random(-.1,.1),random(-.1,.1))}}function setup(){pixelDensity(4),createCanvas(660,840).parent("my-canvas"),points=[...Array(50).keys()].map(t=>getVectors()),background(0)}function draw(){points.forEach(({position:t,velocity:o,acceleration:i},e)=>{points[e].position=t.add(o.add(i)),(t.x<0||t.x>width||t.y<0||t.y>height)&&(points[e]=getVectors())});let t=points.map(t=>({position:t.position,reached:!1}));for(t[0].reached=!0;t.filter(t=>t.reached).length<t.length;){let o,i,e=2*dist(0,0,width,height);t.forEach((n,a)=>{n.reached&&t.forEach((t,r)=>{if(t.reached)return;const s=dist(n.position.x,n.position.y,t.position.x,t.position.y);s<e&&(e=s,o=a,i=r)})}),stroke(255*cos(frameCount/100),map(dist(width/2,height/2,t[i].position.x,t[i].position.y),0,dist(0,0,width/2,height/2),64,0)),line(t[o].position.x,t[o].position.y,t[i].position.x,t[i].position.y),t[i].reached=!0}addNoise(.02),frameCount>800&&(drawingComplete=!0,noLoop())}
let shapes=[];class Shape{constructor(){const t=[t=>max(15,240*abs(sin(t))),t=>max(15,240*abs(sin(t+PI))),t=>max(15,240*abs(cos(-t))),t=>max(15,240*abs(cos(-t+PI)))];this._cf=[random(t),random(t),random(t)],this.points=[...Array(10).keys()].map(t=>new Point)}clr(){return color(this._cf[0](frameCount/1e3),this._cf[1](frameCount/1e3),this._cf[2](frameCount/1e3),128)}draw(){beginShape(),this.points.forEach(({location:t},o)=>{vertex(t.x,t.y),this.points[o].move()}),endShape(CLOSE)}}class Point{constructor(){this.location=createVector(random(width),random(height)),this._velocity=createVector(random(-1,1),random(-1,1))}move(){this.location.add(this._velocity),(this.location.x>width||this.location.x<0)&&(this._velocity.x=-1*this._velocity.x),(this.location.y>height||this.location.y<0)&&(this._velocity.y=-1*this._velocity.y)}}function setup(){pixelDensity(4),createCanvas(660,840).parent("my-canvas"),shapes=[...Array(3).keys()].map(t=>new Shape)}function draw(){background(0),shapes.forEach((t,o)=>{1!==o?(noStroke(),fill(t.clr())):(noFill(),strokeWeight(4),stroke(t.clr())),t.draw()})}setTimeout(()=>{drawingComplete=!0},5e3);
const GRID=30;let points=[];function drawAThing(o,t){const e=getNearestPointColor(o,t);fill(e),ellipse(o+2*map(noise(o,t),0,1,-1,1),t+2*map(noise(t,o),0,1,-1,1),2,2)}function getNearestPointColor(o,t){return points.sort((e,n)=>dist(o,t,e.vector.x,e.vector.y)-dist(o,t,n.vector.x,n.vector.y)),points[0].color}function setup(){pixelDensity(4),createCanvas(660,840).parent("my-canvas"),background(255),points=[...Array(256).keys()].map(o=>({vector:polarToCartesian(width/2,height/2,o,width*(o/256)),color:o})),noStroke()}function draw(){const o=floor(frameCount/(width/GRID)),t=floor(frameCount-width/GRID*o);if(o<height/GRID)for(let e=0;e<GRID;e++)for(let n=0;n<GRID;n++)drawAThing(t+width/GRID*e,o+height/GRID*n);else noLoop(),drawingComplete=!0}
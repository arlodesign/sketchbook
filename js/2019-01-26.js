const GRID=30;let points=[];function drawPixel(t,e){const o=4*getNearestPoint(t,e);fill(o,o,o,127.5),rect(t,e,2,2),fill(o),rect(t,e,1,1)}function getNearestPoint(t,e){return points.sort((o,r)=>dist(t,e,o.vector.x,o.vector.y)-dist(t,e,r.vector.x,r.vector.y)),points[0].color}function setup(){pixelDensity(4),createCanvas(660,840).parent("my-canvas"),background(255),points=[...Array(64).keys()].map(()=>({vector:createVector(randomGaussian(width/2,width/GRID*3),randomGaussian(height/2,height/GRID*3))})).sort((t,e)=>dist(width/2,height/2,t.vector.x,t.vector.y)-dist(width/2,height/2,e.vector.x,e.vector.y)).map((t,e)=>Object.assign(t,{color:e})),noStroke(),rectMode(CENTER)}function draw(){const t=floor(frameCount/(width/GRID)),e=floor(frameCount-width/GRID*t);if(t<height/GRID)for(let o=0;o<GRID;o++)for(let r=0;r<GRID;r++)drawPixel(e+width/GRID*o,t+height/GRID*r);else addNoise(.2),noLoop(),drawingComplete=!0}
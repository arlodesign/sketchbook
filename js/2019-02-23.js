const SPEED=.4,ALPHA=10;let axis,distance,hueA,hueB;function setup(){pixelDensity(4),createCanvas(660,840).parent("my-canvas"),noFill(),background(240),colorMode(HSB,100),blendMode(HARD_LIGHT),distance=3*dist(0,0,width,height),hueA=random(0,49),hueB=random(50,100),axis=[-width/3,-height/3]}function drawShapes(e){beginShape();for(let a=0;a<TWO_PI;a+=SPEED/3){const{x:n,y:t}=polarToCartesian(...axis,a*noise(distance/1e3,e(a+frameCount/1e3)),distance*noise(a/1e3,e(a+frameCount/500)));vertex(n,t)}endShape()}function draw(){alternate(()=>{stroke(hueA,map(tan(frameCount/300),-1,1,66,33),66,alpha),drawShapes(cos)},()=>{stroke(hueB,map(tan(frameCount/300),-1,1,33,66),66,alpha),drawShapes(sin)}),(distance-=SPEED)<dist(0,0,...axis)&&noLoop()}
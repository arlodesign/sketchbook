{"version":3,"sources":["webpack:///./src/pages/sketch/2019/03/28.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js"],"names":["sketch","p","HUE","random","HUES","angle","ad","Circle","x","y","z","size","this","hue","prototype","draw","stroke","a","TWO_PI","point","apply","polarToCartesian","randomGaussian","setup","createCanvas","colorMode","HSB","background","blendMode","HARD_LIGHT","noFill","_babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0___default","width","height","map","tan","concat","floor","noLoop","__webpack_exports__","_ref","location","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description","__webpack_require__","d","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","distance","Math","cos","sin","centerX","centerY","radiusX","radiusY","asArray","setPrototypeOf","_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","toString","call","e","isNativeReflectConstruct","module","exports","push","instance","Function","bind","arguments","_setPrototypeOf","o","Object","__proto__"],"mappings":"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","file":"component---src-pages-sketch-2019-03-28-js-64ff35d9adf6da1ee052.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const DEPTH = 5;\n  const HUE = p.random(0, 33);\n  const HUES = [HUE, HUE + 33, HUE + 66];\n\n  let angle = 0;\n  let ad = p.random(DEPTH);\n\n  class Circle {\n    constructor(x, y, z, size) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.size = size;\n      this.hue = p.random(HUES);\n    }\n\n    draw() {\n      p.stroke(this.hue, 50, 100, 5);\n\n      for (let a = 0; a < p.TWO_PI; a += 0.001 / p.TWO_PI) {\n        p.point(\n          ...polarToCartesian(\n            p.randomGaussian(this.x, this.z),\n            p.randomGaussian(this.y, this.z),\n            a,\n            p.randomGaussian(this.size, this.size / 2),\n            true\n          )\n        );\n      }\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 100);\n    p.background(p.random(HUES), 100, 25);\n    p.blendMode(p.HARD_LIGHT);\n    p.noFill();\n  };\n\n  p.draw = function() {\n    const c = new Circle(\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        angle,\n        p.map(p.tan(angle / ad), -1, 1, p.width / 5, 0),\n        true\n      ),\n      p.floor(p.random([1, DEPTH, p.random(DEPTH)])),\n      p.randomGaussian(DEPTH, p.width / (DEPTH * 10))\n    );\n    c.draw();\n    angle += 1 / p.TWO_PI;\n    angle > p.TWO_PI * 2 && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Refresh page for a different color variation.\"\n  />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/08.js"],"names":["sketch","p","HUE","random","COLORS","Array","from","length","_","i","setup","createCanvas","createLoop","gif","noiseRadius","colorMode","HSB","draw","blendMode","BLEND","background","HARD_LIGHT","_loop","forEach","c","push","translate","stroke","strokeWeight","map","cos","animLoop","theta","GRID","x","noise2D","line","height","pop","width","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_4__","path","pathname","description"],"mappings":"4IAMMA,UAAS,SAASC,GACtB,IAGMC,EAAMD,EAAEE,OAAO,EADT,GAENC,EAASC,MAAMC,KAAK,CAAEC,OAFhB,GAE+B,SAACC,EAAGC,GAAJ,OAAUP,EAAO,EAFhD,EAE2DO,IAEvER,EAAES,MAAQ,WAKRT,EAAEU,aAAa,IAAK,KACpBV,EAAEW,WAAW,GAAI,CACfC,KAA8C,EAC9CC,YAAa,IAEfb,EAAEc,UAAUd,EAAEe,IAAK,IAGrBf,EAAEgB,KAAO,WACPhB,EAAEiB,UAAUjB,EAAEkB,OACdlB,EAAEmB,WAAW,GACbnB,EAAEiB,UAAUjB,EAAEoB,YAEd,IALkB,IAAAC,EAAA,SAKTb,GACPL,EAAOmB,QAAQ,SAAAC,GACbvB,EAAEwB,OACFxB,EAAEyB,UAAUjB,EAAG,GACfR,EAAE0B,OAAOH,EAAG,GAAK,GACjBvB,EAAE2B,aAAa3B,EAAE4B,IAAI5B,EAAE6B,IAAI7B,EAAE8B,SAASC,QAAS,EAAG,EAAG,EAAGC,KAExD,IAAMC,EAAIjC,EAAE4B,IACV5B,EAAE6B,IAAI7B,EAAE8B,SAASC,QAChB,EACD,EACA,EAnCK,GAoCL/B,EAAE8B,SAASI,QAAQ1B,EAAGe,GAAY,GAEpCvB,EAAEmC,KAAKF,EAAG,EAAGA,EAAGjC,EAAEoC,QAClBpC,EAAEqC,SAfG7B,EAAI,EAAGA,GAAKR,EAAEsC,MAAO9B,GAxBnB,GAwB8Ba,EAAhCb,MAqBE+B,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAc7C,OAAQA,EAAQ8C,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2019-07-08-js-4c08a1a78c40f93358c0.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst RENDER = false;\n\nconst sketch = function(p) {\n  const GRID = 30;\n  const FRAMES = 600;\n  const QTY = 3;\n  const HUE = p.random(1 / QTY);\n  const COLORS = Array.from({ length: QTY }, (_, i) => HUE + (1 / QTY) * i);\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n    p.createCanvas(660, 840);\n    p.createLoop(10, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 1,\n    });\n    p.colorMode(p.HSB, 1);\n  };\n\n  p.draw = function() {\n    p.blendMode(p.BLEND);\n    p.background(0);\n    p.blendMode(p.HARD_LIGHT);\n\n    for (let i = 0; i <= p.width; i += GRID) {\n      COLORS.forEach(c => {\n        p.push();\n        p.translate(i, 0);\n        p.stroke(c, 0.5, 1);\n        p.strokeWeight(p.map(p.cos(p.animLoop.theta), -1, 1, 1, GRID / 2));\n\n        const x = p.map(\n          p.cos(p.animLoop.theta),\n          -1,\n          1,\n          0,\n          p.animLoop.noise2D(i, c) * GRID * 3\n        );\n        p.line(x, 0, x, p.height);\n        p.pop();\n      });\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
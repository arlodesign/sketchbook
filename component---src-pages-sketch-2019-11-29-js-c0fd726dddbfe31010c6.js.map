{"version":3,"sources":["webpack:///./src/lib/lerpLine.js","webpack:///./src/pages/sketch/2019/11/29.js"],"names":["p","x1","y1","x2","y2","rate","showFirstDot","noisy","thisRate","Math","max","dist","l","random","point","lerp","sketch","size","RENDER","getURLParams","render","drawTheThing","c","n","animLoop","noise2D","theta","stroke","x","width","startPoint","map","length","height","lerpLine","sin","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","open","noiseRadius","draw","blendMode","BLEND","background","MULTIPLY","location","path","pathname","description","href","withPrefix"],"mappings":"+FAYe,aACbA,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QACA,IAFAD,OAAe,QAEf,IADAC,OAAQ,GAIR,IAFA,IAAMC,EAAWC,KAAKC,IAAIL,EAAM,IAAOL,EAAEW,KAAKV,EAAIC,EAAIC,EAAIC,IAEjDQ,EAAI,EAAGA,EAAI,EAAGA,GAAKJ,GAChB,IAANI,GAAYN,KACXC,GAASP,EAAEa,SAAWD,IAAOL,IAChCP,EAAEc,MAAMd,EAAEe,KAAKd,EAAIE,EAAIS,GAAIZ,EAAEe,KAAKb,EAAIE,EAAIQ,M,kCC3BhD,wGAOMI,EAAS,SAAShB,GACtB,IACIiB,EADEC,EAASlB,EAAEmB,eAAeC,OAgBhC,SAASC,EAAaC,EAAGC,GAAI,IAAD,EACCvB,EAAEwB,SAArBC,EADkB,EAClBA,QAASC,EADS,EACTA,MAEjB1B,EAAE2B,OAAOL,GACT,IAAK,IAAIM,EAAI5B,EAAE6B,MAAQ,EAAIZ,EAAMW,EAAI5B,EAAE6B,MAAQ,EAAIZ,EAAMW,IAAK,CAC5D,IAAME,EAAa9B,EAAE+B,IACnBN,EAAQH,EAAEU,OAAS,IAAKJ,EAAI,MAC3B,EACD,EACA5B,EAAEiC,OAAS,EAAI,EACfjC,EAAEiC,OAAS,EAAI,GAGjBC,YACElC,EACA4B,EACAE,EACAF,EACA5B,EAAEiC,OAAS,EAAIhB,EACfjB,EAAE+B,IAAIN,EAAQF,GAAIK,EAAI5B,EAAEmC,IAAIT,IAAU,MAAO,EAAG,EAAG,IAAM,MACzD,GACA,GAEFQ,YACElC,EACA4B,EACAE,EACAF,EACA5B,EAAEiC,OAAS,EAAIhB,EACfjB,EAAE+B,IAAIN,EAAQF,GAAIK,EAAI5B,EAAEmC,IAAIT,IAAU,MAAO,EAAG,EAAG,IAAM,MACzD,GACA,IA5CN1B,EAAEoC,MAAQ,WACRpC,EAAEqC,aAAa,GACfrC,EAAEsC,UAAU,IAEZtC,EAAEuC,aAAa,IAAS,KACxBvC,EAAEwC,WAAW,GAAI,CACfC,MAAKvB,GAAS,CAAEE,QAAQ,EAAOsB,MAAM,GACrCC,YAAa,IAGf1B,GAAQjB,EAAE6B,MAAkB,IAAV7B,EAAE6B,OAAgB,GAuCtC7B,EAAE4C,KAAO,WACP5C,EAAE6C,UAAU7C,EAAE8C,OACd9C,EAAE+C,WAAW,KACb/C,EAAE6C,UAAU7C,EAAEgD,UAEd3B,EAAa,OAAQ,GACrBA,EAAa,UAAW,IACxBA,EAAa,SAAU,MAIZ,0BAAG4B,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACEjC,OAAQA,EACRkC,KAAMD,EAASE,SACfC,YACE,kEACoC,IAClC,YAAC,IAAD,CAAMC,KAAMC,qBAAW,2BAAvB","file":"component---src-pages-sketch-2019-11-29-js-c0fd726dddbfe31010c6.js","sourcesContent":["/**\n * Creates a line of points at a specified interval (the rate)\n *\n * @param {obj} p The current p5.js drawing context\n * @param {*} x1\n * @param {*} y1\n * @param {*} x2\n * @param {*} y2\n * @param {*} rate Number between 0 and 1 to determine how often to draw a point\n * @param {*} showFirstDot Defaults to true\n * @param {*} noisy Defaults to true\n */\nexport default function(\n  p,\n  x1,\n  y1,\n  x2,\n  y2,\n  rate,\n  showFirstDot = true,\n  noisy = true\n) {\n  const thisRate = Math.max(rate, 0.01 / p.dist(x1, y1, x2, y2));\n\n  for (let l = 0; l < 1; l += thisRate) {\n    if (l === 0 && !showFirstDot) continue;\n    if ((noisy && p.random() > l) || !noisy) {\n      p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n    }\n  }\n}\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport lerpLine from \"~lib/lerpLine\";\nimport Link from \"~components/link\";\nimport { withPrefix } from \"gatsby\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  let size;\n\n  p.setup = function() {\n    p.pixelDensity(1);\n    p.frameRate(30);\n\n    p.createCanvas(660 / 2, 840 / 2);\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 1,\n    });\n\n    size = (p.width - p.width * 0.15) / 2;\n  };\n\n  function drawTheThing(c, n) {\n    const { noise2D, theta } = p.animLoop;\n\n    p.stroke(c);\n    for (let x = p.width / 2 - size; x < p.width / 2 + size; x++) {\n      const startPoint = p.map(\n        noise2D(c.length / 100, x / 100),\n        -1,\n        1,\n        p.height / 2 - 5,\n        p.height / 2 + 5\n      );\n\n      lerpLine(\n        p,\n        x,\n        startPoint,\n        x,\n        p.height / 2 + size,\n        p.map(noise2D(n, (x + p.sin(theta)) / 100), -1, 1, 0.04, 0.06),\n        false,\n        false\n      );\n      lerpLine(\n        p,\n        x,\n        startPoint,\n        x,\n        p.height / 2 - size,\n        p.map(noise2D(n, (x + p.sin(theta)) / 100), -1, 1, 0.04, 0.06),\n        true,\n        false\n      );\n    }\n  }\n\n  p.draw = function() {\n    p.blendMode(p.BLEND);\n    p.background(255);\n    p.blendMode(p.MULTIPLY);\n\n    drawTheThing(\"cyan\", 5);\n    drawTheThing(\"magenta\", 10);\n    drawTheThing(\"yellow\", 15);\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description={\n      <>\n        Runs slow in browser, but makes a{\" \"}\n        <Link href={withPrefix(\"/assets/2019-11-29.gif\")}>great GIF!</Link>\n      </>\n    }\n  />\n);\n"],"sourceRoot":""}
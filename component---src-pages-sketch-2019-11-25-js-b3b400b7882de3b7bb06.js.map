{"version":3,"sources":["webpack:///./src/lib/isPrime.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/easing.js","webpack:///./src/lib/lineIntersection.js","webpack:///./src/pages/sketch/2019/11/25.js"],"names":["isPrime","n","x","polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","y","polarToCartesian","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","lineIntersection","x1","y1","x2","y2","x3","y3","x4","y4","uA","uB","sketch","p","drawing","lastPoint","circles","viewGuides","START","random","TWO_PI","SIZES","Array","fill","map","_","i","floor","Circle","rate","radius","sizeFunction","this","_radius","direction","draw","circle","theta","animLoop","setup","createCanvas","frameRate","createGraphics","width","height","colorMode","HSL","blendMode","HARD_LIGHT","strokeWeight","noStroke","properties","shuffle","tan","push","createLoop","noiseRadius","noise1D","background","mid","cA","cB","lerp","position","thisPoint","abs","ease","triangle","image","frameCount","DURATION","noLoop","stroke","noFill","forEach","line","console","info","mousePressed","location","path","pathname","description"],"mappings":"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","file":"component---src-pages-sketch-2019-11-25-js-b3b400b7882de3b7bb06.js","sourcesContent":["export default function isPrime(n) {\n  if (n === 1) {\n    return false;\n  } else if (n === 2) {\n    return true;\n  } else {\n    for (var x = 2; x < n; x++) {\n      if (n % x === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n","/**\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x4\n * @param {number} y4\n */\nexport default function lineIntersection(x1, y1, x2, y2, x3, y3, x4, y4) {\n  const uA =\n    ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n  const uB =\n    ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    return { x: x1 + uA * (x2 - x1), y: y1 + uA * (y2 - y1) };\n  }\n  return { x: null, y: null };\n}\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport lineIntersection from \"~lib/lineIntersection\";\nimport isPrime from \"~lib/isPrime\";\nimport { easeInOutQuad as ease } from \"~lib/easing\";\nimport \"p5.createloop\";\n\nconst DURATION = 120;\n\nconst sketch = function(p) {\n  let drawing;\n  let lastPoint;\n  let circles = [];\n  let viewGuides = true;\n\n  const START = p.random(p.TWO_PI);\n\n  const SIZES = Array(3)\n    .fill()\n    .map((_, i) => {\n      let x;\n      do {\n        x = p.floor(p.random(i * 10, i * 20));\n      } while (!isPrime(x));\n      return x;\n    });\n\n  class Circle {\n    constructor(x, y, rate, radius, sizeFunction) {\n      this.centerX = x;\n      this.centerY = y;\n      this._radius = radius;\n      this.rate = rate;\n      this.direction = p.random([1, -1]);\n      this.sizeFunction = sizeFunction;\n    }\n    get position() {\n      const { theta } = p.animLoop;\n\n      return polarToCartesian(\n        this.centerX,\n        this.centerY,\n        (theta + START) * this.rate * this.direction,\n        this.radius\n      );\n    }\n    get radius() {\n      const { theta } = p.animLoop;\n      return this._radius * (this.sizeFunction(theta) + 1);\n    }\n    draw() {\n      p.circle(this.centerX, this.centerY, this.radius * 2);\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.frameRate(60);\n    drawing = p.createGraphics(p.width, p.height);\n    drawing.colorMode(p.HSL, 1);\n    drawing.blendMode(p.HARD_LIGHT);\n    drawing.strokeWeight(2);\n    drawing.noStroke();\n\n    const properties = p.shuffle([\n      [SIZES[0], p.random(p.width / 10, p.width / 7), Math.sin],\n      [SIZES[1], p.random(p.width / 7, p.width / 3), Math.cos],\n      [SIZES[2], p.random(p.width / 3, p.width / 2), Math.tan],\n    ]);\n\n    circles.push(new Circle(0, 0, ...properties[0]));\n    circles.push(new Circle(p.width, 0, ...properties[1]));\n    circles.push(new Circle(p.width / 2, p.height * 1.5, ...properties[2]));\n\n    p.createLoop(DURATION, { noiseRadius: 15 });\n  };\n\n  /*\n\n               mid[0]\n  circle[0] ---------- circle[1]\n            \\        /\n             \\      /\n      mid[2]  \\    / mid[1]\n               \\  /\n                \\/\n             circle(2)\n\n  */\n\n  p.draw = function() {\n    const { theta, noise1D } = p.animLoop;\n\n    p.background(128);\n\n    let mid = circles.map((cA, i) => {\n      let cB = circles[i === 2 ? 0 : i + 1];\n      return {\n        x: p.lerp(cA.position.x, cB.position.x, 0.5),\n        y: p.lerp(cA.position.y, cB.position.y, 0.5),\n      };\n    });\n\n    const thisPoint = lineIntersection(\n      circles[0].position.x,\n      circles[0].position.y,\n      mid[1].x,\n      mid[1].y,\n      circles[1].position.x,\n      circles[1].position.y,\n      mid[2].x,\n      mid[2].y\n    );\n\n    if (lastPoint) {\n      drawing.fill(\n        p.abs(p.sin(theta + START)),\n        p.abs(p.cos(theta * 3)),\n        p.map(p.abs(p.cos(theta)), 0, 1, 0.75, 0.5),\n        ease(p.abs(p.sin(theta))) / 4\n      );\n\n      drawing.triangle(\n        thisPoint.x,\n        thisPoint.y,\n        lastPoint.x,\n        lastPoint.y,\n        p.width / 2,\n        p.height / 2\n      );\n      p.image(drawing, 0, 0);\n    }\n    lastPoint = thisPoint;\n\n    if (p.frameCount > DURATION * 60) {\n      p.noLoop();\n      viewGuides = false;\n    }\n\n    if (viewGuides) {\n      p.stroke(\"red\");\n      p.noFill();\n      circles.forEach((cA, i) => {\n        let cB = circles[i === 2 ? 0 : i + 1];\n        p.circle(cA.centerX, cA.centerY, cA.radius * 2);\n        p.line(cA.position.x, cA.position.y, cB.position.x, cB.position.y);\n        p.circle(mid[i].x, mid[i].y, 5);\n      });\n      p.line(circles[0].position.x, circles[0].position.y, mid[1].x, mid[1].y);\n      p.line(circles[1].position.x, circles[1].position.y, mid[2].x, mid[2].y);\n      p.line(circles[2].position.x, circles[2].position.y, mid[0].x, mid[0].y);\n    }\n\n    if (p.frameCount % 100 === 0) {\n      console.info(p.frameCount + \" of \" + DURATION * 60);\n    }\n  };\n\n  p.mousePressed = function() {\n    viewGuides = !viewGuides;\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Click or tap canvas to toggle guides.\"\n  />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/08/17.js"],"names":["RENDER","process","DEV","sketch","p","GRID","HUE_RANGE","random","boxes","Box","x","y","this","canvas","createGraphics","colorMode","HSB","rotate","TWO_PI","offset","noise","prototype","draw","_p$animLoop","animLoop","noise2D","theta","loopPosition","lineX","map","hue","sin","dist","width","height","push","translate","background","stroke","strokeWeight","line","pop","image","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","render","open","noiseRadius","forEach","b","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description"],"mappings":"+HAIMA,UAASC,GAAYC,MAAO,GAE5BC,EAAS,SAASC,GACtB,IAAMC,EAAO,GACPC,EAAYF,EAAEG,OAAO,IAEvBC,EAAQ,GAENC,EANmB,WAOvB,SAAAA,EAAYC,EAAGC,GACbC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKC,OAAST,EAAEU,eAAeT,EAAMA,GACrCO,KAAKC,OAAOE,UAAUX,EAAEY,IAAK,GAC7BJ,KAAKK,OAAUb,EAAEc,OAAS,EAAKd,EAAEG,OAAO,CAAC,EAAG,EAAG,EAAG,IAClDK,KAAKO,OAASf,EAAEgB,MAAMV,EAAGC,GAAKP,EAAEc,OAbX,OAAAT,EAAAY,UAgBvBC,KAAA,WAAO,IAAAC,EACsBnB,EAAEoB,SAArBC,EADHF,EACGE,QAASC,EADZH,EACYG,MACXC,EACJD,EAAQd,KAAKO,OAASf,EAAEc,OACpBQ,EAAQd,KAAKO,OAASf,EAAEc,OACxBQ,EAAQd,KAAKO,OACbS,EAAQxB,EAAEyB,IACdF,EACA,EACAvB,EAAEc,QACDb,EAAO,EAAIA,EACZA,EAAO,EAAIA,GAEPyB,EAAM1B,EAAEyB,IACZJ,EACErB,EAAE2B,IAAIL,GACNtB,EAAE4B,KAAK5B,EAAE6B,MAAQ,EAAG7B,EAAE8B,OAAS,EAAGtB,KAAKF,EAAGE,KAAKD,KAEhD,EACD,EACAL,EACAA,EAAY,IAGdM,KAAKC,OAAOsB,OACZvB,KAAKC,OAAOuB,UAAU/B,EAAO,EAAGA,EAAO,GACvCO,KAAKC,OAAOI,OAAOL,KAAKK,QACxBL,KAAKC,OAAOwB,WAAWP,EAAK,EAAG,KAC/BlB,KAAKC,OAAOyB,OAAOR,EAAK,GAAK,KAC7BlB,KAAKC,OAAO0B,aAAalC,GACzBO,KAAKC,OAAO2B,KAAKZ,GAAQvB,EAAMuB,EAAOvB,GACtCO,KAAKC,OAAO4B,MAEZrC,EAAEsC,MAAM9B,KAAKC,OAAQD,KAAKF,EAAGE,KAAKD,IAjDbF,EAAA,GAqDzBL,EAAEuC,MAAQ,WACJ3C,IACFI,EAAEwC,aAAa,GACfxC,EAAEyC,UAAU,KAGdzC,EAAE0C,aAAa,IAAK,KAEpB1C,EAAE2C,WAAW,EAAG,CACdC,MAAKhD,GAAS,CAAEiD,QAAQ,EAAOC,MAAM,GACrCC,YAAa,KAGf,IAAK,IAAIzC,EAAI,EAAGA,EAAIN,EAAE6B,MAAOvB,GAAKL,EAChC,IAAK,IAAIM,EAAI,EAAGA,EAAIP,EAAE8B,OAAQvB,GAAKN,EACjCG,EAAM2B,KAAK,IAAI1B,EAAIC,EAAGC,KAK5BP,EAAEkB,KAAO,WACPlB,EAAEiC,WAAW,KAEb7B,EAAM4C,QAAQ,SAAAC,GAAC,OAAIA,EAAE/B,WAIVgC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAcxD,OAAQA,EAAQyD,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2019-08-17-js-9c47494906c3e5fcf4da.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const GRID = 60;\n  const HUE_RANGE = p.random(0.8);\n\n  let boxes = [];\n\n  class Box {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.canvas = p.createGraphics(GRID, GRID);\n      this.canvas.colorMode(p.HSB, 1);\n      this.rotate = (p.TWO_PI / 8) * p.random([1, 3, 5, 7]);\n      this.offset = p.noise(x, y) * p.TWO_PI;\n    }\n\n    draw() {\n      const { noise2D, theta } = p.animLoop;\n      const loopPosition =\n        theta + this.offset > p.TWO_PI\n          ? theta + this.offset - p.TWO_PI\n          : theta + this.offset;\n      const lineX = p.map(\n        loopPosition,\n        0,\n        p.TWO_PI,\n        -GRID / 2 - GRID,\n        GRID / 2 + GRID\n      );\n      const hue = p.map(\n        noise2D(\n          p.sin(theta),\n          p.dist(p.width / 2, p.height / 2, this.x, this.y)\n        ),\n        -1,\n        1,\n        HUE_RANGE,\n        HUE_RANGE + 0.2\n      );\n\n      this.canvas.push();\n      this.canvas.translate(GRID / 2, GRID / 2);\n      this.canvas.rotate(this.rotate);\n      this.canvas.background(hue, 1, 0.25);\n      this.canvas.stroke(hue, 0.5, 0.75);\n      this.canvas.strokeWeight(GRID);\n      this.canvas.line(lineX, -GRID, lineX, GRID);\n      this.canvas.pop();\n\n      p.image(this.canvas, this.x, this.y);\n    }\n  }\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n\n    p.createLoop(5, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.3,\n    });\n\n    for (let x = 0; x < p.width; x += GRID) {\n      for (let y = 0; y < p.height; y += GRID) {\n        boxes.push(new Box(x, y));\n      }\n    }\n  };\n\n  p.draw = function() {\n    p.background(255);\n\n    boxes.forEach(b => b.draw());\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
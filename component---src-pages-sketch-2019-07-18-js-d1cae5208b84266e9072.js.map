{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/18.js","webpack:///./src/lib/polarToCartesian.js"],"names":["sketch","p","HUE","random","aElement","i","aPosition","setup","createCanvas","colorMode","HSL","background","noFill","blendMode","OVERLAY","ellipseMode","CENTER","draw","NOISE","noise","frameCount","push","stroke","map","cos","sin","translate","apply","polarToCartesian","width","height","rotate","arc","PI","pop","TWO_PI","console","log","HALF_PI","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description","__webpack_require__","d","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","angle","distance","Math","centerX","centerY","radiusX","radiusY","asArray","x","y"],"mappings":"uIAIMA,EAAS,SAASC,GACtB,IAAMC,EAAMD,EAAEE,OAAO,IAIjBC,EAAW,EACXC,EAAI,EACJC,EAAY,EAEhBL,EAAEM,MAAQ,WACRN,EAAEO,aAAa,IAAK,KACpBP,EAAEQ,UAAUR,EAAES,IAAK,KACnBT,EAAEU,WAAWT,EAAK,GAAI,IACtBD,EAAEW,SACFX,EAAEY,UAAUZ,EAAEa,SACdb,EAAEc,YAAYd,EAAEe,SAGlBf,EAAEgB,KAAO,WACP,IAAMC,EAAQjB,EAAEkB,MAAMlB,EAAEmB,WAAF,KAAmCd,GAEzDL,EAAEoB,OACFpB,EAAEqB,OACArB,EAAEsB,IAAItB,EAAEuB,IAAIvB,EAAEmB,WAAF,MAAoC,EAAG,EAAGlB,EAAKA,EAAM,IACjE,GACAD,EAAEsB,IAAItB,EAAEwB,IAAInB,IAAa,EAAG,EAAG,GAAI,IACnC,IAAM,EAAIY,IAEZjB,EAAEyB,UAAFC,MAAA1B,EACK2B,YACD3B,EAAE4B,MAAQ,EACV5B,EAAE6B,OAAS,EACXxB,EACCL,EAAE4B,MAAQ,EAAKX,GAChB,IAGJjB,EAAE8B,OAAO3B,GACTH,EAAE+B,IACA,EACA,EACA/B,EAAE4B,MAAQX,EACV,GACAjB,EAAEmB,WAzCa,GA0CfnB,EAAEmB,WA1Ca,GA0CanB,EAAEgC,IAEhChC,EAAEiC,MACF5B,GAAaL,EAAEkC,OA5CH,IA8CZC,QAAQC,IAAIhC,GAEZD,GAAYH,EAAEqC,QAAF,MACRhC,EAAYL,EAAEkC,SAChB7B,EAAY,IACZD,EApDe,KAsDbJ,EAAEsC,SACFH,QAAQC,IAAI,YAMLG,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAc7C,OAAQA,EAAQ8C,KAAMJ,EAASK,SAAUC,YAAY,wCCpErEC,EAAAC,EAAAV,EAAA,sBAAAW,IAAAF,EAAAC,EAAAV,EAAA,sBAAAY,IAAAH,EAAAC,EAAAV,EAAA,sBAAAa,IAAA,IAAMF,EAAoB,SAACG,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKjC,IAAI+B,GAASC,GAE9BJ,EAAoB,SAACE,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKhC,IAAI8B,GAASC,GAa9BH,EAA0B,SAC9BK,EACAC,EACAJ,EACAK,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIL,EAAUD,KAAKjC,IAAI+B,GAASK,EAChCI,EAAIL,EAAUF,KAAKhC,IAAI8B,GAASM,EACtC,OAAOC,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,MAIlBpC,IAzBU,SACvB8B,EACAC,EACAJ,EACAC,EACAM,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIZ,EAAkBO,EAASH,EAAOC,GACtCQ,EAAIZ,EAAkBO,EAASJ,EAAOC,GAC5C,OAAOM,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC","file":"component---src-pages-sketch-2019-07-18-js-d1cae5208b84266e9072.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const HUE = p.random(80);\n  const ITERATIONS = 15;\n  const COUNT = 720;\n\n  let aElement = 0;\n  let i = 1;\n  let aPosition = 0;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSL, 100);\n    p.background(HUE, 30, 80);\n    p.noFill();\n    p.blendMode(p.OVERLAY);\n    p.ellipseMode(p.CENTER);\n  };\n\n  p.draw = function() {\n    const NOISE = p.noise(p.frameCount / (ITERATIONS * 100), aPosition);\n\n    p.push();\n    p.stroke(\n      p.map(p.cos(p.frameCount / (ITERATIONS * 10)), -1, 1, HUE, HUE + 20),\n      50,\n      p.map(p.sin(aPosition), -1, 1, 90, 25),\n      20 * (1 - NOISE)\n    );\n    p.translate(\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        aPosition,\n        (p.width / 3) * NOISE,\n        true\n      )\n    );\n    p.rotate(aElement);\n    p.arc(\n      0,\n      0,\n      p.width * NOISE,\n      50,\n      p.frameCount / ITERATIONS,\n      p.frameCount / ITERATIONS + p.PI\n    );\n    p.pop();\n    aPosition += p.TWO_PI / COUNT;\n\n    console.log(i);\n\n    aElement -= p.HALF_PI / (COUNT * ITERATIONS);\n    if (aPosition > p.TWO_PI) {\n      aPosition = 0;\n      i++;\n      if (i > ITERATIONS) {\n        p.noLoop();\n        console.log(\"done\");\n      }\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
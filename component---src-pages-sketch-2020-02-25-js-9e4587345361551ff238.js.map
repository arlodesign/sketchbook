{"version":3,"sources":["webpack:///./src/lib/easing.js","webpack:///./src/pages/sketch/2020/02/25.js"],"names":["linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","sketch","p","RENDER","getURLParams","render","HUE","random","HUES","shuffle","particles","Particle","x","y","this","dir","createVector","vel","pos","move","prevPos","noiseVal","animLoop","noise2D","radius","progress","sin","theta","cos","copy","mult","add","draw","line","setup","pixelDensity","frameRate","createCanvas","colorMode","HSL","background","createLoop","gif","open","Array","fill","map","_","i","width","height","alpha","ease","forEach","particleSet","strokeWeight","stroke","particle","frameCount","console","info","floor","DURATION","noLoop","location","path","pathname","description"],"mappings":"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","file":"component---src-pages-sketch-2020-02-25-js-9e4587345361551ff238.js","sourcesContent":["// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport { easeInQuad as ease } from \"~lib/easing\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const DURATION = 120;\n  const RATE = 30;\n  const NOISE_SCALE = 1200;\n  const SPEED = 2;\n  const HUE = p.random(1 / 3);\n  const HUES = p.shuffle([HUE, HUE + 1 / 3, HUE + 2 / 3]);\n  const PARTICLE_COUNT = 200;\n\n  let particles = [];\n\n  class Particle {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.dir = p.createVector(0, 0);\n      this.vel = p.createVector(0, 0);\n      this.pos = p.createVector(x, y);\n    }\n    move() {\n      this.prevPos = { x: this.pos.x, y: this.pos.y };\n\n      const noiseVal = p.animLoop.noise2D(\n        this.x / NOISE_SCALE,\n        this.y / NOISE_SCALE,\n        {\n          radius: SPEED * (1 - p.animLoop.progress),\n        }\n      );\n      this.dir.x = p.sin(p.animLoop.theta) * noiseVal;\n      this.dir.y = p.cos(p.animLoop.theta) * noiseVal;\n      this.vel = this.dir.copy();\n      this.vel.mult(SPEED);\n      this.pos.add(this.vel);\n    }\n    draw() {\n      this.move();\n      p.line(this.prevPos.x, this.prevPos.y, this.pos.x, this.pos.y);\n    }\n  }\n\n  p.setup = function() {\n    p.pixelDensity(2);\n    p.frameRate(RATE);\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSL, 1);\n    p.background(p.random(HUES), 0.2, 0.8);\n    p.createLoop(DURATION, {\n      gif: RENDER ? { render: false, open: true } : false,\n    });\n\n    particles = Array(3)\n      .fill()\n      .map(() =>\n        Array(PARTICLE_COUNT)\n          .fill()\n          .map(\n            (_, i) =>\n              new Particle(\n                p.random(\n                  (p.width / PARTICLE_COUNT) * i,\n                  (p.width / PARTICLE_COUNT) * (i + 1)\n                ),\n                p.random(\n                  (p.height / PARTICLE_COUNT) * i,\n                  (p.height / PARTICLE_COUNT) * (i + 1)\n                )\n              )\n          )\n      );\n  };\n\n  p.draw = function() {\n    const { progress } = p.animLoop;\n\n    const alpha = ease(-2 * progress * progress + 2 * progress);\n\n    particles.forEach((particleSet, i) => {\n      p.strokeWeight((i + 1) / 2);\n      p.stroke(HUES[i], 1, i / 3, alpha);\n      particleSet.forEach(particle => particle.draw());\n    });\n\n    p.frameCount % 100 === 0 && console.info(`${p.floor(progress * 100)}%`);\n    if (!RENDER && p.frameCount === DURATION * RATE) {\n      console.info(\"100%\");\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/09/12.js","webpack:///./src/lib/easing.js"],"names":["RENDER","process","DEV","sketch","p","setup","createCanvas","noStroke","colorMode","HSL","rectMode","CENTER","createLoop","gif","render","open","noiseRadius","draw","theta","animLoop","blendMode","BLEND","background","MULTIPLY","x","width","y","height","push","fill","translate","GRID","square","ease","map","cos","dist","sin","pop","location","path","pathname","description","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"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","file":"component---src-pages-sketch-2019-09-12-js-355425f5835dbb187070.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport { easeInOutQuad as ease } from \"~lib/easing\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\nconst GRID = 30;\n\nconst sketch = function(p) {\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.noStroke();\n    p.colorMode(p.HSL, 1);\n    p.rectMode(p.CENTER);\n\n    p.createLoop(3, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.5,\n    });\n  };\n\n  p.draw = function() {\n    const { theta } = p.animLoop;\n\n    p.blendMode(p.BLEND);\n    p.background(255);\n    p.blendMode(p.MULTIPLY);\n\n    for (let x = 0; x < p.width / GRID; x++) {\n      for (let y = 0; y < p.height / GRID; y++) {\n        p.push();\n        p.fill(\"cyan\");\n        p.translate(x * GRID + GRID / 2, y * GRID + GRID / 2);\n        p.square(\n          0,\n          0,\n          ease(\n            p.map(\n              p.cos(\n                p.dist(\n                  x * GRID + GRID / 2,\n                  y * GRID + GRID / 2,\n                  p.width / 2,\n                  p.height / 2\n                ) + theta\n              ),\n              -1,\n              1,\n              0,\n              1\n            )\n          ) * GRID,\n          ease(\n            p.map(\n              p.sin(\n                p.dist(\n                  x * GRID + GRID / 2,\n                  y * GRID + GRID / 2,\n                  p.width / 2,\n                  p.height / 2\n                ) + theta\n              ),\n              -1,\n              1,\n              0,\n              1\n            )\n          ) * GRID\n        );\n        p.pop();\n\n        p.push();\n        p.fill(\"yellow\");\n        p.translate(p.width - (x * GRID + GRID / 2), y * GRID + GRID / 2);\n        p.square(\n          0,\n          0,\n          ease(\n            p.map(\n              p.sin(\n                p.dist(\n                  x * GRID + GRID / 2,\n                  y * GRID + GRID / 2,\n                  p.width / 2,\n                  p.height / 2\n                ) + theta\n              ),\n              -1,\n              1,\n              0,\n              1\n            )\n          ) * GRID,\n          ease(\n            p.map(\n              p.cos(\n                p.dist(\n                  x * GRID + GRID / 2,\n                  y * GRID + GRID / 2,\n                  p.width / 2,\n                  p.height / 2\n                ) + theta\n              ),\n              -1,\n              1,\n              0,\n              1\n            )\n          ) * GRID\n        );\n        p.pop();\n\n        p.push();\n        p.fill(\"magenta\");\n        p.translate(x * GRID - GRID / 2, y * GRID + GRID / 2);\n        p.square(\n          0,\n          0,\n          ease(\n            p.map(\n              p.sin(p.dist(x, y, -p.width / 2, p.height / 2) + theta),\n              -1,\n              1,\n              1,\n              0\n            )\n          ) *\n            (GRID / 2),\n          ease(\n            p.map(\n              p.cos(p.dist(x, y, -p.width / 2, p.height / 2) + theta),\n              -1,\n              1,\n              1,\n              0\n            )\n          ) *\n            (GRID / 2)\n        );\n        p.pop();\n      }\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n"],"sourceRoot":""}
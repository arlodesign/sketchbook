{"version":3,"sources":["webpack:///./src/pages/sketch/2019/09/05.js"],"names":["RENDER","process","DEV","sketch","p","img","preload","loadImage","withPrefix","setup","pixelDensity","createCanvas","createLoop","gif","render","open","noiseRadius","draw","background","_p$animLoop","animLoop","noise2D","theta","push","blendMode","MULTIPLY","y","height","image","width","sin","pop","clr","color","setAlpha","stroke","translate","line","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description"],"mappings":"wIAKMA,UAASC,GAAYC,MAAO,GAE5BC,EAAS,SAASC,GACtB,IAAIC,EAEJD,EAAEE,QAAU,WACVD,EAAMD,EAAEG,UAAUC,YAAW,uBAG/BJ,EAAEK,MAAQ,WACCL,EAAEM,aAAa,GACxBN,EAAEO,aAAa,IAAK,KAEpBP,EAAEQ,WAAW,GAAI,CACfC,MAAKb,GAAS,CAAEc,QAAQ,EAAOC,MAAM,GACrCC,YAAa,MAIjBZ,EAAEa,KAAO,WACPb,EAAEc,WAAWb,GADK,IAAAc,EAESf,EAAEgB,SAArBC,EAFUF,EAEVE,QAASC,EAFCH,EAEDG,MAEjBlB,EAAEmB,OACFnB,EAAEoB,UAAUpB,EAAEqB,UACd,IAAK,IAAIC,EAAI,EAAGA,EAAItB,EAAEuB,OAAQD,GAAKtB,EAAEuB,OAAS,GAC5CvB,EAAEwB,MACAvB,EACA,EACAqB,EACAtB,EAAEyB,MACFzB,EAAEuB,OAAS,GACXvB,EAAEyB,MAAQzB,EAAE0B,IAAIR,GAASD,EAAQ,EAAGK,GACpCA,EACAtB,EAAEyB,MACFzB,EAAEuB,OAAS,IAGfvB,EAAE2B,MAEF,IAAK,IAAIL,EAAI,EAAGA,EAAItB,EAAEuB,OAAQD,IAAK,CACjCtB,EAAEmB,OACF,IAAMS,EAAM5B,EAAE6B,MAAM,CAAC,MAAO,QAAS,QAAQP,EAAI,IACjDM,EAAIE,SAAS,KACb9B,EAAE+B,OAAOH,GACT5B,EAAEgC,UAAUhC,EAAEyB,MAAQ,EAAGH,GACzBtB,EAAEiC,KAAKjC,EAAEyB,MAAQR,EAAQ,EAAGK,GAAI,EAAGtB,EAAEyB,MAAQR,EAAQ,EAAGK,GAAI,GAC5DtB,EAAE2B,SAKOO,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAcxC,OAAQA,EAAQyC,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2019-09-05-js-2ca05669f1bcb998b3e8.js","sourcesContent":["import React from \"react\";\nimport { withPrefix } from \"gatsby\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  let img;\n\n  p.preload = function() {\n    img = p.loadImage(withPrefix(\"/assets/susan.png\"));\n  };\n\n  p.setup = function() {\n    RENDER * p.pixelDensity(1);\n    p.createCanvas(660, 840);\n\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n  };\n\n  p.draw = function() {\n    p.background(img);\n    const { noise2D, theta } = p.animLoop;\n\n    p.push();\n    p.blendMode(p.MULTIPLY);\n    for (let y = 0; y < p.height; y += p.height / 10) {\n      p.image(\n        img,\n        0,\n        y,\n        p.width,\n        p.height / 10,\n        p.width * p.sin(theta) * noise2D(4, y),\n        y,\n        p.width,\n        p.height / 10\n      );\n    }\n    p.pop();\n\n    for (let y = 0; y < p.height; y++) {\n      p.push();\n      const clr = p.color([\"red\", \"green\", \"blue\"][y % 3]);\n      clr.setAlpha(128);\n      p.stroke(clr);\n      p.translate(p.width / 2, y);\n      p.line(p.width * noise2D(2, y), 0, p.width * noise2D(3, y), 0);\n      p.pop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
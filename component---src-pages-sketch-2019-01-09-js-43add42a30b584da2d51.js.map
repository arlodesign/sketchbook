{"version":3,"sources":["webpack:///./src/pages/sketch/2019/01/09.js"],"names":["sketch","p","boundary","maxDist","vectors","drawingComplete","getVectorValue","max","constrain","randomGaussian","setup","createCanvas","WEBGL","width","Array","from","vectorCount","vector","createVector","reached","reachedBy","concat","forEach","x","y","z","push","dist","draw","background","rotateX","sin","frameCount","rotateY","cos","stroke","noFill","_ref","i","_vectors$reachedBy$ve","strokeWeight","map","bezier","reachedByIndex","unreachedIndex","shortestDist","uv","ui","rv","ri","thisDist","filter","v","length","__webpack_exports__","_ref2","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_4__","path","pathname"],"mappings":"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","file":"component---src-pages-sketch-2019-01-09-js-43add42a30b584da2d51.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const vectorCount = 250;\n  let vectors = [];\n  let boundary;\n  let maxDist;\n  let drawingComplete = false;\n\n  function getVectorValue(max) {\n    return p.constrain(p.randomGaussian(0, max * 0.75), -max, max);\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840, p.WEBGL);\n    boundary = p.width / 3;\n    vectors = Array.from(Array(vectorCount / 2), () => ({\n      vector: p.createVector(\n        getVectorValue(boundary / 2),\n        getVectorValue(boundary / 2),\n        getVectorValue(boundary / 2)\n      ),\n      reached: false,\n      reachedBy: 0,\n    }));\n    vectors = vectors.concat(\n      Array.from(Array(vectorCount), () => ({\n        vector: p.createVector(\n          getVectorValue(boundary),\n          getVectorValue(boundary),\n          getVectorValue(boundary)\n        ),\n        reached: false,\n        reachedBy: 0,\n      }))\n    );\n    [-1, 1].forEach(x => {\n      [-1, 1].forEach(y => {\n        [-1, 1].forEach(z => {\n          vectors.push({\n            vector: p.createVector(boundary * x, boundary * y, boundary * z),\n            reached: false,\n            reachedBy: 0,\n          });\n        });\n      });\n    });\n    vectors[0].reached = true;\n    vectors[0].reachedBy = -1;\n    maxDist = p.dist(\n      -boundary,\n      -boundary,\n      -boundary,\n      boundary,\n      boundary,\n      boundary\n    );\n  };\n\n  p.draw = function() {\n    p.background(0);\n    p.rotateX(p.sin(p.frameCount / 200));\n    p.rotateY(p.cos(p.frameCount / 300));\n    p.stroke(255);\n    p.noFill();\n    vectors.forEach(({ vector, reached, reachedBy }, i) => {\n      if (reached && reachedBy > -1) {\n        const { x, y, z } = vectors[reachedBy].vector;\n        p.stroke(i % 2 ? 255 : 0);\n        p.strokeWeight(\n          p.map(\n            p.dist(0, 0, 0, vector.x, vector.y, vector.z),\n            0,\n            maxDist / 2,\n            4,\n            0.25\n          )\n        );\n        p.bezier(vector.x, vector.y, vector.z, 0, 0, 0, 0, 0, 0, x, y, z);\n      }\n    });\n    let shortestDist = maxDist;\n    let reachedByIndex;\n    let unreachedIndex;\n    if (!drawingComplete) {\n      vectors.forEach((uv, ui) => {\n        if (!uv.reached) {\n          vectors.forEach((rv, ri) => {\n            if (rv.reached) {\n              const thisDist = p.dist(\n                uv.vector.x,\n                uv.vector.y,\n                uv.vector.z,\n                rv.vector.x,\n                rv.vector.y,\n                rv.vector.z\n              );\n              if (thisDist < shortestDist) {\n                shortestDist = thisDist;\n                unreachedIndex = ui;\n                reachedByIndex = ri;\n              }\n            }\n          });\n        }\n      });\n      vectors[unreachedIndex].reached = true;\n      vectors[unreachedIndex].reachedBy = reachedByIndex;\n    }\n    if (\n      vectors.filter(v => v.reached).length ===\n      vectorCount + vectorCount / 2 + 8\n    ) {\n      drawingComplete = true;\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/11/28.js","webpack:///./src/lib/isPrime.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/lerpLine.js","webpack:///./src/lib/easing.js","webpack:///./src/lib/lineIntersection.js"],"names":["sketch","p","drawing","lastPoint","RENDER","getURLParams","render","circles","viewGuides","START","random","TWO_PI","HUE","SIZES","Array","fill","map","_","i","x","floor","isPrime","Circle","y","rate","radius","sizeFunction","this","centerX","centerY","_radius","direction","draw","circle","theta","animLoop","polarToCartesian","setup","pixelDensity","createCanvas","frameRate","createGraphics","width","height","colorMode","HSL","blendMode","HARD_LIGHT","noFill","properties","shuffle","Math","sin","cos","push","createLoop","gif","open","noiseRadius","noise1D","background","mid","cA","cB","lerp","position","thisPoint","lineIntersection","stroke","ease","abs","lerpLine","frameCount","image","DURATION","noLoop","forEach","line","console","info","mousePressed","location","path","pathname","description","n","polarToCartesianX","center","angle","distance","polarToCartesianY","polarToCartesianEllipse","radiusX","radiusY","asArray","x1","y1","x2","y2","showFirstDot","noisy","thisRate","max","dist","l","point","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","x3","y3","x4","y4","uA","uB"],"mappings":"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","file":"component---src-pages-sketch-2019-11-28-js-7f8e293df98f8902e70d.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport lineIntersection from \"~lib/lineIntersection\";\nimport isPrime from \"~lib/isPrime\";\nimport { easeInOutQuint as ease } from \"~lib/easing\";\nimport \"p5.createloop\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst DURATION = 45;\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n\n  let drawing;\n  let lastPoint;\n  let circles = [];\n  let viewGuides = !RENDER;\n\n  const START = p.random(p.TWO_PI);\n  const HUE = p.random(0.333);\n\n  const SIZES = Array(3)\n    .fill()\n    .map((_, i) => {\n      let x;\n      do {\n        x = p.floor(p.random(i * 10, i * 20));\n      } while (!isPrime(x));\n      return x;\n    });\n\n  class Circle {\n    constructor(x, y, rate, radius, sizeFunction) {\n      this.centerX = x;\n      this.centerY = y;\n      this._radius = radius;\n      this.rate = rate;\n      this.direction = p.random([1, -1]);\n      this.sizeFunction = sizeFunction;\n    }\n    get position() {\n      const { theta } = p.animLoop;\n\n      return polarToCartesian(\n        this.centerX,\n        this.centerY,\n        (theta + START) * this.rate * this.direction,\n        this.radius\n      );\n    }\n    get radius() {\n      const { theta } = p.animLoop;\n      return this._radius * (this.sizeFunction(theta) + 1);\n    }\n    draw() {\n      p.circle(this.centerX, this.centerY, this.radius * 2);\n    }\n  }\n\n  p.setup = function() {\n    p.pixelDensity(RENDER ? 1 : 2);\n    p.createCanvas(660, 840);\n    p.frameRate(60);\n\n    drawing = p.createGraphics(p.width, p.height);\n    drawing.colorMode(p.HSL, 1);\n    drawing.blendMode(p.HARD_LIGHT);\n    drawing.noFill();\n\n    const properties = p.shuffle([\n      [SIZES[0], p.random(p.width / 10, p.width / 7), Math.sin],\n      [SIZES[1], p.random(p.width / 7, p.width / 3), Math.cos],\n      [SIZES[2], p.random(p.width / 3, p.width / 2), Math.sin],\n    ]);\n\n    circles.push(new Circle(0, 0, ...properties[0]));\n    circles.push(new Circle(p.width, 0, ...properties[1]));\n    circles.push(new Circle(p.width / 2, p.height * 1.5, ...properties[2]));\n\n    p.createLoop(DURATION, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 2,\n    });\n  };\n\n  p.draw = function() {\n    const { theta, noise1D } = p.animLoop;\n\n    p.background(32);\n\n    let mid = circles.map((cA, i) => {\n      let cB = circles[i === 2 ? 0 : i + 1];\n      return {\n        x: p.lerp(cA.position.x, cB.position.x, 0.5),\n        y: p.lerp(cA.position.y, cB.position.y, 0.5),\n      };\n    });\n\n    const thisPoint = lineIntersection(\n      circles[0].position.x,\n      circles[0].position.y,\n      mid[1].x,\n      mid[1].y,\n      circles[1].position.x,\n      circles[1].position.y,\n      mid[2].x,\n      mid[2].y\n    );\n\n    if (lastPoint) {\n      drawing.stroke(\n        p.lerp(HUE, 1 - HUE, ease(p.abs(p.sin(theta)))),\n        p.abs(p.cos(theta * 3)),\n        p.map(p.abs(p.cos(theta)), 0, 1, 0.75, 0.5)\n      );\n\n      lerpLine(\n        drawing,\n        thisPoint.x,\n        thisPoint.y,\n        mid[p.frameCount % 3].x,\n        mid[p.frameCount % 3].y,\n        p.map(ease(p.abs(noise1D(0.09))), 0, 1, 0.001, 0.8),\n        false\n      );\n\n      p.image(drawing, 0, 0);\n    }\n    lastPoint = thisPoint;\n\n    if (p.frameCount > DURATION * 60) {\n      !RENDER && p.noLoop();\n      viewGuides = false;\n    }\n\n    if (viewGuides) {\n      p.stroke(\"red\");\n      p.noFill();\n      circles.forEach((cA, i) => {\n        let cB = circles[i === 2 ? 0 : i + 1];\n        p.circle(cA.centerX, cA.centerY, cA.radius * 2);\n        p.line(cA.position.x, cA.position.y, cB.position.x, cB.position.y);\n        p.circle(mid[i].x, mid[i].y, 5);\n      });\n      p.line(circles[0].position.x, circles[0].position.y, mid[1].x, mid[1].y);\n      p.line(circles[1].position.x, circles[1].position.y, mid[2].x, mid[2].y);\n      p.line(circles[2].position.x, circles[2].position.y, mid[0].x, mid[0].y);\n    }\n\n    if (p.frameCount % 100 === 0 && p.frameCount < DURATION * 60) {\n      console.info(p.frameCount + \" of \" + DURATION * 60);\n    }\n  };\n\n  p.mousePressed = function() {\n    viewGuides = !viewGuides;\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Click or tap canvas to toggle guides.\"\n  />\n);\n","export default function isPrime(n) {\n  if (n === 1) {\n    return false;\n  } else if (n === 2) {\n    return true;\n  } else {\n    for (var x = 2; x < n; x++) {\n      if (n % x === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","/**\n * Creates a line of points at a specified interval (the rate)\n *\n * @param {obj} p The current p5.js drawing context\n * @param {*} x1\n * @param {*} y1\n * @param {*} x2\n * @param {*} y2\n * @param {*} rate Number between 0 and 1 to determine how often to draw a point\n * @param {*} showFirstDot Defaults to true\n * @param {*} noisy Defaults to true\n */\nexport default function(\n  p,\n  x1,\n  y1,\n  x2,\n  y2,\n  rate,\n  showFirstDot = true,\n  noisy = true\n) {\n  const thisRate = Math.max(rate, 0.01 / p.dist(x1, y1, x2, y2));\n\n  for (let l = 0; l < 1; l += thisRate) {\n    if (l === 0 && !showFirstDot) continue;\n    if ((noisy && p.random() > l) || !noisy) {\n      p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n    }\n  }\n}\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n","/**\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x4\n * @param {number} y4\n */\nexport default function lineIntersection(x1, y1, x2, y2, x3, y3, x4, y4) {\n  const uA =\n    ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n  const uB =\n    ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    return { x: x1 + uA * (x2 - x1), y: y1 + uA * (y2 - y1) };\n  }\n  return { x: null, y: null };\n}\n"],"sourceRoot":""}
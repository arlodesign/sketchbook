{"version":3,"sources":["webpack:///./src/pages/sketch/2019/12/31.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/easing.js"],"names":["sketch","p","maskImage","RENDER","getURLParams","render","HUE","random","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","open","noiseRadius","colorMode","HSL","createGraphics","width","height","fill","triangle","polarToCartesian","TWO_PI","cos","draw","animLoop","noise1D","noise2D","theta","background","color","flameImage","i","beginShape","y","r","map","noFill","stroke","strokeWeight","vertex","sin","endShape","ease","abs","point","flames","get","mask","translate","rotate","push","scale","image","pop","location","path","pathname","description","polarToCartesianX","center","angle","distance","Math","polarToCartesianY","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","x","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"k/BAMA,IAAMA,EAAS,SAASC,GACtB,IAIIC,EAJEC,EAASF,EAAEG,eAAeC,OAE1BC,EAAML,EAAEM,SAIdN,EAAEO,MAAQ,WAAY,IAAD,EACfL,IACFF,EAAEQ,aAAa,GACfR,EAAES,UAAU,KAGdT,EAAEU,aAAa,IAAK,KACpBV,EAAEW,WAAW,GAAI,CACfC,MAAKV,GAAS,CAAEE,QAAQ,EAAOS,MAAM,GACrCC,YAAa,IAEfd,EAAEe,UAAUf,EAAEgB,IAAK,IAEnBf,EAAYD,EAAEiB,eAAejB,EAAEkB,MAAOlB,EAAEmB,SAC9BC,KAAK,IACf,EAAAnB,GAAUoB,SAAV,SACErB,EAAEkB,MAAQ,EACVlB,EAAEmB,OAAS,GAFb,SAGKG,YACDtB,EAAEkB,MAAQ,EACVlB,EAAEmB,OAAS,GACTnB,EAAEuB,OA1BU,GA0Bc,EAC1B,EAAIvB,EAAEwB,KAAMxB,EAAEuB,OA3BF,GA2B0B,GAAMvB,EAAEkB,MAAS,GACzD,IARJ,EAUKI,YACDtB,EAAEkB,MAAQ,EACVlB,EAAEmB,OAAS,EACXnB,EAAEuB,OAjCY,GAiCW,EACvB,EAAIvB,EAAEwB,IAAIxB,EAAEuB,OAlCA,GAkCuB,GAAMvB,EAAEkB,MAAS,GACtD,OAKNlB,EAAEyB,KAAO,WAAY,IAAD,EACkBzB,EAAE0B,SAA9BC,EADU,EACVA,QAASC,EADC,EACDA,QAASC,EADR,EACQA,MAE1B7B,EAAE8B,WAAW9B,EAAE+B,MAAM,EAAI1B,EAAK,GAAK,KAEnC,IAAM2B,EAAahC,EAAEiB,eAAejB,EAAEkB,MAAOlB,EAAEmB,QAC/Ca,EAAWjB,UAAUf,EAAEgB,IAAK,GAE5B,IAAK,IAAIiB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3BD,EAAWE,aACX,IAAK,IAAIC,EAAInC,EAAEmB,OAAS,EAAGgB,EAAInC,EAAEmB,OAASnB,EAAEmB,OAAS,EAAGgB,GAAK,EAAG,CAC9D,IAAMC,EAAIpC,EAAEqC,IAAIV,EAAQQ,EAAIF,EAAI,MAAO,EAAG,EAAG,IAAM,GAEnDD,EAAWM,SACXN,EAAWO,OAAOvC,EAAE+B,MAAM,EAAI1B,EAAK,EAAG,GAAK,KAC3C2B,EAAWQ,aAAa,GAExBR,EAAWS,OACTzC,EAAEkB,MAASlB,EAAEkB,MAAQ,EAAKkB,EAC1BD,EAAIP,EAAQO,EAAI,GAAInC,EAAE0C,IAAIb,KAG9BG,EAAWW,WAGb,IAAK,IAAIV,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3BD,EAAWE,aACX,IAAK,IAAIC,EAAInC,EAAEmB,OAAS,EAAGgB,EAAInC,EAAEmB,OAASnB,EAAEmB,OAAS,EAAGgB,GAAK,GAAI,CAC/D,IAAMC,EAAIQ,qBAAK5C,EAAE6C,IAAI7C,EAAE0C,IAAIb,GAASF,EAAQQ,KAE5CH,EAAWM,SACXN,EAAWO,OAAOvC,EAAE+B,MAAM1B,EAAK,EAAG,GAAK,KACvC2B,EAAWQ,aAAa,GAExBR,EAAWc,MACT9C,EAAEkB,MAASlB,EAAEkB,MAAQ,EAAKkB,EAAI,EAC9BD,EAAIP,EAAQO,EAAI,GAAInC,EAAE0C,IAAIb,KAG9BG,EAAWW,WAGb,IAAMI,EAASf,EAAWgB,MAC1BD,EAAOE,KAAKhD,GACZD,EAAEkD,UAAUlD,EAAEkB,MAAQ,EAAGlB,EAAEmB,OAAS,GACpCnB,EAAEmD,OAAOtB,GACT,IAAK,IAAII,EAAI,EAAGA,EAtFE,GAsFeA,IAC/BjC,EAAEoD,OACFpD,EAAEqD,MAAMpB,EAAI,EAAI,GAAK,EAAG,GACxBjC,EAAEmD,OAAQnD,EAAEuB,OAzFI,GAyFoBU,GACpCjC,EAAEsD,MAAMP,GAAS/C,EAAEkB,MAAQ,GAAIlB,EAAEmB,OAAS,GAC1CnB,EAAEuD,QAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAczD,OAAQA,EAAQ0D,KAAMD,EAASE,SAAUC,YAAY,O,kCCzGrE,0GAAMC,EAAoB,SAACC,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKxC,IAAIsC,GAASC,GAE9BE,EAAoB,SAACJ,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKtB,IAAIoB,GAASC,GAsB9BG,EAA0B,SAC9BC,EACAC,EACAN,EACAO,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIL,EAAUH,KAAKxC,IAAIsC,GAASO,EAChClC,EAAIiC,EAAUJ,KAAKtB,IAAIoB,GAASQ,EACtC,OAAOC,EAAU,CAACC,EAAGrC,GAAK,CAAEqC,IAAGrC,MAIlBb,IAzBU,SACvB6C,EACAC,EACAN,EACAC,EACAQ,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIZ,EAAkBO,EAASL,EAAOC,GACtC5B,EAAI8B,EAAkBG,EAASN,EAAOC,GAC5C,OAAOQ,EAAU,CAACC,EAAGrC,GAAK,CAAEqC,IAAGrC,O,kCCxBjC,2kBAGA,IAAMsC,EAAS,SAAAC,GAAC,OAAIA,GAGdC,EAAa,SAAAD,GAAC,OAAIA,EAAIA,GAGtBE,EAAc,SAAAF,GAAC,OAAIA,GAAK,EAAIA,IAG5BG,EAAgB,SAAAH,GAAC,OAAKA,EAAI,GAAM,EAAIA,EAAIA,GAAU,EAAI,EAAIA,GAAKA,EAAlB,GAG7CI,EAAc,SAAAJ,GAAC,OAAIA,EAAIA,EAAIA,GAG3BK,EAAe,SAAAL,GAAC,QAAMA,EAAIA,EAAIA,EAAI,GAGlCM,EAAiB,SAAAN,GAAC,OACtBA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,GAAKA,EAAI,IAAM,EAAIA,EAAI,IAAM,EAAIA,EAAI,GAAK,GAG5DO,EAAc,SAAAP,GAAC,OAAIA,EAAIA,EAAIA,EAAIA,GAG/BQ,EAAe,SAAAR,GAAC,OAAI,KAAMA,EAAIA,EAAIA,EAAIA,GAGtCS,EAAiB,SAAAT,GAAC,OACtBA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,IAAMA,EAAIA,EAAIA,EAAIA,GAGhDU,EAAc,SAAAV,GAAC,OAAIA,EAAIA,EAAIA,EAAIA,EAAIA,GAGnCW,EAAe,SAAAX,GAAC,OAAI,IAAMA,EAAIA,EAAIA,EAAIA,EAAIA,GAG1CY,EAAiB,SAAAZ,GAAC,OACtBA,EAAI,GAAM,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,KAAOA,EAAIA,EAAIA,EAAIA,EAAIA","file":"component---src-pages-sketch-2019-12-31-js-f422815e96cdcb952c7f.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport { easeInQuad as ease } from \"~lib/easing\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const PETAL_COUNT = 32;\n  const HUE = p.random();\n\n  let maskImage;\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n    p.createLoop(40, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 2,\n    });\n    p.colorMode(p.HSL, 1);\n\n    maskImage = p.createGraphics(p.width, p.height);\n    maskImage.fill(0);\n    maskImage.triangle(\n      p.width / 2,\n      p.height / 2,\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        -(p.TWO_PI / PETAL_COUNT) / 2,\n        ((1 / p.cos(-(p.TWO_PI / PETAL_COUNT) / 2)) * p.width) / 2,\n        true\n      ),\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        p.TWO_PI / PETAL_COUNT / 2,\n        ((1 / p.cos(p.TWO_PI / PETAL_COUNT / 2)) * p.width) / 2,\n        true\n      )\n    );\n  };\n\n  p.draw = function() {\n    const { noise1D, noise2D, theta } = p.animLoop;\n\n    p.background(p.color(1 - HUE, 0.4, 0.1));\n\n    const flameImage = p.createGraphics(p.width, p.height);\n    flameImage.colorMode(p.HSL, 1);\n\n    for (let i = 1; i < 20; i++) {\n      flameImage.beginShape();\n      for (let y = p.height / 5; y < p.height - p.height / 5; y += 2) {\n        const r = p.map(noise1D(y / i / 100), -1, 1, 0.01, 1);\n\n        flameImage.noFill();\n        flameImage.stroke(p.color(1 - HUE, 1, 0.6, 0.9));\n        flameImage.strokeWeight(3);\n\n        flameImage.vertex(\n          p.width - (p.width / 2) * r,\n          y + noise2D(y / 30, p.sin(theta))\n        );\n      }\n      flameImage.endShape();\n    }\n\n    for (let i = 1; i < 10; i++) {\n      flameImage.beginShape();\n      for (let y = p.height / 5; y < p.height - p.height / 5; y += 10) {\n        const r = ease(p.abs(p.sin(theta) * noise1D(y)));\n\n        flameImage.noFill();\n        flameImage.stroke(p.color(HUE, 1, 0.5, 0.9));\n        flameImage.strokeWeight(8);\n\n        flameImage.point(\n          p.width - (p.width / 2) * r - 8,\n          y + noise2D(y / 50, p.sin(theta))\n        );\n      }\n      flameImage.endShape();\n    }\n\n    const flames = flameImage.get();\n    flames.mask(maskImage);\n    p.translate(p.width / 2, p.height / 2);\n    p.rotate(theta);\n    for (let i = 0; i < PETAL_COUNT; i++) {\n      p.push();\n      p.scale(i % 2 ? 1 : -1, 1);\n      p.rotate((p.TWO_PI / PETAL_COUNT) * i);\n      p.image(flames, -p.width / 2, -p.height / 2);\n      p.pop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/08/17.js"],"names":["RENDER","process","DEV","sketch","p","GRID","HUE_RANGE","random","boxes","Box","x","y","this","canvas","createGraphics","colorMode","HSB","rotate","TWO_PI","offset","noise","draw","animLoop","noise2D","theta","loopPosition","lineX","map","hue","sin","dist","width","height","push","translate","background","stroke","strokeWeight","line","pop","image","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","render","open","noiseRadius","forEach","b","SketchPage"],"mappings":"6FAAA,wDAKMA,GALN,UAKeC,GAAYC,MAAO,GAE5BC,EAAS,SAASC,GACtB,IAAMC,EAAO,GACPC,EAAYF,EAAEG,OAAO,IAEvBC,EAAQ,GAENC,EANmB,WAOvB,WAAYC,EAAGC,GACbC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKC,OAAST,EAAEU,eAAeT,EAAMA,GACrCO,KAAKC,OAAOE,UAAUX,EAAEY,IAAK,GAC7BJ,KAAKK,OAAUb,EAAEc,OAAS,EAAKd,EAAEG,OAAO,CAAC,EAAG,EAAG,EAAG,IAClDK,KAAKO,OAASf,EAAEgB,MAAMV,EAAGC,GAAKP,EAAEc,OAbX,mBAgBvBG,KAAA,WAAQ,IAAD,EACsBjB,EAAEkB,SAArBC,EADH,EACGA,QAASC,EADZ,EACYA,MACXC,EACJD,EAAQZ,KAAKO,OAASf,EAAEc,OACpBM,EAAQZ,KAAKO,OAASf,EAAEc,OACxBM,EAAQZ,KAAKO,OACbO,EAAQtB,EAAEuB,IACdF,EACA,EACArB,EAAEc,QACDb,EAAO,EAAIA,EACZA,EAAO,EAAIA,GAEPuB,EAAMxB,EAAEuB,IACZJ,EACEnB,EAAEyB,IAAIL,GACNpB,EAAE0B,KAAK1B,EAAE2B,MAAQ,EAAG3B,EAAE4B,OAAS,EAAGpB,KAAKF,EAAGE,KAAKD,KAEhD,EACD,EACAL,EACAA,EAAY,IAGdM,KAAKC,OAAOoB,OACZrB,KAAKC,OAAOqB,UAAU7B,EAAO,EAAGA,EAAO,GACvCO,KAAKC,OAAOI,OAAOL,KAAKK,QACxBL,KAAKC,OAAOsB,WAAWP,EAAK,EAAG,KAC/BhB,KAAKC,OAAOuB,OAAOR,EAAK,GAAK,KAC7BhB,KAAKC,OAAOwB,aAAahC,GACzBO,KAAKC,OAAOyB,KAAKZ,GAAQrB,EAAMqB,EAAOrB,GACtCO,KAAKC,OAAO0B,MAEZnC,EAAEoC,MAAM5B,KAAKC,OAAQD,KAAKF,EAAGE,KAAKD,IAjDb,KAqDzBP,EAAEqC,MAAQ,WACJzC,IACFI,EAAEsC,aAAa,GACftC,EAAEuC,UAAU,KAGdvC,EAAEwC,aAAa,IAAK,KAEpBxC,EAAEyC,WAAW,EAAG,CACdC,MAAK9C,GAAS,CAAE+C,QAAQ,EAAOC,MAAM,GACrCC,YAAa,KAGf,IAAK,IAAIvC,EAAI,EAAGA,EAAIN,EAAE2B,MAAOrB,GAAKL,EAChC,IAAK,IAAIM,EAAI,EAAGA,EAAIP,EAAE4B,OAAQrB,GAAKN,EACjCG,EAAMyB,KAAK,IAAIxB,EAAIC,EAAGC,KAK5BP,EAAEiB,KAAO,WACPjB,EAAE+B,WAAW,KAEb3B,EAAM0C,SAAQ,SAAAC,GAAC,OAAIA,EAAE9B,YAUV+B,UANI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQjD,OAAQA","file":"component---src-pages-sketch-2019-08-17-js-74f5a9bd04809410b748.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const GRID = 60;\n  const HUE_RANGE = p.random(0.8);\n\n  let boxes = [];\n\n  class Box {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.canvas = p.createGraphics(GRID, GRID);\n      this.canvas.colorMode(p.HSB, 1);\n      this.rotate = (p.TWO_PI / 8) * p.random([1, 3, 5, 7]);\n      this.offset = p.noise(x, y) * p.TWO_PI;\n    }\n\n    draw() {\n      const { noise2D, theta } = p.animLoop;\n      const loopPosition =\n        theta + this.offset > p.TWO_PI\n          ? theta + this.offset - p.TWO_PI\n          : theta + this.offset;\n      const lineX = p.map(\n        loopPosition,\n        0,\n        p.TWO_PI,\n        -GRID / 2 - GRID,\n        GRID / 2 + GRID\n      );\n      const hue = p.map(\n        noise2D(\n          p.sin(theta),\n          p.dist(p.width / 2, p.height / 2, this.x, this.y)\n        ),\n        -1,\n        1,\n        HUE_RANGE,\n        HUE_RANGE + 0.2\n      );\n\n      this.canvas.push();\n      this.canvas.translate(GRID / 2, GRID / 2);\n      this.canvas.rotate(this.rotate);\n      this.canvas.background(hue, 1, 0.25);\n      this.canvas.stroke(hue, 0.5, 0.75);\n      this.canvas.strokeWeight(GRID);\n      this.canvas.line(lineX, -GRID, lineX, GRID);\n      this.canvas.pop();\n\n      p.image(this.canvas, this.x, this.y);\n    }\n  }\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n\n    p.createLoop(5, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.3,\n    });\n\n    for (let x = 0; x < p.width; x += GRID) {\n      for (let y = 0; y < p.height; y += GRID) {\n        boxes.push(new Box(x, y));\n      }\n    }\n  };\n\n  p.draw = function() {\n    p.background(255);\n\n    boxes.forEach(b => b.draw());\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n  </Layout>\n);\n\nexport default SketchPage;\n"],"sourceRoot":""}
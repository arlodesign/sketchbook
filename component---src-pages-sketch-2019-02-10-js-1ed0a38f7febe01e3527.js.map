{"version":3,"sources":["webpack:///./src/pages/sketch/2019/02/10.js"],"names":["sketch","p","x","y","setup","createCanvas","background","noFill","strokeWeight","draw","angle","random","stroke","apply","map","noise","dist","width","height","TWO_PI","max","abs","sin","cos","PI","tan","blendMode","frameCount","SOFT_LIGHT","HARD_LIGHT","beginShape","vertex","bezierVertex","endShape","CLOSE","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname"],"mappings":"8HAGMA,EAAS,SAASC,GACtB,IAAIC,EAAI,EACJC,EAAI,EAURF,EAAEG,MAAQ,WACRH,EAAEI,aAAa,IAAK,KACpBJ,EAAEK,WAAW,KACbL,EAAEM,SACFN,EAAEO,aAAa,IAGjBP,EAAEQ,KAAO,WAfT,IAAkBC,EAgBZT,EAAEU,SAAW,KACfV,EAAEW,OAAFC,MAAAZ,GAjBcS,EAmBVT,EAAEa,IACAb,EAAEc,MAAMd,EAAEe,KAAKd,EAAGC,EAAGF,EAAEgB,MAAQ,EAAGhB,EAAEiB,OAAS,IAC7C,EACA,EACA,EACAjB,EAAEkB,QAvBH,CACLlB,EAAEmB,IAAI,GAA0B,IAAtBnB,EAAEoB,IAAIpB,EAAEqB,IAAIZ,KACtBT,EAAEmB,IAAI,GAAkC,IAA9BnB,EAAEoB,IAAIpB,EAAEsB,KAAKb,EAAQT,EAAEuB,MACjCvB,EAAEmB,IAAI,GAAiC,IAA7BnB,EAAEoB,IAAIpB,EAAEwB,IAAIf,EAAQT,EAAEuB,SAwBhCvB,EAAEyB,UAAUzB,EAAE0B,WAAa,EAAI1B,EAAE2B,WAAa3B,EAAE4B,YAChD5B,EAAE6B,aACF7B,EAAE8B,OAAO7B,EAAGC,GACZF,EAAE+B,aACA/B,EAAEgB,MAAQ,EACVhB,EAAEiB,OACFjB,EAAEgB,MAAQ,EACVhB,EAAEiB,OACFjB,EAAEgB,MAAQf,EACVC,GAEFF,EAAE+B,aACA,EACA/B,EAAEiB,OAAS,EACX,EACAjB,EAAEiB,OAAS,EACXjB,EAAEgB,MAAQf,EACVD,EAAEiB,OAASf,GAEbF,EAAE+B,aAAa/B,EAAEgB,MAAQ,EAAG,EAAGhB,EAAEgB,MAAQ,EAAG,EAAGf,EAAGD,EAAEiB,OAASf,GAC7DF,EAAE+B,aAAa/B,EAAEgB,MAAOhB,EAAEiB,OAAS,EAAGjB,EAAEgB,MAAOhB,EAAEiB,OAAS,EAAGhB,EAAGC,GAChEF,EAAEgC,SAAShC,EAAEiC,SAEf/B,GAAK,GACGF,EAAEiB,OAAS,IACjBf,EAAI,EACJD,GAAK,GAEHA,EAAID,EAAEgB,MAAQ,GAChBhB,EAAEkC,WAKOC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAczC,OAAQA,EAAQ0C,KAAMJ,EAASK","file":"component---src-pages-sketch-2019-02-10-js-1ed0a38f7febe01e3527.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  let x = 0;\n  let y = 0;\n\n  function getColor(angle) {\n    return [\n      p.max(15, p.abs(p.sin(angle)) * 240),\n      p.max(15, p.abs(p.cos(-angle + p.PI)) * 240),\n      p.max(15, p.abs(p.tan(angle + p.PI)) * 240),\n    ];\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(127);\n    p.noFill();\n    p.strokeWeight(2);\n  };\n\n  p.draw = function() {\n    if (p.random() < 0.2) {\n      p.stroke(\n        ...getColor(\n          p.map(\n            p.noise(p.dist(x, y, p.width / 2, p.height / 2)),\n            0,\n            1,\n            0,\n            p.TWO_PI\n          )\n        )\n      );\n      p.blendMode(p.frameCount % 3 ? p.SOFT_LIGHT : p.HARD_LIGHT);\n      p.beginShape();\n      p.vertex(x, y);\n      p.bezierVertex(\n        p.width / 2,\n        p.height,\n        p.width / 2,\n        p.height,\n        p.width - x,\n        y\n      );\n      p.bezierVertex(\n        0,\n        p.height / 2,\n        0,\n        p.height / 2,\n        p.width - x,\n        p.height - y\n      );\n      p.bezierVertex(p.width / 2, 0, p.width / 2, 0, x, p.height - y);\n      p.bezierVertex(p.width, p.height / 2, p.width, p.height / 2, x, y);\n      p.endShape(p.CLOSE);\n    }\n    y += 2;\n    if (y > p.height / 2) {\n      y = 0;\n      x += 2;\n    }\n    if (x > p.width / 2) {\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} />\n);\n"],"sourceRoot":""}
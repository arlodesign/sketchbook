{"version":3,"sources":["webpack:///./src/pages/sketch/2020/02/16.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/easing.js"],"names":["sketch","p","cols","rows","gridWidth","gridHeight","RENDER","getURLParams","render","HEX_WIDTH","floor","sqrt","hexagons","prevMod","MASK","createGraphics","HEX_RADIUS","stroke","fill","beginShape","translate","width","height","a","TWO_PI","vertex","polarToCartesian","endShape","Hexagon","x","y","this","rotate","random","map","i","dir","turning","canvas","noStroke","draw","turn","theta","animLoop","turnVal","background","push","ease","arc","HEX_HEIGHT","PI","pop","img","get","mask","image","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","open","noiseRadius","hexX","hexY","forEach","hex","location","path","pathname","description","polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"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","file":"component---src-pages-sketch-2020-02-16-js-c81277b3b16803b7c8fa.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport { easeInOutQuint as ease } from \"~lib/easing\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const DURATION = 30;\n  const RATE = 30;\n  const HEX_RADIUS = 30;\n  const HEX_WIDTH = p.floor(p.sqrt(3) * HEX_RADIUS);\n  const HEX_HEIGHT = HEX_RADIUS * 2;\n\n  let hexagons = [];\n  let cols;\n  let rows;\n  let gridWidth;\n  let gridHeight;\n  let prevMod = 0;\n\n  const MASK = p.createGraphics(HEX_WIDTH, HEX_HEIGHT);\n  MASK.stroke(0);\n  MASK.fill(0);\n  MASK.beginShape();\n  MASK.translate(MASK.width / 2, MASK.height / 2);\n  for (let a = 0; a < p.TWO_PI; a += p.TWO_PI / 6) {\n    MASK.vertex(...polarToCartesian(0, 0, a + p.TWO_PI / 12, HEX_RADIUS, true));\n  }\n  MASK.endShape();\n\n  class Hexagon {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.rotate = p.random(\n        [0, 1, 2, 3, 4, 5].map(i => (p.TWO_PI / 6) * i + p.TWO_PI / 12)\n      );\n      this.dir = p.random([1, -1]);\n      this.turning = false;\n\n      this.canvas = p.createGraphics(HEX_WIDTH, HEX_HEIGHT);\n      this.canvas.noStroke();\n      this.canvas.fill(0);\n    }\n\n    draw(turn) {\n      const { theta } = p.animLoop;\n\n      if (turn) {\n        this.rotate += (p.TWO_PI / 6) * this.dir;\n      }\n\n      const turnVal = p.map(theta % (p.TWO_PI / 6), 0, p.TWO_PI / 6, 0, 1);\n\n      this.canvas.background(255);\n      this.canvas.push();\n      this.canvas.translate(this.canvas.width / 2, this.canvas.height / 2);\n\n      this.canvas.rotate(\n        p.map(\n          ease(turnVal),\n          0,\n          1,\n          this.rotate,\n          this.rotate + (p.TWO_PI / 6) * this.dir\n        )\n      );\n      this.canvas.arc(0, 0, HEX_HEIGHT * 2, HEX_HEIGHT * 2, 0, p.PI);\n      this.canvas.pop();\n\n      const img = this.canvas.get();\n      img.mask(MASK);\n\n      p.image(img, this.x - HEX_WIDTH / 2, this.y - HEX_HEIGHT / 2);\n    }\n  }\n\n  p.setup = function() {\n    p.pixelDensity(1);\n    p.frameRate(RATE);\n    p.createCanvas(660, 840);\n    p.createLoop(DURATION, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.5,\n    });\n\n    cols = p.floor((p.width - HEX_WIDTH / 2) / HEX_WIDTH);\n    rows = p.floor((p.width - HEX_HEIGHT / 4) / (HEX_HEIGHT * 0.75));\n    gridWidth = cols * HEX_WIDTH + HEX_WIDTH / 2;\n    gridHeight = rows * (HEX_HEIGHT * 0.75) + HEX_HEIGHT / 4;\n\n    for (let x = 0; x < cols; x++) {\n      for (let y = 0; y < rows; y++) {\n        const hexX =\n          x * HEX_WIDTH +\n          (y % 2 ? HEX_WIDTH : HEX_WIDTH / 2) +\n          (p.width - gridWidth) / 2;\n        const hexY =\n          y * HEX_HEIGHT * 0.75 + HEX_HEIGHT / 2 + (p.height - gridHeight) / 2;\n        hexagons.push(new Hexagon(hexX, hexY));\n      }\n    }\n  };\n\n  p.draw = function() {\n    p.background(255);\n    hexagons.forEach(hex =>\n      hex.draw(p.animLoop.theta % (p.TWO_PI / 6) <= prevMod)\n    );\n    prevMod = p.animLoop.theta % (p.TWO_PI / 6);\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/01/17.js"],"names":["sketch","p","drawing","circles","viewGuides","speeds","Array","fill","map","_","i","guideColor","alpha","color","setup","createCanvas","createGraphics","width","height","THIS_SPEED","random","THIS_SIZE","filter","s","push","r","HALF_PI","speed","TWO_PI","size","direction","lastPoint","draw","background","frameRate","image","axis","x","y","forEach","c","X","cos","Y","sin","ALPHA","circleCount","noFill","stroke","strokeWeight","ellipse","noStroke","l","line","mousePressed","location","path","pathname","description"],"mappings":"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","file":"component---src-pages-sketch-2019-01-17-js-c2620ac87695258a1828.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  let circleCount = 3;\n  let circles = [];\n  let viewGuides = false;\n  let drawing;\n  let speeds = new Array(50).fill().map((_, i) => (i + 1) / 50);\n  let speed;\n  let maxWidth = 0;\n\n  function guideColor(alpha) {\n    return p.color(255, 0, 0, alpha);\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    drawing = p.createGraphics(p.width, p.height);\n    for (let i = 0; i < circleCount; i++) {\n      const THIS_SPEED = p.random(speeds);\n      const THIS_SIZE = (p.width / circleCount) * p.random(0.5, 1.5);\n      speeds = speeds.filter(s => s !== THIS_SPEED);\n      circles.push({\n        r: p.HALF_PI * 3,\n        speed: THIS_SPEED / p.TWO_PI,\n        size: THIS_SIZE,\n        direction: p.random([1, -1]),\n        lastPoint: null,\n      });\n      maxWidth += THIS_SIZE / 2;\n    }\n    maxWidth -= circles[0].size;\n  };\n\n  p.draw = function() {\n    p.background(255);\n    p.frameRate(viewGuides ? 15 : 30);\n    p.image(drawing, 0, 0);\n    let axis = {\n      x: p.width / 2,\n      y: p.height / 2,\n    };\n    circles.forEach((c, i) => {\n      const X = i % 3 ? axis.x + p.cos(c.r) * (c.size / 2) : axis.x;\n      const Y = i % 2 ? axis.y : axis.y + p.sin(c.r) * (c.size / 2);\n      if (viewGuides) {\n        const ALPHA = p.map(i, 0, circleCount - 1, 255 / 5, 255);\n        p.noFill();\n        p.stroke(255, 255, 255, ALPHA);\n        p.strokeWeight(5);\n        p.ellipse(axis.x, axis.y, i % 3 ? c.size : 1, i % 2 ? 1 : c.size);\n        p.stroke(guideColor(ALPHA));\n        p.strokeWeight(1);\n        p.ellipse(axis.x, axis.y, i % 3 ? c.size : 1, i % 2 ? 1 : c.size);\n        p.noStroke();\n        p.fill(255, 255, 255, ALPHA);\n        p.ellipse(X, Y, i === circleCount - 1 ? 12 : 6);\n        p.fill(guideColor(ALPHA));\n        p.ellipse(X, Y, i === circleCount - 1 ? 6 : 3);\n      }\n      if (i === circleCount - 1 && c.lastPoint) {\n        if (X >= 0 && X <= p.width && Y >= 0 && Y <= p.height) {\n          for (let l = 0; l < 1; l += 0.01) {\n            drawing.line(X, Y, c.lastPoint.x, c.lastPoint.y);\n          }\n        }\n      }\n      axis = {\n        x: X,\n        y: Y,\n      };\n      circles[i].lastPoint = axis;\n      circles[i].r += c.speed * circles[i].direction;\n    });\n  };\n\n  p.mousePressed = function() {\n    viewGuides = !viewGuides;\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"\n      Reload page for a different variation. Click or tap sketch to toggle\n      guides.\n    \"\n  />\n);\n"],"sourceRoot":""}
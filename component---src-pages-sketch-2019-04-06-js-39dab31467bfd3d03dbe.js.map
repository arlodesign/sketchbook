{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/06.js"],"names":["sketch","p","Particle","x","this","location","noiseVal","random","_proto","prototype","update","frameCount","height","map","noise","draw","noStroke","fill","rect","apply","concat","particles","setup","createCanvas","background","colorMode","HSB","blendMode","DIFFERENCE","rectMode","CENTER","width","push","forEach","particle","noLoop","__webpack_exports__","_ref","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description"],"mappings":"sIAGMA,EAAS,SAASC,GAAG,IACnBC,EADmB,WAEvB,SAAAA,EAAYC,GACVC,KAAKC,SAAW,CAACF,EAAG,GACpBC,KAAKE,SAAWL,EAAEM,OAAO,CAACN,EAAEM,OAAO,EAAG,IAAKN,EAAEM,OAAO,GAAI,OAJnC,IAAAC,EAAAN,EAAAO,UAAA,OAAAD,EAMvBE,OAAA,WACEN,KAAKC,SAAS,GAAKJ,EAAEU,WAAaV,EAAEW,OACpCR,KAAKC,SAAS,IAAMJ,EAAEY,IACpBZ,EAAEa,MAAMV,KAAKE,SAAUF,KAAKC,SAAS,GAAIJ,EAAEU,YAC3C,EACA,GACC,EACD,IAbmBH,EAgBvBO,KAAA,WACEd,EAAEe,WACFf,EAAEgB,KAAKb,KAAKE,SAAU,GAAI,GAAI,IAC9BL,EAAEiB,KAAFC,MAAAlB,EAAUG,KAAKC,SAAde,OAAA,CAAwB,GAAK,QAnBTlB,EAAA,GAuBrBmB,EAAY,GAEhBpB,EAAEqB,MAAQ,WACRrB,EAAEsB,aAAa,IAAK,KACpBtB,EAAEuB,WAAW,IACbvB,EAAEwB,UAAUxB,EAAEyB,IAAK,KACnBzB,EAAE0B,UAAU1B,EAAE2B,YACd3B,EAAE4B,SAAS5B,EAAE6B,QACb,IAAK,IAAI3B,GAAK,IAAKA,EAAIF,EAAE8B,MAAQ,IAAK5B,GAAK,EACzCkB,EAAUW,KAAK,IAAI9B,EAASC,KAIhCF,EAAEc,KAAO,WACPM,EAAUY,QAAQ,SAAAC,GAChBA,EAASnB,OACTmB,EAASxB,WAEPT,EAAEU,WAAwB,EAAXV,EAAEW,QAAYX,EAAEkC,WAIxBC,EAAA,iBAAAC,GAAA,IAAGhC,EAAHgC,EAAGhC,SAAH,OACbiC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAcxC,OAAQA,EAAQyC,KAAMpC,EAASqC,SAAUC,YAAY","file":"component---src-pages-sketch-2019-04-06-js-39dab31467bfd3d03dbe.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  class Particle {\n    constructor(x) {\n      this.location = [x, 0];\n      this.noiseVal = p.random([p.random(0, 20), p.random(80, 100)]);\n    }\n    update() {\n      this.location[1] = p.frameCount % p.height;\n      this.location[0] += p.map(\n        p.noise(this.noiseVal, this.location[1], p.frameCount),\n        0,\n        1,\n        -1,\n        1\n      );\n    }\n    draw() {\n      p.noStroke();\n      p.fill(this.noiseVal, 75, 90, 10);\n      p.rect(...this.location, 0.5, 100);\n    }\n  }\n\n  let particles = [];\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(32);\n    p.colorMode(p.HSB, 100);\n    p.blendMode(p.DIFFERENCE);\n    p.rectMode(p.CENTER);\n    for (let x = -100; x < p.width + 100; x += 5) {\n      particles.push(new Particle(x));\n    }\n  };\n\n  p.draw = function() {\n    particles.forEach(particle => {\n      particle.draw();\n      particle.update();\n    });\n    if (p.frameCount > p.height * 3) p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/12/02.js","webpack:///./src/lib/lerpLine.js"],"names":["sketch","p","RENDER","getURLParams","render","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","open","noiseRadius","strokeWeight","draw","blendMode","BLEND","background","MULTIPLY","animLoop","theta","noise1D","translate","width","stroke","y","height","lerpLine","sin","map","TWO_PI","cos","location","path","pathname","description","x1","y1","x2","y2","rate","showFirstDot","noisy","thisRate","Math","max","dist","l","random","point","lerp"],"mappings":"+FAAA,qEAKMA,EAAS,SAASC,GACtB,IAAMC,EAASD,EAAEE,eAAeC,OAEhCH,EAAEI,MAAQ,WACJH,IACFD,EAAEK,aAAa,GACfL,EAAEM,UAAU,KAGdN,EAAEO,aAAa,IAAK,KACpBP,EAAEQ,WAAW,GAAI,CACfC,MAAKR,GAAS,CAAEE,QAAQ,EAAOO,MAAM,GACrCC,YAAa,KAEfX,EAAEY,aAAa,IAGjBZ,EAAEa,KAAO,WACPb,EAAEc,UAAUd,EAAEe,OACdf,EAAEgB,WAAW,KACbhB,EAAEc,UAAUd,EAAEiB,UAHI,MAKSjB,EAAEkB,SAArBC,EALU,EAKVA,MAAOC,EALG,EAKHA,QAEfpB,EAAEqB,UAAUrB,EAAEsB,MAAQ,EAAG,GAEzBtB,EAAEuB,OAAO,QACT,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,EAAEyB,OAAQD,GAAK,EACjCE,YACE1B,EACAA,EAAEsB,MACAtB,EAAE2B,IAAY,EAARR,EAAYnB,EAAE4B,IAAIJ,EAAG,EAAGxB,EAAEyB,OAAQ,EAAGzB,EAAE6B,SAC7CT,EAAQ,IACVI,EACAxB,EAAEsB,OACCtB,EAAE8B,IAAY,EAARX,EAAYnB,EAAE4B,IAAIJ,EAAG,EAAGxB,EAAEyB,OAAQ,EAAGzB,EAAE6B,SAC9CT,EAAQ,IACVI,EACAxB,EAAE4B,IAAI5B,EAAE8B,IAAY,EAARX,IAAa,EAAG,EAAG,IAAM,MACrC,GACA,GAIJnB,EAAEuB,OAAO,WACT,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,EAAEyB,OAAQD,GAAK,EACjCE,YACE1B,EACAA,EAAEsB,OACCtB,EAAE8B,IAAY,EAARX,EAAYnB,EAAE4B,IAAIJ,EAAG,EAAGxB,EAAEyB,OAAQ,EAAGzB,EAAE6B,SAC9CT,EAAQ,IACVI,EACAxB,EAAEsB,MACAtB,EAAE2B,IAAY,EAARR,EAAYnB,EAAE4B,IAAIJ,EAAG,EAAGxB,EAAEyB,OAAQ,EAAGzB,EAAE6B,SAC7CT,EAAQ,IACVI,EACA,KACA,GACA,GAIJxB,EAAEuB,OAAO,UACT,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,EAAEyB,OAAQD,GAAK,EACjCE,YACE1B,EACAA,EAAEsB,OACCtB,EAAE2B,IAAY,EAARR,EAAYnB,EAAE4B,IAAIJ,EAAG,EAAGxB,EAAEyB,OAAQ,EAAGzB,EAAE6B,SAC9CT,EAAQ,IACVI,EACAxB,EAAEsB,MACAtB,EAAE8B,IAAY,EAARX,EAAYnB,EAAE4B,IAAIJ,EAAG,EAAGxB,EAAEyB,OAAQ,EAAGzB,EAAE6B,SAC7CT,EAAQ,IACVI,EACA,KACA,GACA,KAMO,0BAAGO,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAchC,OAAQA,EAAQiC,KAAMD,EAASE,SAAUC,YAAY,O,oCC5EtD,aACblC,EACAmC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QACA,IAFAD,OAAe,QAEf,IADAC,OAAQ,GAIR,IAFA,IAAMC,EAAWC,KAAKC,IAAIL,EAAM,IAAOvC,EAAE6C,KAAKV,EAAIC,EAAIC,EAAIC,IAEjDQ,EAAI,EAAGA,EAAI,EAAGA,GAAKJ,GAChB,IAANI,GAAYN,KACXC,GAASzC,EAAE+C,SAAWD,IAAOL,IAChCzC,EAAEgD,MAAMhD,EAAEiD,KAAKd,EAAIE,EAAIS,GAAI9C,EAAEiD,KAAKb,EAAIE,EAAIQ","file":"component---src-pages-sketch-2019-12-02-js-5ed054c8fb29dd79e089.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n    p.createLoop(30, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n    p.strokeWeight(2);\n  };\n\n  p.draw = function() {\n    p.blendMode(p.BLEND);\n    p.background(255);\n    p.blendMode(p.MULTIPLY);\n\n    const { theta, noise1D } = p.animLoop;\n\n    p.translate(p.width / 2, 0);\n\n    p.stroke(\"cyan\");\n    for (let y = 0; y < p.height; y += 3) {\n      lerpLine(\n        p,\n        p.width *\n          p.sin(theta * 3 + p.map(y, 0, p.height, 0, p.TWO_PI)) *\n          noise1D(10),\n        y,\n        p.width *\n          -p.cos(theta * 7 + p.map(y, 0, p.height, 0, p.TWO_PI)) *\n          noise1D(20),\n        y,\n        p.map(p.cos(theta * 3), -1, 1, 0.02, 0.03),\n        false,\n        false\n      );\n    }\n\n    p.stroke(\"magenta\");\n    for (let y = 0; y < p.height; y += 3) {\n      lerpLine(\n        p,\n        p.width *\n          -p.cos(theta * 5 + p.map(y, 0, p.height, 0, p.TWO_PI)) *\n          noise1D(30),\n        y,\n        p.width *\n          p.sin(theta * 3 + p.map(y, 0, p.height, 0, p.TWO_PI)) *\n          noise1D(40),\n        y,\n        0.03,\n        true,\n        false\n      );\n    }\n\n    p.stroke(\"yellow\");\n    for (let y = 0; y < p.height; y += 3) {\n      lerpLine(\n        p,\n        p.width *\n          -p.sin(theta * 7 + p.map(y, 0, p.height, 0, p.TWO_PI)) *\n          noise1D(50),\n        y,\n        p.width *\n          p.cos(theta * 2 + p.map(y, 0, p.height, 0, p.TWO_PI)) *\n          noise1D(60),\n        y,\n        0.03,\n        true,\n        false\n      );\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","/**\n * Creates a line of points at a specified interval (the rate)\n *\n * @param {obj} p The current p5.js drawing context\n * @param {*} x1\n * @param {*} y1\n * @param {*} x2\n * @param {*} y2\n * @param {*} rate Number between 0 and 1 to determine how often to draw a point\n * @param {*} showFirstDot Defaults to true\n * @param {*} noisy Defaults to true\n */\nexport default function(\n  p,\n  x1,\n  y1,\n  x2,\n  y2,\n  rate,\n  showFirstDot = true,\n  noisy = true\n) {\n  const thisRate = Math.max(rate, 0.01 / p.dist(x1, y1, x2, y2));\n\n  for (let l = 0; l < 1; l += thisRate) {\n    if (l === 0 && !showFirstDot) continue;\n    if ((noisy && p.random() > l) || !noisy) {\n      p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n    }\n  }\n}\n"],"sourceRoot":""}
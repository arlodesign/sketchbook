{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/12.js"],"names":["sketch","p","random","GRID","LINES","Doodad","x","y","this","drawFunc","squareH","squareV","arc","triangle","push","strokeCap","SQUARE","translate","i","line","pop","PROJECT","rotate","HALF_PI","PI","setup","createCanvas","background","noLoop","noFill","stroke","draw","width","height","rect","location","path","pathname","description"],"mappings":"8HAGMA,EAAS,SAASC,GAAI,IAAD,EACDA,EAAEC,OAAO,CAC/B,CACEC,KAAM,GACNC,MAAO,GAET,CACED,KAAM,GACNC,MAAO,GAET,CACED,KAAM,GACNC,MAAO,KAXHD,EADiB,EACjBA,KAAMC,EADW,EACXA,MAgBRC,EAjBmB,WAkBvB,WAAYC,EAAGC,GACbC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKC,SAAWR,EAAEC,OAAO,CACvBM,KAAKE,QACLF,KAAKG,QACLH,KAAKI,IACLJ,KAAKK,WAEPL,KAAKC,WA3BgB,2BA6BvBC,QAAA,WACET,EAAEa,OACFb,EAAEc,UAAUd,EAAEe,QACdf,EAAEgB,UAAUT,KAAKF,EAAGE,KAAKD,GACzB,IAAK,IAAIW,EAAI,EAAGA,GAAKf,EAAMe,GAAKf,EAAOC,EACrCH,EAAEkB,KAAK,EAAGD,EAnBM,GAmBaf,EAAMe,EAnBnB,IAqBlBjB,EAAEmB,OApCmB,EAsCvBT,QAAA,WACEV,EAAEa,OACFb,EAAEc,UAAUd,EAAEe,QACdf,EAAEgB,UAAUT,KAAKF,EAAGE,KAAKD,GACzB,IAAK,IAAIW,EAAI,EAAGA,GAAKf,EAAMe,GAAKf,EAAOC,EACrCH,EAAEkB,KAAKD,EA5BS,GA4BU,EAAGA,EA5Bb,GA4BgCf,GAElDF,EAAEmB,OA7CmB,EA+CvBR,IAAA,WACEX,EAAEa,OACFb,EAAEc,UAAUd,EAAEoB,SACdpB,EAAEgB,UAAUT,KAAKF,EAAIH,EAAO,EAAGK,KAAKD,EAAIJ,EAAO,GAC/CF,EAAEqB,OAAOrB,EAAEC,OAAO,CAAC,EAAGD,EAAEsB,QAAStB,EAAEuB,GAAIvB,EAAEsB,QAAUtB,EAAEuB,MACrD,IAAK,IAAIN,EAAI,EAAGA,GAAY,EAAPf,EAAUe,GAAa,EAAPf,EAAYC,EAC/CH,EAAEW,KAAKT,EAAO,GAAIA,EAAO,EAAGe,EAAGA,EAAG,EAAGjB,EAAEsB,SAEzCtB,EAAEmB,OAvDmB,EAyDvBP,SAAA,WACEZ,EAAEa,OACFb,EAAEgB,UAAUT,KAAKF,EAAIH,EAAO,EAAGK,KAAKD,EAAIJ,EAAO,GAC/CF,EAAEqB,OAAOrB,EAAEC,OAAO,CAAC,EAAGD,EAAEsB,QAAStB,EAAEuB,GAAIvB,EAAEsB,QAAUtB,EAAEuB,MACrD,IAAK,IAAIN,GAAKf,EAAO,EAAIA,EAAOC,EAAOc,GAAKf,EAAO,EAAGe,GAAKf,EAAOC,EAChEH,EAAEkB,MACCD,EAhDa,IAiDbf,EAAO,EAjDM,GAkDdA,EAAO,EAlDO,GAmDde,EAnDc,IAsDlBjB,EAAEmB,OArEmB,KAyEzBnB,EAAEwB,MAAQ,WACRxB,EAAEyB,aAAa,IAAK,KACpBzB,EAAE0B,WAAW,KACb1B,EAAE2B,SACF3B,EAAE4B,SACF5B,EAAE6B,OA/DkB,KAkEtB7B,EAAE8B,KAAO,WACP,IAAK,IAAIzB,EAAI,EAAGA,EAAIL,EAAE+B,MAAO1B,GAAKH,EAChC,IAAK,IAAII,EAAI,EAAGA,EAAIN,EAAEgC,OAAQ1B,GAAKJ,EACjC,IAAIE,EAAOC,EAAGC,GAGlBN,EAAEiC,KAAK,EAAG,EAAGjC,EAAE+B,MAAO/B,EAAEgC,UAIb,0BAAGE,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcnC,OAAQA,EAAQoC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-04-12-js-a71e10cf1f668628802a.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const { GRID, LINES } = p.random([\n    {\n      GRID: 15,\n      LINES: 3,\n    },\n    {\n      GRID: 30,\n      LINES: 4,\n    },\n    {\n      GRID: 60,\n      LINES: 5,\n    },\n  ]);\n  const STROKE_WEIGHT = 0.5;\n\n  class Doodad {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.drawFunc = p.random([\n        this.squareH,\n        this.squareV,\n        this.arc,\n        this.triangle,\n      ]);\n      this.drawFunc();\n    }\n    squareH() {\n      p.push();\n      p.strokeCap(p.SQUARE);\n      p.translate(this.x, this.y);\n      for (let i = 0; i <= GRID; i += GRID / LINES) {\n        p.line(0, i - STROKE_WEIGHT, GRID, i - STROKE_WEIGHT);\n      }\n      p.pop();\n    }\n    squareV() {\n      p.push();\n      p.strokeCap(p.SQUARE);\n      p.translate(this.x, this.y);\n      for (let i = 0; i <= GRID; i += GRID / LINES) {\n        p.line(i - STROKE_WEIGHT, 0, i - STROKE_WEIGHT, GRID);\n      }\n      p.pop();\n    }\n    arc() {\n      p.push();\n      p.strokeCap(p.PROJECT);\n      p.translate(this.x + GRID / 2, this.y + GRID / 2);\n      p.rotate(p.random([0, p.HALF_PI, p.PI, p.HALF_PI + p.PI]));\n      for (let i = 0; i <= GRID * 2; i += (GRID * 2) / LINES) {\n        p.arc(-GRID / 2, -GRID / 2, i, i, 0, p.HALF_PI);\n      }\n      p.pop();\n    }\n    triangle() {\n      p.push();\n      p.translate(this.x + GRID / 2, this.y + GRID / 2);\n      p.rotate(p.random([0, p.HALF_PI, p.PI, p.HALF_PI + p.PI]));\n      for (let i = -GRID / 2 + GRID / LINES; i <= GRID / 2; i += GRID / LINES) {\n        p.line(\n          -i - STROKE_WEIGHT,\n          -GRID / 2 - STROKE_WEIGHT,\n          GRID / 2 - STROKE_WEIGHT,\n          i - STROKE_WEIGHT\n        );\n      }\n      p.pop();\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(255);\n    p.noLoop();\n    p.noFill();\n    p.stroke(STROKE_WEIGHT);\n  };\n\n  p.draw = function() {\n    for (let x = 0; x < p.width; x += GRID) {\n      for (let y = 0; y < p.height; y += GRID) {\n        new Doodad(x, y);\n      }\n    }\n    p.rect(0, 0, p.width, p.height);\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/04.js"],"names":["sketch","p","HUE","random","SPEED_CENTER","TWO_PI","SPEED_RIGHT","SPEED_LEFT","aCenter","aRight","PI","aLeft","setup","createCanvas","background","noFill","strokeWeight","colorMode","HSB","blendMode","HARD_LIGHT","draw","stroke","map","sin","cos","triangle","width","noise","frameCount","height","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description"],"mappings":"+HAGMA,EAAS,SAASC,GACtB,IAAMC,EAAMD,EAAEE,OAAO,GAAI,IAEnBC,EAAeH,EAAEE,OAAO,IAAM,KAAQF,EAAEI,OACxCC,EAAcL,EAAEE,OAAO,IAAM,KAAQF,EAAEI,OACvCE,EAAaN,EAAEE,OAAO,IAAM,KAAQF,EAAEI,OAExCG,EAAU,EACVC,EAASR,EAAES,GACXC,EAAQ,EAEZV,EAAEW,MAAQ,WACRX,EAAEY,aAAa,IAAK,KACpBZ,EAAEa,WAAW,IACbb,EAAEc,SACFd,EAAEe,aAAa,IACff,EAAEgB,UAAUhB,EAAEiB,IAAK,KACnBjB,EAAEkB,UAAUlB,EAAEmB,aAGhBnB,EAAEoB,KAAO,WACPpB,EAAEqB,OACArB,EAAEsB,IAAItB,EAAEuB,IAAIhB,IAAW,EAAG,EAAGN,EAAM,GAAIA,EAAM,IAAI,GACjDD,EAAEsB,IAAItB,EAAEwB,IAAIhB,IAAU,EAAG,EAAG,EAAG,KAAK,GACpCR,EAAEsB,IAAItB,EAAEwB,IAAId,IAAS,EAAG,EAAG,IAAK,IAAI,GACpC,GAGFV,EAAEyB,SACAzB,EAAE0B,MAAQ1B,EAAE2B,MAAMtB,EAAc,GAAIC,EAAa,GAAIN,EAAE4B,WAAa,KACpE5B,EAAEsB,IAAItB,EAAEuB,IAAIhB,IAAW,EAAG,EAAG,EAAGP,EAAE6B,QAClC7B,EAAE0B,MACF1B,EAAEsB,IAAItB,EAAEuB,IAAIf,IAAU,EAAG,EAAG,EAAGR,EAAE6B,QACjC,EACA7B,EAAEsB,IAAItB,EAAEuB,IAAIb,IAAS,EAAG,EAAG,EAAGV,EAAE6B,SAGlCrB,GAAUH,EACVK,GAASJ,GAFTC,GAAWJ,GAIc,EAAXH,EAAEI,QAAYJ,EAAE8B,WAenBC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAcrC,OAAQA,EAAQsC,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2019-04-04-js-8729fa6cec8492dc6004.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const HUE = p.random(20, 80);\n\n  const SPEED_CENTER = p.random(0.01, 0.03) / p.TWO_PI;\n  const SPEED_RIGHT = p.random(0.03, 0.07) / p.TWO_PI;\n  const SPEED_LEFT = p.random(0.03, 0.07) / p.TWO_PI;\n\n  let aCenter = 0;\n  let aRight = p.PI;\n  let aLeft = 0;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(64);\n    p.noFill();\n    p.strokeWeight(10);\n    p.colorMode(p.HSB, 100);\n    p.blendMode(p.HARD_LIGHT);\n  };\n\n  p.draw = function() {\n    p.stroke(\n      p.map(p.sin(aCenter), -1, 1, HUE - 20, HUE + 20, true),\n      p.map(p.cos(aRight), -1, 1, 0, 100, true),\n      p.map(p.cos(aLeft), -1, 1, 100, 33, true),\n      1\n    );\n\n    p.triangle(\n      p.width * p.noise(SPEED_RIGHT / 10, SPEED_LEFT / 10, p.frameCount / 1000),\n      p.map(p.sin(aCenter), -1, 1, 0, p.height),\n      p.width,\n      p.map(p.sin(aRight), -1, 1, 0, p.height),\n      0,\n      p.map(p.sin(aLeft), -1, 1, 0, p.height)\n    );\n    aCenter += SPEED_CENTER;\n    aRight += SPEED_RIGHT;\n    aLeft += SPEED_LEFT;\n\n    if (aCenter > p.TWO_PI * 2) p.noLoop();\n  };\n\n  // p.touchMoved = function() {\n  //  if (\n  //    p.mouseX >= 0 &&\n  //    p.mouseY >= 0 &&\n  //    p.mouseX <= p.width &&\n  //    p.mouseY <= p.height\n  //  ) {\n  //    return false;\n  //  }\n  // };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
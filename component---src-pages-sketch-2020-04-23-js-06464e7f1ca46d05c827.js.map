{"version":3,"sources":["webpack:///./src/pages/sketch/2020/04/23.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/easing.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.string.pad-start.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-pad.js"],"names":["sketch","p","margin","gap","w","mask","RENDER","getURLParams","render","COLORS","shuffle","setup","pixelDensity","frameRate","createCanvas","background","createLoop","noiseRadius","noFill","width","createGraphics","height","noStroke","fill","circle","draw","animLoop","noise2D","theta","progress","easedProgress","ease","rotation","canvas","strokeWeight","push","translate","x","blendMode","BLEND","stroke","line","SCREEN","rotate","QUARTER_PI","beginShape","vertex","y","curveVertex","polarToCartesian","TWO_PI","endShape","pop","canvasPixels","get","image","process","DEV","frameCount","DURATION","save","String","padStart","length","location","path","pathname","description","polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","$export","$pad","userAgent","WEBKIT_BUG","test","P","F","maxLength","this","arguments","undefined","toLength","repeat","defined","module","exports","that","fillString","left","S","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","ceil","slice"],"mappings":"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","file":"component---src-pages-sketch-2020-04-23-js-06464e7f1ca46d05c827.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport { easeInOutQuad as ease } from \"~lib/easing\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const DURATION = 20;\n  const RATE = 30;\n  const LINES = 75;\n  const COLORS = p.shuffle([\"red\", \"green\", \"blue\"]);\n\n  let margin;\n  let gap;\n  let w;\n  let mask;\n\n  p.setup = function() {\n    p.pixelDensity(2);\n    p.frameRate(RATE);\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.createLoop(DURATION, {\n      noiseRadius: 1,\n    });\n    p.noFill();\n\n    margin = p.width / 20;\n    w = p.width / 2 - margin;\n    gap = (p.width - margin * 2) / LINES;\n\n    mask = p.createGraphics(p.width, p.height);\n    mask.noStroke();\n    mask.fill(0);\n    mask.circle(p.width / 2, p.height / 2, w * 2 - margin);\n  };\n\n  p.draw = function() {\n    const { noise2D, theta, progress } = p.animLoop;\n    const easedProgress = ease(progress);\n    const rotation = -4 * easedProgress * easedProgress + 4 * easedProgress;\n    const canvas = p.createGraphics(p.width, p.height);\n\n    canvas.background(0);\n    canvas.strokeWeight(gap / 3);\n    canvas.push();\n    canvas.translate(canvas.width / 2, canvas.height / 2);\n    for (let x = -w; x <= w; x += gap) {\n      canvas.blendMode(canvas.BLEND);\n      canvas.stroke(COLORS[0]);\n      canvas.line(x, -w, x, w);\n\n      canvas.blendMode(canvas.SCREEN);\n\n      canvas.push();\n      canvas.rotate((-canvas.QUARTER_PI / 10) * rotation);\n      canvas.stroke(COLORS[1]);\n\n      canvas.beginShape();\n      canvas.vertex(x, -w);\n      canvas.vertex(x, -w);\n      for (let y = -w + gap * (LINES / 10); y <= w; y += gap * (LINES / 10)) {\n        canvas.curveVertex(\n          ...polarToCartesian(\n            x + noise2D(x / 200, y / 200) * gap,\n            y + noise2D(x, y) * gap * 2,\n            canvas.TWO_PI * noise2D(x / 100, y / 100) + theta,\n            gap * noise2D(y / 100, x / 100) * 2,\n            true\n          )\n        );\n      }\n\n      canvas.vertex(x, w);\n      canvas.vertex(x, w);\n      canvas.endShape();\n      canvas.pop();\n\n      canvas.push();\n      canvas.rotate((canvas.QUARTER_PI / 10) * rotation);\n      canvas.stroke(COLORS[2]);\n\n      canvas.beginShape();\n      canvas.vertex(x, -w);\n      canvas.vertex(x, -w);\n      for (let y = -w + gap * (LINES / 10); y <= w; y += gap * (LINES / 10)) {\n        canvas.curveVertex(\n          ...polarToCartesian(\n            x + noise2D(x / 300, y / 300) * gap,\n            y + noise2D(x / 50, y / 50) * gap * 2,\n            canvas.TWO_PI * noise2D(x / 150, y / 150) + theta,\n            gap * noise2D(y / 150, x / 150) * 2,\n            true\n          )\n        );\n      }\n\n      canvas.vertex(x, w);\n      canvas.vertex(x, w);\n      canvas.endShape();\n      canvas.pop();\n    }\n    canvas.pop();\n\n    const canvasPixels = canvas.get();\n    canvasPixels.mask(mask);\n\n    p.image(canvasPixels, 0, 0);\n\n    RENDER &&\n      process.env.DEV &&\n      p.frameCount < DURATION * RATE &&\n      p.save(\n        `${String(p.frameCount).padStart(\n          String(DURATION * RATE * 2).length,\n          \"0\"\n        )}.png`\n      );\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2020/01/22.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/easing.js"],"names":["sketch","p","r","RENDER","getURLParams","render","noiseRadii","setup","pixelDensity","frameRate","createCanvas","background","createLoop","gif","open","noiseRadius","width","Array","fill","map","random","draw","animLoop","theta","noise1D","noise","gfx","createGraphics","height","mask","i","TWO_PI","strokeWeight","bezier","polarToCartesian","easeInCubic","abs","translate","triangle","gfxImage","get","push","rotate","image","pop","scale","location","path","pathname","description","polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","x","y","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"k/BAMA,IAAMA,EAAS,SAASC,GACtB,IAMIC,EANEC,EAASF,EAAEG,eAAeC,OAO5BC,EAAa,GAEjBL,EAAEM,MAAQ,WACRN,EAAEO,aAAa,GACfP,EAAEQ,UATS,IAUXR,EAAES,aAAa,IAAK,KACpBT,EAAEU,WAAW,KACbV,EAAEW,WAba,GAaQ,CACrBC,MAAKV,GAAS,CAAEE,QAAQ,EAAOS,MAAM,GACrCC,YAAa,KAGfb,EAAID,EAAEe,MAAQ,EAAIf,EAAEe,MAAQ,GAE5BV,EAAaW,MAjBI,KAkBdC,OACAC,KAAI,kBAAMlB,EAAEmB,OAAO,IAAK,SAG7BnB,EAAEoB,KAAO,WAAY,IAAD,EACgBpB,EAAEqB,SAA5BC,EADU,EACVA,MAAcC,GADJ,EACHC,MADG,EACID,SAEhBE,EAAMzB,EAAE0B,eAAe1B,EAAEe,MAAOf,EAAE2B,QAClCC,EAAO5B,EAAE0B,eAAe1B,EAAEe,MAAOf,EAAE2B,QAEzC3B,EAAEU,WAAW,KAEb,IAAK,IAAImB,EAAI,EAAGA,EAAI7B,EAAE8B,OAAQD,GAAK7B,EAAE8B,OA9BpB,IA+BfL,EAAIM,aACF/B,EAAEkB,IAAIK,EAAQM,EAAG,CAAEf,YAAaT,EAAWwB,MAAQ,EAAG,EAAG,EAAG,IAE9DJ,EAAIO,OAAJ,MAAAP,EAAG,CACDzB,EAAEe,MAAQd,EACVD,EAAE2B,OAAS,GAFV,SAGEM,YACDjC,EAAEe,MAAQ,EACVf,EAAE2B,OAAS,GACT3B,EAAE8B,OAzCO,EAyCe,EAAKI,sBAAYlC,EAAEmC,IAAIZ,EAAQ,KACzDtB,EAAIiC,sBAAYlC,EAAEmC,IAAIZ,EAAQ,MAC9B,IARD,EAUEU,YACDjC,EAAEe,MAAQ,EACVf,EAAE2B,OAAS,GACT3B,EAAE8B,OAhDO,EAgDe,EAAKI,sBAAYlC,EAAEmC,IAAIZ,EAAQ,KACzDtB,EAAIiC,sBAAYlC,EAAEmC,IAAIZ,EAAQ,MAC9B,IAfD,EAiBEU,YACDjC,EAAEe,MAAQ,EACVf,EAAE2B,OAAS,GACVL,EAAQO,EACT7B,EAAEe,OACF,MAKNa,EAAKX,KAAK,GACVW,EAAKQ,UAAUpC,EAAEe,MAAQ,EAAGf,EAAE2B,OAAS,GACvCC,EAAKS,SAAL,MAAAT,EAAI,CACF,EACA,GAFE,SAGCK,YAAiB,EAAG,GAAKjC,EAAE8B,OAnEf,EAmEqC,EAAI7B,GAAG,IAHzD,CAIFgC,YAAiB,EAAG,EAAGjC,EAAE8B,OApEV,EAoEgC,EAAG7B,GAAG,GAAM,GAC3D,KAGF,IAAMqC,EAAWb,EAAIc,MACrBD,EAASV,KAAKA,GAEd5B,EAAEwC,OACFxC,EAAEoC,UAAUpC,EAAEe,MAAQ,EAAGf,EAAE2B,OAAS,GACpC3B,EAAEyC,OAAOnB,GAET,IAAK,IAAIO,EAAI,EAAGA,EA/EC,EA+EeA,IAC9B7B,EAAEwC,OACFxC,EAAEyC,OAAQzC,EAAE8B,OAjFG,EAiFoBD,GACnC7B,EAAE0C,MAAMJ,GAAWtC,EAAEe,MAAQ,GAAIf,EAAE2B,OAAS,GAC5C3B,EAAE2C,MAEF3C,EAAEwC,OACFxC,EAAE4C,MAAM,GAAI,GACZ5C,EAAEyC,OAAQzC,EAAE8B,OAvFG,EAuFoBD,GACnC7B,EAAE0C,MAAMJ,GAAWtC,EAAEe,MAAQ,GAAIf,EAAE2B,OAAS,GAC5C3B,EAAE2C,MAGJ3C,EAAE2C,QAIS,0BAAGE,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc9C,OAAQA,EAAQ+C,KAAMD,EAASE,SAAUC,YAAY,O,kCC3GrE,0GAAMC,EAAoB,SAACC,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKC,IAAIH,GAASC,GAE9BG,EAAoB,SAACL,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKG,IAAIL,GAASC,GAsB9BK,EAA0B,SAC9BC,EACAC,EACAR,EACAS,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIL,EAAUL,KAAKC,IAAIH,GAASS,EAChCI,EAAIL,EAAUN,KAAKG,IAAIL,GAASU,EACtC,OAAOC,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,MAIlB/B,IAzBU,SACvByB,EACAC,EACAR,EACAC,EACAU,QACG,IADHA,OAAU,GAEV,IAAMC,EAAId,EAAkBS,EAASP,EAAOC,GACtCY,EAAIT,EAAkBI,EAASR,EAAOC,GAC5C,OAAOU,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,O,kCCxBjC,2kBAGA,IAAMC,EAAS,SAAAC,GAAC,OAAIA,GAGdC,EAAa,SAAAD,GAAC,OAAIA,EAAIA,GAGtBE,EAAc,SAAAF,GAAC,OAAIA,GAAK,EAAIA,IAG5BG,EAAgB,SAAAH,GAAC,OAAKA,EAAI,GAAM,EAAIA,EAAIA,GAAU,EAAI,EAAIA,GAAKA,EAAlB,GAG7ChC,EAAc,SAAAgC,GAAC,OAAIA,EAAIA,EAAIA,GAG3BI,EAAe,SAAAJ,GAAC,QAAMA,EAAIA,EAAIA,EAAI,GAGlCK,EAAiB,SAAAL,GAAC,OACtBA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,GAAKA,EAAI,IAAM,EAAIA,EAAI,IAAM,EAAIA,EAAI,GAAK,GAG5DM,EAAc,SAAAN,GAAC,OAAIA,EAAIA,EAAIA,EAAIA,GAG/BO,EAAe,SAAAP,GAAC,OAAI,KAAMA,EAAIA,EAAIA,EAAIA,GAGtCQ,EAAiB,SAAAR,GAAC,OACtBA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,IAAMA,EAAIA,EAAIA,EAAIA,GAGhDS,EAAc,SAAAT,GAAC,OAAIA,EAAIA,EAAIA,EAAIA,EAAIA,GAGnCU,EAAe,SAAAV,GAAC,OAAI,IAAMA,EAAIA,EAAIA,EAAIA,EAAIA,GAG1CW,EAAiB,SAAAX,GAAC,OACtBA,EAAI,GAAM,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,KAAOA,EAAIA,EAAIA,EAAIA,EAAIA","file":"component---src-pages-sketch-2020-01-22-js-ae3965fb6ce21725198e.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport \"p5.createloop\";\nimport { easeInCubic } from \"~lib/easing\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const DURATION = 20;\n  const RATE = 60;\n  const SIDE_COUNT = 5;\n  const LINE_COUNT = 100;\n\n  let r;\n  let noiseRadii = [];\n\n  p.setup = function() {\n    p.pixelDensity(1);\n    p.frameRate(RATE);\n    p.createCanvas(660, 840);\n    p.background(255);\n    p.createLoop(DURATION, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.1,\n    });\n\n    r = p.width / 2 - p.width / 20;\n\n    noiseRadii = Array(LINE_COUNT)\n      .fill()\n      .map(() => p.random(100, 200));\n  };\n\n  p.draw = function() {\n    const { theta, noise, noise1D } = p.animLoop;\n\n    const gfx = p.createGraphics(p.width, p.height);\n    const mask = p.createGraphics(p.width, p.height);\n\n    p.background(255);\n\n    for (let i = 0; i < p.TWO_PI; i += p.TWO_PI / LINE_COUNT) {\n      gfx.strokeWeight(\n        p.map(noise1D(i, { noiseRadius: noiseRadii[i] }), -1, 1, 1, 5)\n      );\n      gfx.bezier(\n        p.width + r,\n        p.height / 2,\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          -(p.TWO_PI / SIDE_COUNT / 2) * easeInCubic(p.abs(noise1D(2))),\n          r * easeInCubic(p.abs(noise1D(3))),\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          -(p.TWO_PI / SIDE_COUNT / 2) * easeInCubic(p.abs(noise1D(4))),\n          r * easeInCubic(p.abs(noise1D(5))),\n          true\n        ),\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          -theta + i,\n          p.width,\n          true\n        )\n      );\n    }\n\n    mask.fill(0);\n    mask.translate(p.width / 2, p.height / 2);\n    mask.triangle(\n      0,\n      0,\n      ...polarToCartesian(0, 0, -(p.TWO_PI / SIDE_COUNT / 2), r, true),\n      polarToCartesian(0, 0, p.TWO_PI / SIDE_COUNT / 2, r, true)[0],\n      0\n    );\n\n    const gfxImage = gfx.get();\n    gfxImage.mask(mask);\n\n    p.push();\n    p.translate(p.width / 2, p.height / 2);\n    p.rotate(theta);\n\n    for (let i = 0; i < SIDE_COUNT; i++) {\n      p.push();\n      p.rotate((p.TWO_PI / SIDE_COUNT) * i);\n      p.image(gfxImage, -p.width / 2, -p.height / 2);\n      p.pop();\n\n      p.push();\n      p.scale(1, -1);\n      p.rotate((p.TWO_PI / SIDE_COUNT) * i);\n      p.image(gfxImage, -p.width / 2, -p.height / 2);\n      p.pop();\n    }\n\n    p.pop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n"],"sourceRoot":""}
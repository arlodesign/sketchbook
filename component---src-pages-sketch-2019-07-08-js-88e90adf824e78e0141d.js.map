{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/08.js"],"names":["sketch","p","HUE","random","COLORS","Array","from","length","_","i","setup","createCanvas","createLoop","gif","noiseRadius","colorMode","HSB","draw","blendMode","BLEND","background","HARD_LIGHT","forEach","c","push","translate","stroke","strokeWeight","map","cos","animLoop","theta","GRID","x","noise2D","line","height","pop","width","SketchPage"],"mappings":"wKAOMA,G,UAAS,SAASC,GACtB,IAEMC,EAAMD,EAAEE,OAAO,EADT,GAENC,EAASC,MAAMC,KAAK,CAAEC,OAFhB,IAE+B,SAACC,EAAGC,GAAJ,OAAUP,EAAO,EAFhD,EAE2DO,KAEvER,EAAES,MAAQ,WAKRT,EAAEU,aAAa,IAAK,KACpBV,EAAEW,WAAW,GAAI,CACfC,KAA8C,EAC9CC,YAAa,IAEfb,EAAEc,UAAUd,EAAEe,IAAK,IAGrBf,EAAEgB,KAAO,WACPhB,EAAEiB,UAAUjB,EAAEkB,OACdlB,EAAEmB,WAAW,GACbnB,EAAEiB,UAAUjB,EAAEoB,YAEd,IALkB,eAKTZ,GACPL,EAAOkB,SAAQ,SAAAC,GACbtB,EAAEuB,OACFvB,EAAEwB,UAAUhB,EAAG,GACfR,EAAEyB,OAAOH,EAAG,GAAK,GACjBtB,EAAE0B,aAAa1B,EAAE2B,IAAI3B,EAAE4B,IAAI5B,EAAE6B,SAASC,QAAS,EAAG,EAAG,EAAGC,KAExD,IAAMC,EAAIhC,EAAE2B,IACV3B,EAAE4B,IAAI5B,EAAE6B,SAASC,QAChB,EACD,EACA,EAlCK,GAmCL9B,EAAE6B,SAASI,QAAQzB,EAAGc,GAAY,GAEpCtB,EAAEkC,KAAKF,EAAG,EAAGA,EAAGhC,EAAEmC,QAClBnC,EAAEoC,UAfG5B,EAAI,EAAGA,GAAKR,EAAEqC,MAAO7B,GAvBnB,GAuB+B,EAAjCA,MA2BE8B,UANI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQvC,OAAQA","file":"component---src-pages-sketch-2019-07-08-js-88e90adf824e78e0141d.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport \"p5.createloop\";\n\nconst RENDER = false;\n\nconst sketch = function(p) {\n  const GRID = 30;\n  const QTY = 3;\n  const HUE = p.random(1 / QTY);\n  const COLORS = Array.from({ length: QTY }, (_, i) => HUE + (1 / QTY) * i);\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n    p.createCanvas(660, 840);\n    p.createLoop(10, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 1,\n    });\n    p.colorMode(p.HSB, 1);\n  };\n\n  p.draw = function() {\n    p.blendMode(p.BLEND);\n    p.background(0);\n    p.blendMode(p.HARD_LIGHT);\n\n    for (let i = 0; i <= p.width; i += GRID) {\n      COLORS.forEach(c => {\n        p.push();\n        p.translate(i, 0);\n        p.stroke(c, 0.5, 1);\n        p.strokeWeight(p.map(p.cos(p.animLoop.theta), -1, 1, 1, GRID / 2));\n\n        const x = p.map(\n          p.cos(p.animLoop.theta),\n          -1,\n          1,\n          0,\n          p.animLoop.noise2D(i, c) * GRID * 3\n        );\n        p.line(x, 0, x, p.height);\n        p.pop();\n      });\n    }\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n  </Layout>\n);\n\nexport default SketchPage;\n"],"sourceRoot":""}
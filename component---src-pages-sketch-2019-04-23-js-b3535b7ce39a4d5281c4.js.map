{"version":3,"sources":["webpack:///./src/lib/polarToCartesian.js","webpack:///./src/pages/sketch/2019/04/23.js"],"names":["polarToCartesianEllipse","centerX","centerY","angle","radiusX","radiusY","asArray","x","Math","cos","y","sin","polarToCartesian","distance","center","polarToCartesianX","polarToCartesianY","sketch","p","SCALAR","floor","random","a","setup","createCanvas","background","stroke","strokeWeight","draw","i","width","height","TWO_PI","push","translate","lx","ly","l","noise","point","lerp","pop","noLoop","SketchPage","href"],"mappings":"4FAAA,sCAiBMA,EAA0B,SAC9BC,EACAC,EACAC,EACAC,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIN,EAAUO,KAAKC,IAAIN,GAASC,EAChCM,EAAIR,EAAUM,KAAKG,IAAIR,GAASE,EACtC,OAAOC,EAAU,CAACC,EAAGG,GAAK,CAAEH,IAAGG,MAIlBE,IAzBU,SACvBX,EACAC,EACAC,EACAU,EACAP,QACG,IADHA,OAAU,GAEV,IAAMC,EAbkB,SAACO,EAAQX,EAAOU,GACxC,OAAOC,EAASN,KAAKC,IAAIN,GAASU,EAYxBE,CAAkBd,EAASE,EAAOU,GACtCH,EAXkB,SAACI,EAAQX,EAAOU,GACxC,OAAOC,EAASN,KAAKG,IAAIR,GAASU,EAUxBG,CAAkBd,EAASC,EAAOU,GAC5C,OAAOP,EAAU,CAACC,EAAGG,GAAK,CAAEH,IAAGG,O,kCCfjC,oEAKMO,EAAS,SAASC,GACtB,IAAMC,EAASD,EAAEE,MAAMF,EAAEG,OAAO,EAAG,IAG/BC,EAAI,EAERJ,EAAEK,MAAQ,WACRL,EAAEM,aAAa,IAAK,KACpBN,EAAEO,WAAW,GACbP,EAAEQ,OAAO,IAAK,MACdR,EAAES,aAAa,KAGjBT,EAAEU,KAAO,WACP,IAAK,IAAIC,EAAI,EAAGA,EAZJ,EAYeA,IAAK,CAAC,IAAD,EACf7B,YACbkB,EAAEY,MAAQ,EACVZ,EAAEa,OAAS,EACXT,EAAIJ,EAAEc,QAAUH,EAhBR,GAiBRX,EAAEY,MAAQ,EACVZ,EAAEa,OAAS,GALPxB,EADwB,EACxBA,EAAGG,EADqB,EACrBA,EAQTQ,EAAEe,OACFf,EAAEgB,UAAU3B,EAAGG,GAKf,IAHA,IAAMyB,EAAK5B,EAAKA,EAAIY,EAAUD,EAAET,IAAIU,GAAUA,EAAS,GAAKG,GACtDc,EAAK1B,EAAKH,EAAIY,EAAUD,EAAEP,IAAIQ,EAASG,GAEpCe,EAAI,EAAGA,EAAI,EAAGA,GAAKnB,EAAEoB,MAAMH,EAAIC,GAAM,IAAM,IAClDC,EAAI,GAAKnB,EAAEG,SAAWgB,GAAKnB,EAAEqB,MAAMrB,EAAEsB,KAAK,EAAGL,EAAIE,GAAInB,EAAEsB,KAAK,EAAGJ,EAAIC,IAGrEnB,EAAEuB,OAGJnB,GAAKJ,EAAEc,OAAS,KACZd,EAAEc,QAAUd,EAAEwB,WAePC,UAXI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ1B,OAAQA,IAChB,kEACA,uCACW,uBAAG2B,KAAK,4CAAR,cAAkE,IAD7E","file":"component---src-pages-sketch-2019-04-23-js-b3535b7ce39a4d5281c4.js","sourcesContent":["const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport { polarToCartesianEllipse } from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const SCALAR = p.floor(p.random(3, 8));\n  const LINES = 6;\n\n  let a = 0;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.stroke(255, 255 / LINES);\n    p.strokeWeight(0.5);\n  };\n\n  p.draw = function() {\n    for (let i = 0; i < LINES; i++) {\n      let { x, y } = polarToCartesianEllipse(\n        p.width / 3,\n        p.height / 3,\n        a + p.TWO_PI * (i / LINES),\n        p.width / 5,\n        p.height / 5\n      );\n\n      p.push();\n      p.translate(x, y);\n\n      const lx = x + (x / SCALAR) * p.cos(SCALAR * (SCALAR / 2) * a);\n      const ly = y + (x / SCALAR) * p.sin(SCALAR * a);\n\n      for (let l = 0; l < 1; l += p.noise(lx, ly) / 10 || 0.01) {\n        l > 0 && p.random() > l && p.point(p.lerp(0, lx, l), p.lerp(0, ly, l));\n      }\n\n      p.pop();\n    }\n\n    a += p.TWO_PI / 10000;\n    a > p.TWO_PI && p.noLoop();\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n    <p>Be patient. This one takes a while.</p>\n    <p>\n      Props to <a href=\"https://www.instagram.com/p/Bwa3dHIBtBb/\">iso.hedron</a>{\" \"}\n      for posting their code. I started there and tweaked.\n    </p>\n  </Layout>\n);\n\nexport default SketchPage;\n"],"sourceRoot":""}
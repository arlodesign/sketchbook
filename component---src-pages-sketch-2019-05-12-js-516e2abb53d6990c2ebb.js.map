{"version":3,"sources":["webpack:///./src/pages/sketch/2019/05/12.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/core-js/modules/_create-property.js","webpack:///./src/lib/lerpLine.js"],"names":["sketch","p","maxDist","SLICES","random","vertices","setup","createCanvas","Array","from","floor","theta","TWO_PI","r","height","forEach","_ref","i","push","vector","polarToCartesian","width","reached","hue","map","sin","filter","_ref2","x","y","dist","background","colorMode","HSB","strokeWeight","draw","reachedVector","unreachedIndex","reachedVertices","_ref3","shortestDist","vertex","_ref4","thisDist","stroke","lerpLine","noStroke","fill","rect","v","length","noLoop","text","pop","__webpack_exports__","_ref5","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_5__","path","pathname","description","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","aLen","arguments","index","undefined","end","endPos","d","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","angle","distance","Math","cos","centerX","centerY","radiusX","radiusY","asArray","ctx","call","isArrayIter","createProperty","getIterFn","S","F","iter","arrayLike","result","step","iterator","C","mapfn","mapping","iterFn","next","done","$defineProperty","createDesc","object","f","x1","y1","x2","y2","rate","showFirstDot","Error","l","point","lerp"],"mappings":"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","file":"component---src-pages-sketch-2019-05-12-js-516e2abb53d6990c2ebb.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const SLICES = p.random([2, 3, 5]);\n\n  let vertices = [];\n  let maxDist;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n\n    Array.from(Array(p.floor(3000 / SLICES)), () => ({\n      theta: p.random(p.TWO_PI / SLICES),\n      r: p.random(p.height / 2),\n    })).forEach(({ theta, r }) => {\n      for (let i = 0; i < SLICES; i++) {\n        vertices.push({\n          vector: polarToCartesian(\n            p.width / 2,\n            p.height / 2,\n            theta + (p.TWO_PI / SLICES) * i,\n            r\n          ),\n          reached: false,\n          hue: p.map(p.sin(theta + (p.TWO_PI / SLICES) * i), -1, 1, 0, 100),\n        });\n      }\n    });\n    vertices = vertices.filter(\n      ({ vector }) =>\n        vector.x > 0 &&\n        vector.x < p.width &&\n        vector.y > 0 &&\n        vector.y < p.height\n    );\n    vertices.push({\n      vector: {\n        x: p.width / 2,\n        y: p.height / 2,\n      },\n      reached: true,\n      hue: 0,\n    });\n\n    maxDist = p.dist(0, 0, p.width, p.height);\n\n    p.background(0);\n    p.colorMode(p.HSB, 100);\n    p.strokeWeight(2);\n  };\n\n  p.draw = function() {\n    const reachedVertices = vertices.filter(({ reached }) => reached);\n\n    let shortestDist = maxDist;\n    let reachedVector;\n    let unreachedIndex;\n\n    vertices.forEach((vertex, i) => {\n      if (!vertex.reached) {\n        reachedVertices.forEach(({ vector, hue }) => {\n          const thisDist = p.dist(\n            vector.x,\n            vector.y,\n            vertex.vector.x,\n            vertex.vector.y\n          );\n          if (thisDist < shortestDist) {\n            shortestDist = thisDist;\n            unreachedIndex = i;\n            reachedVector = vector;\n          }\n        });\n      }\n    });\n\n    p.stroke(vertices[unreachedIndex].hue, 80, 100);\n    lerpLine(\n      p,\n      reachedVector.x,\n      reachedVector.y,\n      vertices[unreachedIndex].vector.x,\n      vertices[unreachedIndex].vector.y,\n      p.map(\n        p.dist(p.width / 2, p.height / 2, reachedVector.x, reachedVector.y),\n        0,\n        maxDist / 2,\n        0.1,\n        0.5\n      ),\n      false\n    );\n\n    vertices[unreachedIndex].reached = true;\n\n    p.push();\n    p.noStroke();\n    p.fill(\"black\");\n    p.rect(0, 0, 100, 20);\n\n    if (vertices.filter(v => v.reached).length === vertices.length) {\n      p.noLoop();\n    } else {\n      p.fill(\"white\");\n      p.text(vertices.length - vertices.filter(v => v.reached).length, 0, 18);\n    }\n\n    p.pop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Be patient.\"\n  />\n);\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","export default function(p, x1, y1, x2, y2, rate, showFirstDot = true) {\n  if (rate <= 0)\n    throw new Error(\"rate for lerpLine() must be greater than zero\");\n\n  for (let l = 0; l < 1; l += rate) {\n    if (l === 0 && !showFirstDot) continue;\n    p.random() > l && p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n  }\n}\n"],"sourceRoot":""}
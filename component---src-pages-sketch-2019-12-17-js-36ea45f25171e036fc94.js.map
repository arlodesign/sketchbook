{"version":3,"sources":["webpack:///./src/pages/sketch/2019/12/17.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/easing.js"],"names":["sketch","p","RENDER","getURLParams","render","HUE","random","points","Point","aLow","aHigh","this","aNoise","dNoise","get","noise1D","animLoop","polarToCartesian","map","width","setup","createCanvas","colorMode","HSL","background","POINTS","createLoop","gif","open","noiseRadius","Array","fill","_","i","TWO_PI","draw","theta","frameCount","noLoop","noFill","blendMode","HARD_LIGHT","translate","height","rotate","forEach","pt","ip","a","b","c","d","j","x1","curvePoint","x","y1","y","x2","y2","stroke","cos","sin","ease","abs","line","location","path","pathname","description","polarToCartesianX","center","angle","distance","Math","polarToCartesianY","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"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","file":"component---src-pages-sketch-2019-12-17-js-36ea45f25171e036fc94.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport { easeInOutQuint as ease } from \"~lib/easing\";\nimport \"p5.createloop\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const POINTS = 5;\n  const HUE = p.random(POINTS);\n  const VERTICES = 100;\n\n  let points = [];\n\n  class Point {\n    constructor(aLow, aHigh) {\n      this.aLow = aLow;\n      this.aHigh = aHigh;\n      this.aNoise = p.random();\n      this.dNoise = p.random();\n    }\n    get() {\n      const { noise1D } = p.animLoop;\n      return polarToCartesian(\n        0,\n        0,\n        p.map(noise1D(this.aNoise), -1, 1, this.aLow, this.aHigh),\n        p.map(noise1D(this.dNoise), -1, 1, 0, p.width)\n      );\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSL, POINTS);\n    p.background(POINTS - HUE, POINTS / 3, POINTS / 2);\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.5,\n    });\n\n    points = Array(POINTS)\n      .fill()\n      .map(\n        (_, i) =>\n          new Point((p.TWO_PI / POINTS) * i, (p.TWO_PI / POINTS) * (i + 1))\n      );\n  };\n\n  p.draw = function() {\n    const { noise1D, theta } = p.animLoop;\n\n    if (!RENDER && p.frameCount > 1 && theta === 0) {\n      p.noLoop();\n      return;\n    }\n\n    p.noFill();\n    p.blendMode(p.HARD_LIGHT);\n\n    p.translate(\n      ...polarToCartesian(p.width / 2, p.height / 2, theta, noise1D(0.08), true)\n    );\n    p.rotate(p.animLoop.theta);\n\n    points.forEach((pt, ip) => {\n      const a = pt.get();\n      const b = points[(ip + 1) % POINTS].get();\n      const c = points[(ip + 2) % POINTS].get();\n      const d = points[(ip + 3) % POINTS].get();\n\n      for (let j = 0; j < 1; j += 1 / VERTICES) {\n        const x1 = p.curvePoint(a.x, b.x, c.x, d.x, j);\n        const y1 = p.curvePoint(a.y, b.y, c.y, d.y, j);\n        const x2 = p.curvePoint(a.x, b.x, c.x, d.x, j + 1 / VERTICES);\n        const y2 = p.curvePoint(a.y, b.y, c.y, d.y, j + 1 / VERTICES);\n\n        p.stroke(\n          HUE,\n          p.map(p.cos((ip + j) * (p.TWO_PI / POINTS)), -1, 1, POINTS, 0),\n          p.map(p.sin((ip + j) * (p.TWO_PI / POINTS)), -1, 1, 0, POINTS),\n          ease(p.abs(p.sin(theta * 4))) * POINTS\n        );\n        p.line(x1, y1, x2, y2);\n      }\n    });\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/05/04.js","webpack:///./src/lib/lerpLine.js"],"names":["sketch","p","spin","grow","angle","r","apex","setup","createCanvas","background","noFill","width","height","random","noise","draw","noiseVal","x","cos","y","sin","x2","y2","stroke","lerpLine","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description","x1","y1","rate","showFirstDot","Error","l","point","lerp"],"mappings":"wIAIMA,EAAS,SAASC,GACtB,IAKIC,EACAC,EAJAC,EAAQ,EACRC,EAAI,GACJC,EAAO,GAIXL,EAAEM,MAAQ,WACRN,EAAEO,aAAa,IAAK,KACpBP,EAAEQ,WAAW,GACbR,EAAES,SACFJ,EAAO,CACLK,MAAOV,EAAEU,MAbO,aAchBC,OAAQX,EAAEW,OAdM,cAgBlBV,EAAOD,EAAEY,OAAO,EAAG,GAAKZ,EAAEY,SAC1BV,EAAOD,EAAOD,EAAEa,MAAMZ,GAAQ,IAGhCD,EAAEc,KAAO,WACPX,GAASF,EACTG,GAAQF,EAER,IAAMa,EAAWf,EAAEa,MAAMV,EAAOC,GAC1BY,EAAIhB,EAAEiB,IAAId,EAAQY,GAAYX,EAC9Bc,EAAIlB,EAAEmB,IAAIhB,EAAQY,GAAYX,EAC9BgB,EAAKpB,EAAEmB,IAAIhB,EAAQY,GAAYX,EAC/BiB,EAAKrB,EAAEiB,IAAId,EAAQY,GAAYX,EAErCJ,EAAEsB,OAAF,uBAAgCP,EAAhC,KAEAQ,YAASvB,EAAGK,EAAKK,MAAOL,EAAKM,OAAQK,EAAGE,EAAGH,EAAW,KACtDQ,YAASvB,EAAGK,EAAKK,MAAOL,EAAKM,OAAQS,EAAIC,EAAIN,EAAW,KAEpDC,EAnCc,aAmCVhB,EAAEU,OAAuBQ,EAnCf,aAmCmBlB,EAAEW,QACrCX,EAAEwB,WAKOC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAc/B,OAAQA,EAAQgC,KAAMJ,EAASK,SAAUC,YAAY,wCC/CtDR,EAAA,WAASzB,EAAGkC,EAAIC,EAAIf,EAAIC,EAAIe,EAAMC,GAC/C,QADoE,IAArBA,OAAe,GAC1DD,GAAQ,EACV,MAAM,IAAIE,MAAM,iDAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAKH,GAChB,IAANG,GAAYF,IAChBrC,EAAEY,SAAW2B,GAAKvC,EAAEwC,MAAMxC,EAAEyC,KAAKP,EAAId,EAAImB,GAAIvC,EAAEyC,KAAKN,EAAId,EAAIkB","file":"component---src-pages-sketch-2019-05-04-js-ae532303fbe8827db126.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const goldenRatio = 1.6180339887;\n\n  let angle = 0;\n  let r = 10;\n  let apex = {};\n  let spin;\n  let grow;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.noFill();\n    apex = {\n      width: p.width / goldenRatio,\n      height: p.height / goldenRatio,\n    };\n    spin = p.random(1, 3) * p.random();\n    grow = spin * p.noise(spin) * 10;\n  };\n\n  p.draw = function() {\n    angle += spin;\n    r = r + grow;\n\n    const noiseVal = p.noise(angle, r);\n    const x = p.cos(angle * noiseVal) * r;\n    const y = p.sin(angle * noiseVal) * r;\n    const x2 = p.sin(angle * noiseVal) * r;\n    const y2 = p.cos(angle * noiseVal) * r;\n\n    p.stroke(`rgba(255, 255, 255, ${noiseVal})`);\n\n    lerpLine(p, apex.width, apex.height, x, y, noiseVal / 100);\n    lerpLine(p, apex.width, apex.height, x2, y2, noiseVal / 100);\n\n    if (x > p.width * goldenRatio && y > p.height * goldenRatio) {\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","export default function(p, x1, y1, x2, y2, rate, showFirstDot = true) {\n  if (rate <= 0)\n    throw new Error(\"rate for lerpLine() must be greater than zero\");\n\n  for (let l = 0; l < 1; l += rate) {\n    if (l === 0 && !showFirstDot) continue;\n    p.random() > l && p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n  }\n}\n"],"sourceRoot":""}
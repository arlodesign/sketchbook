{"version":3,"sources":["webpack:///./src/lib/polarToCartesian.js","webpack:///./src/pages/sketch/2019/12/18.js","webpack:///./src/lib/lerpLine.js","webpack:///./src/lib/easing.js"],"names":["polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","x","y","polarToCartesian","sketch","p","RENDER","getURLParams","render","HUE","random","points","Point","aLow","aHigh","this","aNoise","dNoise","get","animLoop","noise1D","theta","map","width","setup","pixelDensity","createCanvas","colorMode","HSL","background","createLoop","gif","open","noiseRadius","Array","fill","_","i","TWO_PI","draw","frameCount","noLoop","noFill","blendMode","DIFFERENCE","translate","height","rotate","forEach","pt","ip","a","b","c","d","j","x1","curvePoint","y1","x2","y2","stroke","ease","abs","lerpLine","location","path","pathname","description","rate","showFirstDot","noisy","thisRate","max","dist","l","point","lerp","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"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","file":"component---src-pages-sketch-2019-12-18-js-d3f08bcdd3530912df92.js","sourcesContent":["const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport { easeInQuart as ease } from \"~lib/easing\";\nimport \"p5.createloop\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const POINTS = 7;\n  const HUE = p.random(POINTS);\n  const VERTICES = 2;\n\n  let points = [];\n\n  class Point {\n    constructor(aLow, aHigh) {\n      this.aLow = aLow;\n      this.aHigh = aHigh;\n      this.aNoise = p.random();\n      this.dNoise = p.random();\n    }\n    get() {\n      const { noise1D, theta } = p.animLoop;\n      return polarToCartesian(\n        0,\n        0,\n        p.map(noise1D(this.aNoise), -1, 1, this.aLow, this.aHigh),\n        p.map(noise1D(this.dNoise), -1, 1, 0, p.width / 2) * p.cos(theta * 7)\n      );\n    }\n  }\n\n  p.setup = function() {\n    RENDER && p.pixelDensity(1);\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSL, POINTS);\n    p.background(POINTS - HUE, 0.5, 1);\n    p.createLoop(120, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 1,\n    });\n    // p.strokeWeight(0.5);\n\n    points = Array(POINTS)\n      .fill()\n      .map(\n        (_, i) =>\n          new Point((p.TWO_PI / POINTS) * i, (p.TWO_PI / POINTS) * (i + 1))\n      );\n  };\n\n  p.draw = function() {\n    const { noise1D, theta } = p.animLoop;\n\n    if (!RENDER && p.frameCount > 1 && theta === 0) {\n      p.noLoop();\n      return;\n    }\n\n    p.noFill();\n    p.blendMode(p.DIFFERENCE);\n\n    p.translate(\n      ...polarToCartesian(\n        p.width / 2,\n        p.height / 2,\n        theta,\n        noise1D(0.08) * (p.width / 2),\n        true\n      )\n    );\n    p.rotate(p.animLoop.theta);\n\n    points.forEach((pt, ip) => {\n      const a = pt.get();\n      const b = points[(ip + 1) % POINTS].get();\n      const c = points[(ip + 2) % POINTS].get();\n      const d = points[(ip + 3) % POINTS].get();\n\n      for (let j = 0; j < 1; j += 1 / VERTICES) {\n        const x1 = p.curvePoint(a.x, b.x, c.x, d.x, j);\n        const y1 = p.curvePoint(a.y, b.y, c.y, d.y, j);\n        const x2 = p.curvePoint(a.x, b.x, c.x, d.x, j + 1 / VERTICES);\n        const y2 = p.curvePoint(a.y, b.y, c.y, d.y, j + 1 / VERTICES);\n\n        p.stroke(\n          HUE,\n          p.map(p.cos((ip + j) * (p.TWO_PI / POINTS)), -1, 1, POINTS, 0),\n          p.map(p.sin((ip + j) * (p.TWO_PI / POINTS)), -1, 1, 0, POINTS, true),\n          (ease(p.abs(p.sin(theta * 5))) * POINTS) / 2\n        );\n        lerpLine(p, x1, y1, x2, y2, 0.01);\n      }\n    });\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","/**\n * Creates a line of points at a specified interval (the rate)\n *\n * @param {obj} p The current p5.js drawing context\n * @param {*} x1\n * @param {*} y1\n * @param {*} x2\n * @param {*} y2\n * @param {*} rate Number between 0 and 1 to determine how often to draw a point\n * @param {*} showFirstDot Defaults to true\n * @param {*} noisy Defaults to true\n */\nexport default function(\n  p,\n  x1,\n  y1,\n  x2,\n  y2,\n  rate,\n  showFirstDot = true,\n  noisy = true\n) {\n  const thisRate = Math.max(rate, 0.01 / p.dist(x1, y1, x2, y2));\n\n  for (let l = 0; l < 1; l += thisRate) {\n    if (l === 0 && !showFirstDot) continue;\n    if ((noisy && p.random() > l) || !noisy) {\n      p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n    }\n  }\n}\n","// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n"],"sourceRoot":""}
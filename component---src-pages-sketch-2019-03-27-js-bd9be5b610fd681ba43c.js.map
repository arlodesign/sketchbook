{"version":3,"sources":["webpack:///./src/pages/sketch/2019/03/27.js","webpack:///./src/lib/polarToCartesian.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_1__","_lib_polarToCartesian__WEBPACK_IMPORTED_MODULE_2__","sketch","p","HUE","random","angle","Circle","x","y","z","size","this","hue","prototype","draw","stroke","a","TWO_PI","point","apply","polarToCartesian","randomGaussian","setup","createCanvas","colorMode","HSB","background","blendMode","OVERLAY","noFill","map","sin","width","height","floor","noLoop","_ref","location","createElement","path","pathname","description","d","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","distance","Math","cos","centerX","centerY","radiusX","radiusY","asArray"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAIMQ,EAAS,SAASC,GACtB,IACMC,EAAMD,EAAEE,OAAO,EAAG,IAEpBC,EAAQ,EAENC,EANmB,WAOvB,SAAAA,EAAYC,EAAGC,EAAGC,EAAGC,GACnBC,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,EACTE,KAAKD,KAAOA,EACZC,KAAKC,IAAMV,EAAEE,OAAO,CAACD,EAAKA,EAAM,KAZX,OAAAG,EAAAO,UAevBC,KAAA,WACEZ,EAAEa,OAAOJ,KAAKC,IAAK,GAAI,KAEvB,IAAK,IAAII,EAAI,EAAGA,EAAId,EAAEe,OAAQD,GAAK,IAAOd,EAAEe,OAC1Cf,EAAEgB,MAAFC,MAAAjB,EACKkB,YACDlB,EAAEmB,eAAeV,KAAKJ,EAAGI,KAAKF,GAC9BP,EAAEmB,eAAeV,KAAKH,EAAGG,KAAKF,GAC9BO,EACAL,KAAKD,MACL,KAzBeJ,EAAA,GAgCzBJ,EAAEoB,MAAQ,WACRpB,EAAEqB,aAAa,IAAK,KACpBrB,EAAEsB,UAAUtB,EAAEuB,IAAK,KACnBvB,EAAEwB,WAAWvB,EAAK,IAAK,IACvBD,EAAEyB,UAAUzB,EAAE0B,SACd1B,EAAE2B,UAGJ3B,EAAEY,KAAO,WACG,IAAIR,EACZJ,EAAE4B,IAAI5B,EAAE6B,IAAI1B,IAAS,EAAG,EAAGH,EAAE8B,MAAO,GACpC9B,EAAE4B,IAAI5B,EAAE6B,IAAI1B,IAAS,EAAG,EAAGH,EAAE+B,OAAQ,GACrC/B,EAAEgC,MAAMhC,EAAEE,OAAO,CAAC,EA3CR,GA2CkBF,EAAEE,OA3CpB,OA4CVF,EAAEmB,eA5CQ,GA4CcnB,EAAE8B,MAAQ,IAElClB,QACFT,GAAS,GAAMH,EAAEe,QACTf,EAAEe,QAAUf,EAAEiC,WAIXxC,EAAA,iBAAAyC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbxC,EAAAmB,EAAAsB,cAACvC,EAAA,EAAD,CACEE,OAAQA,EACRsC,KAAMF,EAASG,SACfC,YAAY,qFC7DhBhD,EAAAiD,EAAA/C,EAAA,sBAAAgD,IAAAlD,EAAAiD,EAAA/C,EAAA,sBAAAiD,IAAAnD,EAAAiD,EAAA/C,EAAA,sBAAAkD,IAAA,IAAMF,EAAoB,SAACG,EAAQzC,EAAO0C,GACxC,OAAOD,EAASE,KAAKC,IAAI5C,GAAS0C,GAE9BH,EAAoB,SAACE,EAAQzC,EAAO0C,GACxC,OAAOD,EAASE,KAAKjB,IAAI1B,GAAS0C,GAa9BF,EAA0B,SAC9BK,EACAC,EACA9C,EACA+C,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAM/C,EAAI2C,EAAUF,KAAKC,IAAI5C,GAAS+C,EAChC5C,EAAI2C,EAAUH,KAAKjB,IAAI1B,GAASgD,EACtC,OAAOC,EAAU,CAAC/C,EAAGC,GAAK,CAAED,IAAGC,MAIlBY,IAzBU,SACvB8B,EACAC,EACA9C,EACA0C,EACAO,QACG,IADHA,OAAU,GAEV,IAAM/C,EAAIoC,EAAkBO,EAAS7C,EAAO0C,GACtCvC,EAAIoC,EAAkBO,EAAS9C,EAAO0C,GAC5C,OAAOO,EAAU,CAAC/C,EAAGC,GAAK,CAAED,IAAGC","file":"component---src-pages-sketch-2019-03-27-js-bd9be5b610fd681ba43c.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const DEPTH = 20;\n  const HUE = p.random(0, 50);\n\n  let angle = 0;\n\n  class Circle {\n    constructor(x, y, z, size) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.size = size;\n      this.hue = p.random([HUE, HUE + 50]);\n    }\n\n    draw() {\n      p.stroke(this.hue, 75, 100);\n\n      for (let a = 0; a < p.TWO_PI; a += 0.01 / p.TWO_PI) {\n        p.point(\n          ...polarToCartesian(\n            p.randomGaussian(this.x, this.z),\n            p.randomGaussian(this.y, this.z),\n            a,\n            this.size,\n            true\n          )\n        );\n      }\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 100);\n    p.background(HUE, 100, 75);\n    p.blendMode(p.OVERLAY);\n    p.noFill();\n  };\n\n  p.draw = function() {\n    const c = new Circle(\n      p.map(p.sin(angle), -1, 1, p.width, 0),\n      p.map(p.sin(angle), -1, 1, p.height, 0),\n      p.floor(p.random([1, DEPTH, p.random(DEPTH)])),\n      p.randomGaussian(DEPTH, p.width / 3)\n    );\n    c.draw();\n    angle += 0.2 / p.TWO_PI;\n    angle > p.TWO_PI && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Refresh page for a different color variation.\"\n  />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
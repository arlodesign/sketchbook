{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/27.js"],"names":["sketch","p","myFont","points","letter","random","split","colorOffset","preload","loadFont","withPrefix","setup","createCanvas","background","colorMode","HSB","strokeWeight","draw","stroke","map","sin","frameCount","sampleFactor","cos","textToPoints","x","y","corner","width","height","forEach","i","line","location","path","pathname","description"],"mappings":"gKAIMA,EAAS,SAASC,GACtB,IAEIC,EACAC,EAHEC,EAASH,EAAEI,OAAO,6BAA6BC,MAAM,KACrDC,EAAcN,EAAEI,OAAO,KAI7BJ,EAAEO,QAAU,WACVN,EAASD,EAAEQ,SAASC,qBAAW,oCAGjCT,EAAEU,MAAQ,WACRV,EAAEW,aAAa,IAAK,KACpBX,EAAEY,WAAW,GACbZ,EAAEa,UAAUb,EAAEc,IAAK,KACnBd,EAAEe,aAAa,KAGjBf,EAAEgB,KAAO,WACPhB,EAAEiB,OACAjB,EAAEkB,IAAIlB,EAAEmB,KAAKnB,EAAEoB,WAAad,GAAe,MAAQ,EAAG,EAAG,EAAG,KAC5D,GACA,KAEF,IAAMe,EAAerB,EAAEkB,IAAIlB,EAAEsB,IAAItB,EAAEoB,WAAa,MAAO,EAAG,EAAG,EAAG,KAUhElB,GATAA,EAASD,EAAOsB,aACdpB,EAAS,IAAMH,EAAEI,OAAO,mBAAmBC,MAAM,KACjD,GACA,IACA,IACA,CACEgB,kBAGYH,KAAI,kBAAe,CACjCM,EADkB,EAAGA,EAErBC,EAFkB,EAAMA,EAGxBC,OAAQ1B,EAAEI,OAAO,CACf,CACEoB,EAAG,EACHC,EAAG,GAEL,CACED,EAAGxB,EAAE2B,MACLF,EAAG,GAEL,CACED,EAAG,EACHC,EAAGzB,EAAE4B,QAEP,CACEJ,EAAGxB,EAAE2B,MACLF,EAAGzB,EAAE4B,eAKJC,SAAQ,WAAmBC,GAAO,IAAvBN,EAAsB,EAAtBA,EAAGC,EAAmB,EAAnBA,EAAmB,EAAhBC,OAClBxB,EAAO4B,EAAI,IACb9B,EAAE+B,KAAKP,EAAGC,EAAGvB,EAAO4B,EAAI,GAAGN,EAAGtB,EAAO4B,EAAI,GAAGL,QAMrC,0BAAGO,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACEjC,OAAQA,EACRkC,KAAMD,EAASE,SACfC,YAAY","file":"component---src-pages-sketch-2019-04-27-js-2b9c4fdff8089f2b4f9a.js","sourcesContent":["import React from \"react\";\nimport { withPrefix } from \"gatsby\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const letter = p.random(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\"));\n  const colorOffset = p.random(1000000);\n  let myFont;\n  let points;\n\n  p.preload = function() {\n    myFont = p.loadFont(withPrefix(\"/assets/Cousine-BoldItalic.otf\"));\n  };\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.colorMode(p.HSB, 100);\n    p.strokeWeight(0.1);\n  };\n\n  p.draw = function() {\n    p.stroke(\n      p.map(p.sin((p.frameCount + colorOffset) / 1000), -1, 1, 0, 100),\n      50,\n      100\n    );\n    const sampleFactor = p.map(p.cos(p.frameCount / 100), -1, 1, 0, 0.1);\n    points = myFont.textToPoints(\n      letter + \" \" + p.random(\"!@#$%^&*()-+{}[]\".split(\"\")),\n      20,\n      625,\n      900,\n      {\n        sampleFactor,\n      }\n    );\n    points = points.map(({ x, y }) => ({\n      x,\n      y,\n      corner: p.random([\n        {\n          x: 0,\n          y: 0,\n        },\n        {\n          x: p.width,\n          y: 0,\n        },\n        {\n          x: 0,\n          y: p.height,\n        },\n        {\n          x: p.width,\n          y: p.height,\n        },\n      ]),\n    }));\n\n    points.forEach(({ x, y, corner }, i) => {\n      if (points[i + 1]) {\n        p.line(x, y, points[i + 1].x, points[i + 1].y);\n      }\n    });\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different letter.\"\n  />\n);\n"],"sourceRoot":""}
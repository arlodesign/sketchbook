{"version":3,"sources":["webpack:///./src/lib/easing.js","webpack:///./src/pages/sketch/2019/12/29.js"],"names":["linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","sketch","p","RENDER","getURLParams","render","tiles","Tile","x","y","this","hue","random","noise","animLoop","noise2D","setCoordinates","tl","tr","br","bl","draw","lightness","map","ease","fill","stroke","quad","setup","pixelDensity","createCanvas","background","colorMode","HSL","strokeWeight","strokeJoin","ROUND","createLoop","gif","open","noiseRadius","width","height","push","forEach","tile","location","path","pathname","description"],"mappings":"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","file":"component---src-pages-sketch-2019-12-29-js-0504c7eab957090e70cd.js","sourcesContent":["// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport { easeInOutQuint as ease } from \"~lib/easing\";\nimport \"p5.createloop\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const GRID = 60;\n\n  let tiles = [];\n\n  class Tile {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.hue = p.random();\n    }\n    noise(x, y) {\n      return [\n        x + p.animLoop.noise2D(x, y) * (GRID / 2),\n        y + p.animLoop.noise2D(y, x) * (GRID / 2),\n      ];\n    }\n    setCoordinates() {\n      this.tl = this.noise(this.x, this.y);\n      this.tr = this.noise(this.x + GRID, this.y);\n      this.br = this.noise(this.x + GRID, this.y + GRID);\n      this.bl = this.noise(this.x, this.y + GRID);\n    }\n    draw() {\n      this.setCoordinates();\n\n      const lightness = p.map(\n        ease((p.animLoop.noise2D(this.x / 100, this.y / 100) + 1) / 2),\n        0,\n        1,\n        0.1,\n        0.8\n      );\n\n      p.fill(this.hue, 0.6, lightness);\n      p.stroke(this.hue, 0.3, lightness / 3);\n\n      return p.quad(...this.tl, ...this.tr, ...this.br, ...this.bl);\n    }\n  }\n\n  p.setup = function() {\n    RENDER && p.pixelDensity(1);\n    p.createCanvas(660, 840);\n    p.background(255);\n    p.colorMode(p.HSL, 1);\n    p.strokeWeight(2);\n    p.strokeJoin(p.ROUND);\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.4,\n    });\n\n    for (let x = -GRID / 2; x < p.width + GRID; x += GRID) {\n      for (let y = -GRID / 2; y < p.height + GRID; y += GRID) {\n        tiles.push(new Tile(x, y));\n      }\n    }\n  };\n\n  p.draw = function() {\n    tiles.forEach(tile => tile.draw());\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Not quite Sol LeWitt, but an attempt.\"\n  />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/05/28.js","webpack:///./src/lib/polarToCartesian.js"],"names":["sketch","p","setup","createCanvas","noStroke","noFill","colorMode","HSB","draw","blendMode","BLEND","background","HARD_LIGHT","translate","width","height","rotate","HALF_PI","r","START","map","frameCount","DIST","sin","a","TWO_PI","_polarToCartesian","polarToCartesian","x","y","strokeWeight","stroke","beginShape","vertex","endShape","CLOSE","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description","__webpack_require__","d","polarToCartesianX","polarToCartesianY","polarToCartesianEllipse","center","angle","distance","Math","cos","centerX","centerY","radiusX","radiusY","asArray"],"mappings":"uIAIMA,EAAS,SAASC,GAItBA,EAAEC,MAAQ,WACRD,EAAEE,aAAa,IAAK,KACpBF,EAAEG,WACFH,EAAEI,SACFJ,EAAEK,UAAUL,EAAEM,IAAK,MAGrBN,EAAEO,KAAO,WACPP,EAAEQ,UAAUR,EAAES,OACdT,EAAEU,WAAW,KACbV,EAAEQ,UAAUR,EAAEW,YAEdX,EAAEY,UAAUZ,EAAEa,MAAQ,EAAGb,EAAEc,OAAS,GACpCd,EAAEe,OAAOf,EAAEgB,QAAU,GACrB,IAAK,IAAIC,EAAI,EAAGA,GAjBJ,GAiBgBA,IAU1B,IATA,IAAMC,EAAQlB,EAAEmB,IACdF,EACA,EApBQ,GAsBRjB,EAAEoB,WAAF,IACApB,EAAEoB,WAAF,KAEIC,EAAOrB,EAAEmB,IAAInB,EAAEsB,IAAItB,EAAEoB,WAAF,MAA+B,EAAG,EAAG,EAAG,GAExDG,EAAI,EAAIL,EAAOK,EAAIvB,EAAEwB,OAASN,EAAOK,GAAKvB,EAAEwB,OAASP,EAAG,KAAAQ,EAC9CC,YACfL,EACAA,EACAE,EACAvB,EAAEmB,IAAIF,EAAG,EAhCH,GAgCa,EAAc,KAAXjB,EAAEc,SAJlBa,EADuDF,EACvDE,EAAGC,EADoDH,EACpDG,EAOX5B,EAAE6B,aAAa7B,EAAEmB,IAAIF,EAAG,EAnChB,GAmC0B,GAAI,IACtCjB,EAAE8B,OAAO9B,EAAEmB,IAAInB,EAAEsB,IAAIC,IAAK,EAAG,EAAG,EAAG,KAAM,GAAI,IAE7CvB,EAAE+B,aACF/B,EAAEgC,OAAOL,EAAGC,GACZ5B,EAAEgC,QAAQL,EAAGC,GACb5B,EAAEgC,QAAQL,GAAIC,GACd5B,EAAEgC,OAAOL,GAAIC,GACb5B,EAAEiC,SAASjC,EAAEkC,UAMNC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAczC,OAAQA,EAAQ0C,KAAMJ,EAASK,SAAUC,YAAY,wCCvDrEC,EAAAC,EAAAV,EAAA,sBAAAW,IAAAF,EAAAC,EAAAV,EAAA,sBAAAY,IAAAH,EAAAC,EAAAV,EAAA,sBAAAa,IAAA,IAAMF,EAAoB,SAACG,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKC,IAAIH,GAASC,GAE9BJ,EAAoB,SAACE,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAK9B,IAAI4B,GAASC,GAa9BH,EAA0B,SAC9BM,EACAC,EACAL,EACAM,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAM/B,EAAI2B,EAAUF,KAAKC,IAAIH,GAASM,EAChC5B,EAAI2B,EAAUH,KAAK9B,IAAI4B,GAASO,EACtC,OAAOC,EAAU,CAAC/B,EAAGC,GAAK,CAAED,IAAGC,MAIlBF,IAzBU,SACvB4B,EACAC,EACAL,EACAC,EACAO,QACG,IADHA,OAAU,GAEV,IAAM/B,EAAImB,EAAkBQ,EAASJ,EAAOC,GACtCvB,EAAImB,EAAkBQ,EAASL,EAAOC,GAC5C,OAAOO,EAAU,CAAC/B,EAAGC,GAAK,CAAED,IAAGC","file":"component---src-pages-sketch-2019-05-28-js-25dcaa073640b67fadbc.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const RINGS = 10;\n  const SPEED = 10;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.noStroke();\n    p.noFill();\n    p.colorMode(p.HSB, 100);\n  };\n\n  p.draw = function() {\n    p.blendMode(p.BLEND);\n    p.background(255);\n    p.blendMode(p.HARD_LIGHT);\n\n    p.translate(p.width / 2, p.height / 2);\n    p.rotate(p.HALF_PI / 2);\n    for (let r = 1; r <= RINGS; r++) {\n      const START = p.map(\n        r,\n        1,\n        RINGS,\n        p.frameCount / (SPEED * 10),\n        p.frameCount / (SPEED * 100)\n      );\n      const DIST = p.map(p.sin(p.frameCount / (SPEED * 50)), -1, 1, 4, 1);\n\n      for (let a = 0 + START; a < p.TWO_PI + START; a += p.TWO_PI / r) {\n        const { x, y } = polarToCartesian(\n          DIST,\n          DIST,\n          a,\n          p.map(r, 1, RINGS, 0, p.height * 0.666)\n        );\n\n        p.strokeWeight(p.map(r, 1, RINGS, 20, 0));\n        p.stroke(p.map(p.sin(a), -1, 1, 0, 100), 75, 50);\n\n        p.beginShape();\n        p.vertex(x, y);\n        p.vertex(-x, y);\n        p.vertex(-x, -y);\n        p.vertex(x, -y);\n        p.endShape(p.CLOSE);\n      }\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/lib/easing.js","webpack:///./src/pages/sketch/2019/09/18.js"],"names":["linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","RENDER","process","DEV","sketch","p","innerMarginX","drawShape","i","animLoop","noise1D","noise2D","y","theta","height","magnitude","sin","beginShape","curveVertex","j","x","width","waveHeight","ease","map","abs","vertex","endShape","CLOSE","setup","pixelDensity","createCanvas","createLoop","gif","render","open","noiseRadius","draw","background","location","path","pathname","description"],"mappings":"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","file":"component---src-pages-sketch-2019-09-18-js-fb129e682056b646b283.js","sourcesContent":["// https://gist.github.com/gre/1650294\n\n// no easing, no acceleration\nconst linear = t => t;\n\n// accelerating from zero velocity\nconst easeInQuad = t => t * t;\n\n// decelerating to zero velocity\nconst easeOutQuad = t => t * (2 - t);\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\n// accelerating from zero velocity\nconst easeInCubic = t => t * t * t;\n\n// decelerating to zero velocity\nconst easeOutCubic = t => --t * t * t + 1;\n\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = t =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n// accelerating from zero velocity\nconst easeInQuart = t => t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuart = t => 1 - --t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = t =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\n// accelerating from zero velocity\nconst easeInQuint = t => t * t * t * t * t;\n\n// decelerating to zero velocity\nconst easeOutQuint = t => 1 + --t * t * t * t * t;\n\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = t =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport {\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport Link from \"~components/link\";\nimport { easeInOutQuint as ease } from \"~lib/easing\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && true;\nconst LINES = 50;\nconst POINTS = 10;\n\nconst sketch = function(p) {\n  let innerMarginX;\n\n  p.setup = function() {\n    RENDER && p.pixelDensity(1);\n    p.createCanvas(660, 840);\n\n    p.createLoop(20, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 2,\n    });\n\n    innerMarginX = p.width / POINTS;\n  };\n\n  function drawShape(i) {\n    const { noise1D, noise2D, theta } = p.animLoop;\n    const y = p.height * (i / LINES);\n    const magnitude = p.sin(p.animLoop.theta * 2);\n\n    p.beginShape();\n    p.curveVertex(-1, y);\n    p.curveVertex(-1, y);\n\n    for (let j = 0; j <= POINTS; j++) {\n      const x =\n        innerMarginX +\n        ((p.width - innerMarginX * 2) / POINTS) * j +\n        noise1D(j * y) * (p.width / POINTS / 3);\n      const waveHeight =\n        ease(\n          p.map(noise2D(x / 50, (p.height * (i / LINES)) / 50), -1, 1, 0, 1)\n        ) *\n        p.map(\n          p.abs(p.width / 2 - x),\n          0,\n          p.width / 2,\n          (p.height / LINES) * 6,\n          0\n        ) *\n        magnitude;\n      p.curveVertex(x, y + waveHeight);\n    }\n\n    p.curveVertex(p.width + 1, y);\n    p.curveVertex(p.width + 1, y);\n\n    if (magnitude < 0) {\n      p.vertex(p.width + 1, p.height + 1);\n      p.vertex(-1, p.height + 1);\n    } else {\n      p.vertex(p.width + 1, -1);\n      p.vertex(-1, -1);\n    }\n    p.endShape(p.CLOSE);\n  }\n\n  p.draw = function() {\n    const { theta } = p.animLoop;\n\n    p.background(255);\n\n    if (p.sin(theta * 2) < 0) {\n      for (let i = 0; i <= LINES; i++) {\n        drawShape(i);\n      }\n    } else {\n      for (let i = LINES; i >= 0; i--) {\n        drawShape(i);\n      }\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
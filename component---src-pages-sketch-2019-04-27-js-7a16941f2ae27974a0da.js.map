{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/27.js"],"names":["sketch","p","myFont","points","letter","random","split","colorOffset","preload","loadFont","withPrefix","setup","createCanvas","background","colorMode","HSB","strokeWeight","draw","stroke","map","sin","frameCount","sampleFactor","cos","textToPoints","_ref","x","y","corner","width","height","forEach","_ref2","i","line","__webpack_exports__","_ref3","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_4__","path","pathname","description"],"mappings":"6IAIMA,EAAS,SAASC,GACtB,IAEIC,EACAC,EAHEC,EAASH,EAAEI,OAAO,6BAA6BC,MAAM,KACrDC,EAAcN,EAAEI,OAAO,KAI7BJ,EAAEO,QAAU,WACVN,EAASD,EAAEQ,SAASC,YAAW,oCAGjCT,EAAEU,MAAQ,WACRV,EAAEW,aAAa,IAAK,KACpBX,EAAEY,WAAW,GACbZ,EAAEa,UAAUb,EAAEc,IAAK,KACnBd,EAAEe,aAAa,KAGjBf,EAAEgB,KAAO,WACPhB,EAAEiB,OACAjB,EAAEkB,IAAIlB,EAAEmB,KAAKnB,EAAEoB,WAAad,GAAe,MAAQ,EAAG,EAAG,EAAG,KAC5D,GACA,KAEF,IAAMe,EAAerB,EAAEkB,IAAIlB,EAAEsB,IAAItB,EAAEoB,WAAa,MAAO,EAAG,EAAG,EAAG,KAUhElB,GATAA,EAASD,EAAOsB,aACdpB,EAAS,IAAMH,EAAEI,OAAO,mBAAmBC,MAAM,KACjD,GACA,IACA,IACA,CACEgB,kBAGYH,IAAI,SAAAM,GAAA,MAAe,CACjCC,EADkBD,EAAGC,EAErBC,EAFkBF,EAAME,EAGxBC,OAAQ3B,EAAEI,OAAO,CACf,CACEqB,EAAG,EACHC,EAAG,GAEL,CACED,EAAGzB,EAAE4B,MACLF,EAAG,GAEL,CACED,EAAG,EACHC,EAAG1B,EAAE6B,QAEP,CACEJ,EAAGzB,EAAE4B,MACLF,EAAG1B,EAAE6B,cAKJC,QAAQ,SAAAC,EAAmBC,GAAM,IAAtBP,EAAsBM,EAAtBN,EAAGC,EAAmBK,EAAnBL,EAAmBK,EAAhBJ,OAClBzB,EAAO8B,EAAI,IACbhC,EAAEiC,KAAKR,EAAGC,EAAGxB,EAAO8B,EAAI,GAAGP,EAAGvB,EAAO8B,EAAI,GAAGN,OAMrCQ,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CACExC,OAAQA,EACRyC,KAAMJ,EAASK,SACfC,YAAY","file":"component---src-pages-sketch-2019-04-27-js-7a16941f2ae27974a0da.js","sourcesContent":["import React from \"react\";\nimport { withPrefix } from \"gatsby\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const letter = p.random(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\"));\n  const colorOffset = p.random(1000000);\n  let myFont;\n  let points;\n\n  p.preload = function() {\n    myFont = p.loadFont(withPrefix(\"/assets/Cousine-BoldItalic.otf\"));\n  };\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.colorMode(p.HSB, 100);\n    p.strokeWeight(0.1);\n  };\n\n  p.draw = function() {\n    p.stroke(\n      p.map(p.sin((p.frameCount + colorOffset) / 1000), -1, 1, 0, 100),\n      50,\n      100\n    );\n    const sampleFactor = p.map(p.cos(p.frameCount / 100), -1, 1, 0, 0.1);\n    points = myFont.textToPoints(\n      letter + \" \" + p.random(\"!@#$%^&*()-+{}[]\".split(\"\")),\n      20,\n      625,\n      900,\n      {\n        sampleFactor,\n      }\n    );\n    points = points.map(({ x, y }) => ({\n      x,\n      y,\n      corner: p.random([\n        {\n          x: 0,\n          y: 0,\n        },\n        {\n          x: p.width,\n          y: 0,\n        },\n        {\n          x: 0,\n          y: p.height,\n        },\n        {\n          x: p.width,\n          y: p.height,\n        },\n      ]),\n    }));\n\n    points.forEach(({ x, y, corner }, i) => {\n      if (points[i + 1]) {\n        p.line(x, y, points[i + 1].x, points[i + 1].y);\n      }\n    });\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different letter.\"\n  />\n);\n"],"sourceRoot":""}
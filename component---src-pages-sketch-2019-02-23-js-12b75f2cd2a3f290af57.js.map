{"version":3,"sources":["webpack:///./src/pages/sketch/2019/02/23.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/alternate.js"],"names":["sketch","p","axis","distance","hueA","hueB","setup","createCanvas","noFill","background","colorMode","HSB","blendMode","HARD_LIGHT","dist","width","height","random","drawShapes","nfn","beginShape","r","TWO_PI","polarToCartesian","noise","frameCount","x","y","vertex","endShape","draw","alternate","stroke","map","tan","Math","cos","sin","noLoop","location","path","pathname","description","polarToCartesianX","center","angle","polarToCartesianY","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","functionA","functionB"],"mappings":"+IAKMA,EAAS,SAASC,GACtB,IAGIC,EACAC,EACAC,EACAC,EAEJJ,EAAEK,MAAQ,WACRL,EAAEM,aAAa,IAAK,KAEpBN,EAAEO,SACFP,EAAEQ,WAAW,KACbR,EAAES,UAAUT,EAAEU,IAAK,KACnBV,EAAEW,UAAUX,EAAEY,YACdV,EAA6C,EAAlCF,EAAEa,KAAK,EAAG,EAAGb,EAAEc,MAAOd,EAAEe,QACnCZ,EAAOH,EAAEgB,OAAO,EAAG,IACnBZ,EAAOJ,EAAEgB,OAAO,GAAI,KACpBf,EAAO,EAAED,EAAEc,MAAQ,GAAId,EAAEe,OAAS,IAGpC,IAAME,EAAa,SAAAC,GACjBlB,EAAEmB,aACF,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAEqB,OAAQD,GAvBlB,GAuB+B,EAAG,CAAC,IAAD,EAC3BE,IAAgB,WAAhB,EACZrB,EADY,QAEfmB,EAAIpB,EAAEuB,MAAMrB,EAAW,IAAMgB,EAAIE,EAAIpB,EAAEwB,WAAa,MACpDtB,EAAWF,EAAEuB,MAAMH,EAAI,IAAMF,EAAIE,EAAIpB,EAAEwB,WAAa,SAH9CC,EADoC,EACpCA,EAAGC,EADiC,EACjCA,EAKX1B,EAAE2B,OAAOF,EAAGC,GAEd1B,EAAE4B,YAGJ5B,EAAE6B,KAAO,WACPC,YACE9B,EAAEwB,YACF,WACExB,EAAE+B,OACA5B,EACAH,EAAEgC,IAAIhC,EAAEiC,IAAIjC,EAAEwB,WAAa,MAAO,EAAG,EAAG,GAAI,IAC5C,GAxCM,IA2CRP,EAAWiB,KAAKC,QAElB,WACEnC,EAAE+B,OACA3B,EACAJ,EAAEgC,IAAIhC,EAAEiC,IAAIjC,EAAEwB,WAAa,MAAO,EAAG,EAAG,GAAI,IAC5C,GAjDM,IAoDRP,EAAWiB,KAAKE,SAGpBlC,GAxDY,IA0DGF,EAAEa,KAAF,MAAAb,EAAC,CAAM,EAAG,GAAT,OAAeC,KAC7BD,EAAEqC,WAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACEvC,OAAQA,EACRwC,KAAMD,EAASE,SACfC,YAAY,gE,iCC1EhB,0GAAMC,EAAoB,SAACC,EAAQC,EAAO1C,GACxC,OAAOyC,EAAST,KAAKC,IAAIS,GAAS1C,GAE9B2C,EAAoB,SAACF,EAAQC,EAAO1C,GACxC,OAAOyC,EAAST,KAAKE,IAAIQ,GAAS1C,GAa9B4C,EAA0B,SAC9BC,EACAC,EACAJ,EACAK,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAM1B,EAAIsB,EAAUb,KAAKC,IAAIS,GAASK,EAChCvB,EAAIsB,EAAUd,KAAKE,IAAIQ,GAASM,EACtC,OAAOC,EAAU,CAAC1B,EAAGC,GAAK,CAAED,IAAGC,MAIlBJ,IAzBU,SACvByB,EACAC,EACAJ,EACA1C,EACAiD,QACG,IADHA,OAAU,GAEV,IAAM1B,EAAIiB,EAAkBK,EAASH,EAAO1C,GACtCwB,EAAImB,EAAkBG,EAASJ,EAAO1C,GAC5C,OAAOiD,EAAU,CAAC1B,EAAGC,GAAK,CAAED,IAAGC,O,iCCflB,SAASI,EAAUN,EAAY4B,EAAWC,GACnD7B,EAAa,GACf4B,IACAC,MAEAA,IACAD,KANJ","file":"component---src-pages-sketch-2019-02-23-js-12b75f2cd2a3f290af57.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\nimport alternate from \"~lib/alternate\";\n\nconst sketch = function(p) {\n  const SPEED = 0.4;\n  const ALPHA = 10;\n\n  let axis;\n  let distance;\n  let hueA;\n  let hueB;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n\n    p.noFill();\n    p.background(240);\n    p.colorMode(p.HSB, 100);\n    p.blendMode(p.HARD_LIGHT);\n    distance = p.dist(0, 0, p.width, p.height) * 3;\n    hueA = p.random(0, 49);\n    hueB = p.random(50, 100);\n    axis = [-p.width / 3, -p.height / 3];\n  };\n\n  const drawShapes = nfn => {\n    p.beginShape();\n    for (let r = 0; r < p.TWO_PI; r += SPEED / 3) {\n      const { x, y } = polarToCartesian(\n        ...axis,\n        r * p.noise(distance / 1000, nfn(r + p.frameCount / 1000)),\n        distance * p.noise(r / 1000, nfn(r + p.frameCount / 500))\n      );\n      p.vertex(x, y);\n    }\n    p.endShape();\n  };\n\n  p.draw = function() {\n    alternate(\n      p.frameCount,\n      () => {\n        p.stroke(\n          hueA,\n          p.map(p.tan(p.frameCount / 300), -1, 1, 66, 33),\n          66,\n          ALPHA\n        );\n        drawShapes(Math.cos);\n      },\n      () => {\n        p.stroke(\n          hueB,\n          p.map(p.tan(p.frameCount / 300), -1, 1, 33, 66),\n          66,\n          ALPHA\n        );\n        drawShapes(Math.sin);\n      }\n    );\n    distance -= SPEED;\n\n    if (distance < p.dist(0, 0, ...axis)) {\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Be patient. Sometimes this one starts drawing off-canvas.\"\n  />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","export default function alternate(frameCount, functionA, functionB) {\n  if (frameCount % 2) {\n    functionA();\n    functionB();\n  } else {\n    functionB();\n    functionA();\n  }\n}\n"],"sourceRoot":""}
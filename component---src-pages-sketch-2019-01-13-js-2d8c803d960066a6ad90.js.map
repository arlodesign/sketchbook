{"version":3,"sources":["webpack:///./src/pages/sketch/2019/01/13.js"],"names":["sketch","p","maxDist","gridSize","vectors","setup","pixelDensity","createCanvas","floor","random","x","y","xc","width","yc","height","dist","push","vector","createVector","reached","reachedBy","background","strokeWeight","fill","draw","ellipse","stroke","filter","v","forEach","_ref","point","pop","reachedByIndex","unreachedIndex","shortestDist","uv","ui","rv","ri","thisDist","_ref2","i","_vectors$reachedBy$ve","noFill","line","triangle","length","noLoop","__webpack_exports__","_ref3","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description"],"mappings":"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","file":"component---src-pages-sketch-2019-01-13-js-2d8c803d960066a6ad90.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  let vectors = [];\n  let maxDist;\n  let gridSize;\n  let showDots = true;\n\n  p.setup = function() {\n    p.pixelDensity(1);\n    p.createCanvas(660, 840);\n    gridSize = p.floor(p.random(25, 50));\n    for (let x = 0; x <= gridSize; x++) {\n      for (let y = 0; y <= gridSize; y++) {\n        const xc = p.floor((p.width / gridSize) * x);\n        const yc = p.floor((p.height / gridSize) * y);\n        if (\n          p.dist(xc, yc, p.width / 2, p.height / 2) < p.width / 2 - 100 &&\n          p.random() < 0.5\n        ) {\n          vectors.push({\n            vector: p.createVector(xc, yc),\n            reached: false,\n            reachedBy: 0,\n          });\n        }\n      }\n    }\n    vectors[0].reached = true;\n    vectors[0].reachedBy = -1;\n    maxDist = p.dist(0, 0, p.width, p.height);\n    p.background(0);\n    p.strokeWeight(2);\n    p.fill(0);\n  };\n\n  p.draw = function() {\n    p.fill(255);\n    p.ellipse(\n      p.width / 2,\n      p.height / 2,\n      p.width / 2 + 100 + (p.width / gridSize) * 8\n    );\n    p.push();\n    p.stroke(showDots ? \"red\" : 255);\n    vectors\n      .filter(v => !v.reached)\n      .forEach(({ vector }) => p.point(vector.x, vector.y));\n    p.pop();\n    let shortestDist = maxDist;\n    let reachedByIndex;\n    let unreachedIndex;\n    vectors.forEach((uv, ui) => {\n      if (!uv.reached) {\n        vectors.forEach((rv, ri) => {\n          if (rv.reached) {\n            const thisDist = p.dist(\n              uv.vector.x,\n              uv.vector.y,\n              rv.vector.x,\n              rv.vector.y\n            );\n            if (thisDist < shortestDist) {\n              shortestDist = thisDist;\n              unreachedIndex = ui;\n              reachedByIndex = ri;\n            }\n          }\n        });\n      }\n    });\n    vectors[unreachedIndex].reached = true;\n    vectors[unreachedIndex].reachedBy = reachedByIndex;\n\n    vectors.forEach(({ vector, reached, reachedBy }, i) => {\n      if (reached && reachedBy > -1) {\n        const { x, y } = vectors[reachedBy].vector;\n        p.stroke(0);\n        p.strokeWeight(2);\n        p.noFill();\n        p.line(vector.x, vector.y, x, y);\n        p.fill(0);\n        p.strokeWeight(1);\n        p.triangle(vector.x, vector.y, x, y, x, vector.y);\n        if ((vector.x === x || vector.y === y) && i % 4 === 0) {\n          p.ellipse(x, y, p.dist(x, y, vector.x, vector.y));\n        }\n      }\n    });\n    if (vectors.filter(v => v.reached).length === vectors.length) {\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Reload page for a different variation.\" />\n);\n"],"sourceRoot":""}
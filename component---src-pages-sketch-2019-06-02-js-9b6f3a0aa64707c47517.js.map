{"version":3,"sources":["webpack:///./src/pages/sketch/2019/06/02.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./src/lib/polarToCartesian.js"],"names":["sketch","p","particles","Particle","x","y","hue","this","velocity","createVector","random","position","move","prev","add","map","noise","frameCount","mult","display","stroke","cos","strokeWeight","dist","width","height","line","setup","createCanvas","a","TWO_PI","push","polarToCartesian","background","draw","forEach","particle","location","path","pathname","description","href","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","apply","proto","prototype","instance","Object","result","Function","call","polarToCartesianX","center","angle","distance","Math","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray"],"mappings":"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","file":"component---src-pages-sketch-2019-06-02-js-9b6f3a0aa64707c47517.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport Link from \"~components/link\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  let multiplier = 0.97;\n  let particles = [];\n\n  class Particle {\n    constructor(x, y, hue) {\n      this.x = x;\n      this.y = y;\n\n      this.velocity = p.createVector(p.random(-1, 1), p.random(-1, 1));\n      this.position = p.createVector(this.x, this.y);\n    }\n\n    move() {\n      this.prev = { x: this.position.x, y: this.position.y };\n      this.velocity.add(\n        p.createVector(\n          p.map(\n            p.noise(\n              this.position.x / 300,\n              this.position.y / 200,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          ),\n          p.map(\n            p.noise(\n              this.position.x / 200,\n              this.position.y / 300,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          )\n        )\n      );\n      this.velocity.mult(multiplier, multiplier);\n      this.position.add(this.velocity);\n    }\n\n    display() {\n      const { x, y } = this.position;\n      p.stroke(p.map(p.cos(p.frameCount / 500), -1, 1, 0, 255));\n      p.strokeWeight(\n        p.map(\n          p.dist(x, y, p.width / 2, p.height / 2),\n          0,\n          p.dist(0, 0, p.width / 2, p.height / 2),\n          5,\n          10\n        )\n      );\n      p.line(this.prev.x, this.prev.y, x, y);\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    for (let a = 0; a < p.TWO_PI; a += p.TWO_PI / 50) {\n      particles.push(\n        new Particle(\n          ...polarToCartesian(p.width / 2, p.height / 2, a, 10, true)\n        )\n      );\n    }\n    p.background(0);\n  };\n\n  p.draw = function() {\n    particles.forEach(particle => {\n      particle.move();\n      particle.display();\n    });\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description={\n      <>\n        Reload page for a different variation.\n        <br />\n        Inspired by{\" \"}\n        <Link href=\"https://github.com/wangyasai\">Yasaiâ€™s work</Link>.\n      </>\n    }\n  />\n);\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/05/24.js"],"names":["sketch","p","grid","next","HUE","random","laplaceA","x","y","sumA","a","laplaceB","sumB","b","setup","pixelDensity","createCanvas","colorMode","HSB","width","height","q","floor","i","j","draw","background","constrain","temp","loadPixels","PIX","c","map","pixels","red","color","green","blue","updatePixels","SketchPage","href"],"mappings":"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","file":"component---src-pages-sketch-2019-05-24-js-f03693519315bcdaeda1.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\n\nconst sketch = function(p) {\n  let grid;\n  let next;\n\n  const dA = 1;\n  const dB = 0.5;\n  const feed = 0.055;\n  const k = 0.062;\n  const SEED_SIZE = 20;\n  const HUE = p.random(100);\n\n  function laplaceA(x, y) {\n    var sumA = 0;\n    sumA += grid[x][y].a * -1;\n    sumA += grid[x - 1][y].a * 0.2;\n    sumA += grid[x + 1][y].a * 0.2;\n    sumA += grid[x][y + 1].a * 0.2;\n    sumA += grid[x][y - 1].a * 0.2;\n    sumA += grid[x - 1][y - 1].a * 0.05;\n    sumA += grid[x + 1][y - 1].a * 0.05;\n    sumA += grid[x + 1][y + 1].a * 0.05;\n    sumA += grid[x - 1][y + 1].a * 0.05;\n    return sumA;\n  }\n\n  function laplaceB(x, y) {\n    var sumB = 0;\n    sumB += grid[x][y].b * -1;\n    sumB += grid[x - 1][y].b * 0.2;\n    sumB += grid[x + 1][y].b * 0.2;\n    sumB += grid[x][y + 1].b * 0.2;\n    sumB += grid[x][y - 1].b * 0.2;\n    sumB += grid[x - 1][y - 1].b * 0.05;\n    sumB += grid[x + 1][y - 1].b * 0.05;\n    sumB += grid[x + 1][y + 1].b * 0.05;\n    sumB += grid[x - 1][y + 1].b * 0.05;\n    return sumB;\n  }\n\n  p.setup = function() {\n    p.pixelDensity(1);\n    p.createCanvas(330, 420);\n    p.colorMode(p.HSB, 100);\n\n    grid = [];\n    next = [];\n\n    for (let x = 0; x < p.width; x++) {\n      grid[x] = [];\n      next[x] = [];\n      for (let y = 0; y < p.height; y++) {\n        grid[x][y] = {\n          a: 1,\n          b: 0,\n        };\n        next[x][y] = {\n          a: 1,\n          b: 0,\n        };\n      }\n    }\n\n    for (let q = 0; q < 100; q++) {\n      let x = p.floor(p.random(1, p.width - SEED_SIZE + 1));\n      let y = p.floor(p.random(1, p.height - SEED_SIZE + 1));\n      for (let i = x; i < x + SEED_SIZE; i++) {\n        for (let j = y; j < y + SEED_SIZE; j++) {\n          grid[i][j].b = 1;\n        }\n      }\n    }\n  };\n\n  p.draw = function() {\n    p.background(HUE, 50, 0);\n\n    for (let i = 0; i < 10; i++) {\n      for (let x = 1; x < p.width - 1; x++) {\n        for (let y = 1; y < p.height - 1; y++) {\n          let a = grid[x][y].a;\n          let b = grid[x][y].b;\n\n          next[x][y].a = a + dA * laplaceA(x, y) - a * b * b + feed * (1 - a);\n          next[x][y].b = b + dB * laplaceB(x, y) + a * b * b - (k + feed) * b;\n          next[x][y].a = p.constrain(next[x][y].a, 0, 1);\n          next[x][y].b = p.constrain(next[x][y].b, 0, 1);\n        }\n      }\n      const temp = grid;\n      grid = next;\n      next = temp;\n    }\n\n    p.loadPixels();\n    for (let x = 0; x < p.width; x++) {\n      for (let y = 0; y < p.height; y++) {\n        const PIX = (x + y * p.width) * 4;\n        const { a, b } = next[x][y];\n\n        let c = p.floor((a - b) * 100);\n        c = p.map((c * c) / 100, 50, 100, 25, 75, true);\n\n        p.pixels[PIX + 0] = p.red(p.color(HUE, 50, c));\n        p.pixels[PIX + 1] = p.green(p.color(HUE, 50, c));\n        p.pixels[PIX + 2] = p.blue(p.color(HUE, 50, c));\n        p.pixels[PIX + 3] = 255;\n      }\n    }\n    p.updatePixels();\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n    <p>\n      Experimenting with{\" \"}\n      <a href=\"https://github.com/CodingTrain/website/blob/master/CodingChallenges/CC_013_ReactionDiffusion/P5/sketch.js\">\n        Reaction Diffusion\n      </a>\n      . This runs <em>slow</em>.\n    </p>\n  </Layout>\n);\n\nexport default SketchPage;\n"],"sourceRoot":""}
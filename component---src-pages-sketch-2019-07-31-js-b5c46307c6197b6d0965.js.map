{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/31.js"],"names":["RENDER","process","DEV","sketch","p","GRID","boxes","Box","x","y","this","rotate","random","TWO_PI","HALF_PI","canvas","createGraphics","strokeCap","PROJECT","draw","background","push","translate","animLoop","noise2D","i","strokeWeight","map","cos","theta","line","pop","image","setup","pixelDensity","frameRate","createCanvas","createLoop","gif","render","open","noiseRadius","width","height","forEach","b","SketchPage"],"mappings":"4FAAA,wDAKMA,GALN,UAKeC,GAAYC,MAAO,GAE5BC,EAAS,SAASC,GACtB,IAAMC,EAAO,GAETC,EAAQ,GAENC,EALmB,WAMvB,WAAYC,EAAGC,GACbC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKC,OAASP,EAAEQ,OAAO,CAACR,EAAES,OAAQT,EAAEU,UACpCJ,KAAKK,OAASX,EAAEY,eAAeX,EAAMA,GACrCK,KAAKK,OAAOE,UAAUb,EAAEc,SAXH,mBAcvBC,KAAA,WACET,KAAKK,OAAOK,WAAW,KACvBV,KAAKK,OAAOM,OACZX,KAAKK,OAAOO,UAAUjB,EAAO,EAAGA,EAAO,GACvCK,KAAKK,OAAOJ,OAAOD,KAAKC,OAASP,EAAEmB,SAASC,QAAQd,KAAKF,EAAGE,KAAKD,IAEjE,IAAK,IAAIgB,GAAKpB,EAAMoB,GAAKpB,EAAMoB,GAAKpB,EAAO,EACzCK,KAAKK,OAAOW,aACVtB,EAAEuB,IACAF,GACCpB,EACDA,EACAD,EAAEuB,IAAIvB,EAAEwB,IAAIxB,EAAEmB,SAASM,QAAS,EAAG,EAAGxB,EAAO,EAAG,GAChDD,EAAEuB,IAAIvB,EAAEwB,IAAIxB,EAAEmB,SAASM,QAAS,EAAG,EAAG,EAAGxB,EAAO,KAIpDK,KAAKK,OAAOe,MAAMzB,EAAMoB,EAAGpB,EAAMoB,GAGnCf,KAAKK,OAAOgB,MAEZ3B,EAAE4B,MAAMtB,KAAKK,OAAQL,KAAKF,EAAGE,KAAKD,IApCb,KAwCzBL,EAAE6B,MAAQ,WACJjC,IACFI,EAAE8B,aAAa,GACf9B,EAAE+B,UAAU,KAGd/B,EAAEgC,aAAa,IAAK,KAEpBhC,EAAEiC,WAAW,EAAG,CACdC,MAAKtC,GAAS,CAAEuC,QAAQ,EAAOC,MAAM,GACrCC,YAAa,KAGf,IAAK,IAAIjC,EAAI,EAAGA,EAAIJ,EAAEsC,MAAOlC,GAAKH,EAChC,IAAK,IAAII,EAAI,EAAGA,EAAIL,EAAEuC,OAAQlC,GAAKJ,EACjCC,EAAMe,KAAK,IAAId,EAAIC,EAAGC,KAK5BL,EAAEe,KAAO,WACPf,EAAEgB,WAAW,KAEbd,EAAMsC,SAAQ,SAAAC,GAAC,OAAIA,EAAE1B,YAUV2B,UANI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ3C,OAAQA","file":"component---src-pages-sketch-2019-07-31-js-b5c46307c6197b6d0965.js","sourcesContent":["import React from \"react\";\nimport Layout from \"~components/layout\";\nimport Sketch from \"~components/sketch\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  const GRID = 60;\n\n  let boxes = [];\n\n  class Box {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.rotate = p.random([p.TWO_PI, p.HALF_PI]);\n      this.canvas = p.createGraphics(GRID, GRID);\n      this.canvas.strokeCap(p.PROJECT);\n    }\n\n    draw() {\n      this.canvas.background(255);\n      this.canvas.push();\n      this.canvas.translate(GRID / 2, GRID / 2);\n      this.canvas.rotate(this.rotate * p.animLoop.noise2D(this.x, this.y));\n\n      for (let i = -GRID; i <= GRID; i += GRID / 5) {\n        this.canvas.strokeWeight(\n          p.map(\n            i,\n            -GRID,\n            GRID,\n            p.map(p.cos(p.animLoop.theta), -1, 1, GRID / 3, 0),\n            p.map(p.cos(p.animLoop.theta), -1, 1, 0, GRID / 3)\n          )\n        );\n\n        this.canvas.line(-GRID, i, GRID, i);\n      }\n\n      this.canvas.pop();\n\n      p.image(this.canvas, this.x, this.y);\n    }\n  }\n\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n\n    p.createLoop(5, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.3,\n    });\n\n    for (let x = 0; x < p.width; x += GRID) {\n      for (let y = 0; y < p.height; y += GRID) {\n        boxes.push(new Box(x, y));\n      }\n    }\n  };\n\n  p.draw = function() {\n    p.background(255);\n\n    boxes.forEach(b => b.draw());\n  };\n};\n\nconst SketchPage = () => (\n  <Layout>\n    <Sketch sketch={sketch} />\n  </Layout>\n);\n\nexport default SketchPage;\n"],"sourceRoot":""}
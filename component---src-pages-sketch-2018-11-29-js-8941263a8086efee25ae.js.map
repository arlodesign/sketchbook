{"version":3,"sources":["webpack:///./src/pages/sketch/2018/11/29.js"],"names":["sketch","p","rotationIncrement","rotation","equilateralTriangle","x","y","radius","triangle","Math","sqrt","setup","createCanvas","noFill","angleMode","DEGREES","draw","background","map","mouseX","width","mouseY","height","floor","h","ceil","w","push","translate","rotate","pop","touchMoved","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description"],"mappings":"8HAGMA,EAAS,SAASC,GACtB,IAEIC,EADAC,EAAW,EAGf,SAASC,EAAoBC,EAAGC,EAAGC,GACjCN,EAAEO,SACAH,EACAC,EAAIC,EACJF,EAAKI,KAAKC,KAAK,GAAK,EAAKH,EACzBD,EAAIC,EAAS,EACbF,EAAKI,KAAKC,KAAK,GAAK,EAAKH,EACzBD,EAAIC,EAAS,GAIjBN,EAAEU,MAAQ,WACRV,EAAEW,aAAa,IAAK,KACpBX,EAAEY,SACFZ,EAAEa,UAAUb,EAAEc,UAGhBd,EAAEe,KAAO,WACPf,EAAEgB,WAAW,SACbd,EAAWF,EAAEiB,IAAIjB,EAAEkB,OAAQ,EAAGlB,EAAEmB,MAAO,EAAG,IAC1ClB,EAAoBD,EAAEiB,IACpBjB,EAAEoB,OACF,EACApB,EAAEqB,OACF,EACA,IAAMb,KAAKc,MAAMtB,EAAEmB,MA7BX,IA6B0BX,KAAKc,MAAMtB,EAAEqB,OA7BvC,MA+BV,IAAK,IAAIE,EAAI,EAAGA,EAAIf,KAAKgB,KAAKxB,EAAEqB,OAAF,IAAwB,EAAGE,GAAK,EAC5D,IAAK,IAAIE,EAAI,EAAGA,EAAIjB,KAAKgB,KAAKxB,EAAEmB,MAAF,IAAuB,EAAGM,GAAK,EAAG,CAC9D,IAAMrB,EAAK,GAADqB,EACJpB,EAAK,GAADkB,EACVvB,EAAE0B,OACF1B,EAAE2B,UAAUvB,EAAGC,GACfL,EAAE4B,OAAO1B,GACTC,EAAoB,EAAG,EAtCjB,IAuCNH,EAAE6B,MACF3B,GAAYD,IAKlBD,EAAE8B,WAAa,WACb,GACE9B,EAAEkB,QAAU,GACZlB,EAAEoB,QAAU,GACZpB,EAAEkB,QAAUlB,EAAEmB,OACdnB,EAAEoB,QAAUpB,EAAEqB,OAEd,OAAO,IAKEU,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAcrC,OAAQA,EAAQsC,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2018-11-29-js-8941263a8086efee25ae.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const tri = 20;\n  let rotation = 0;\n  let rotationIncrement;\n\n  function equilateralTriangle(x, y, radius) {\n    p.triangle(\n      x,\n      y - radius,\n      x - (Math.sqrt(3) / 2) * radius,\n      y + radius / 2,\n      x + (Math.sqrt(3) / 2) * radius,\n      y + radius / 2\n    );\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.noFill();\n    p.angleMode(p.DEGREES);\n  };\n\n  p.draw = function() {\n    p.background(\"white\");\n    rotation = p.map(p.mouseX, 0, p.width, 0, 60);\n    rotationIncrement = p.map(\n      p.mouseY,\n      0,\n      p.height,\n      0,\n      60 / (Math.floor(p.width / tri) * Math.floor(p.height / tri))\n    );\n    for (let h = 0; h < Math.ceil(p.height / (tri / 2)) + 2; h += 2) {\n      for (let w = 0; w < Math.ceil(p.width / (tri / 2)) + 2; w += 2) {\n        const x = w * (tri / 2);\n        const y = h * (tri / 2);\n        p.push();\n        p.translate(x, y);\n        p.rotate(rotation);\n        equilateralTriangle(0, 0, tri);\n        p.pop();\n        rotation += rotationIncrement;\n      }\n    }\n  };\n\n  p.touchMoved = function() {\n    if (\n      p.mouseX >= 0 &&\n      p.mouseY >= 0 &&\n      p.mouseX <= p.width &&\n      p.mouseY <= p.height\n    ) {\n      return false;\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Move pointer or finger over sketch.\" />\n);\n"],"sourceRoot":""}
(window.webpackJsonp=window.webpackJsonp||[]).push([[370],{13:function(n,e,i){"use strict";e.a="#ifdef GL_ES\nprecision mediump float;\n#define GLSLIFY 1\n#endif\n\nattribute vec3 aPosition;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  positionVec4.xy = positionVec4.xy * 2.0 - 1.0;\n  gl_Position = positionVec4;\n}"},491:function(n,e,i){"use strict";i.r(e);var o=i(0),t=i.n(o),s=(i(3),i(13));new t.a((function(n){var e,i=n.getURLParams().render;n.setup=function(){n.frameRate(30),n.createCanvas(n.windowWidth,n.windowHeight,n.WEBGL),n.noStroke(),n.createLoop(20,{gif:!!i&&{render:!1,open:!0},noiseRadius:.1}),e=n.createShader(s.a,"#ifdef GL_ES\nprecision mediump float;\n#define GLSLIFY 1\n#endif\n\nuniform vec2 u_resolution;\nuniform float u_theta;\nuniform float u_noise;\n\nvoid main() {\n  vec2 st = gl_FragCoord.xy/u_resolution;\n\n  st *= 15.0 * u_noise;\n\n  float r = abs(sin(u_theta + st.x));\n  float g = abs(sin(u_theta * 2.0));\n  float b = abs(sin(u_theta + st.y));\n\n  vec4 color = vec4(r, g, b, 1.0) * abs(cos(((u_theta * 2.0) + (st.x + st.y)) ));\n  gl_FragColor = color;\n}")},n.draw=function(){var i=n.animLoop,o=(i.progress,i.theta),t=i.noise;n.background(255),n.shader(e),e.setUniform("u_resolution",[n.width,n.height]),e.setUniform("u_theta",o),e.setUniform("u_noise",n.map(t(),-1,1,0,1)),n.rect(0,0,n.width,n.height)},n.windowResized=function(){n.resizeCanvas(n.windowWidth,n.windowHeight)}}),"sketch")}},[[491,0,1]]]);
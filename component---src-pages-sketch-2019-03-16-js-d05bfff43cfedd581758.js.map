{"version":3,"sources":["webpack:///./src/pages/sketch/2019/03/16.js"],"names":["sketch","p","colors","particles","Particle","this","vector","createVector","randomGaussian","width","height","velocity","random","onCanvas","draw","x","y","size","map","dist","ellipse","add","noise","frameCount","setup","createCanvas","colorMode","HSB","color","background","Array","from","length","noStroke","fill","lerpColor","sin","forEach","filter","P_COUNT","noLoop","location","path","pathname","description"],"mappings":"g9BAGA,IAAMA,EAAS,SAASC,GACtB,IAGIC,EAAS,GACTC,EAAY,GAEVC,EAPmB,WAQvB,aACEC,KAAKC,OAASL,EAAEM,aACdN,EAAEO,eAAyB,KAAVP,EAAEQ,MARV,IASTR,EAAEO,eAA0B,KAAXP,EAAES,OATV,KAWXL,KAAKM,SAAWV,EAAEM,aAAaN,EAAEW,QAAQ,EAAG,GAAIX,EAAEW,QAAQ,EAAG,IAC7DP,KAAKQ,UAAW,EAdK,mBAgBvBC,KAAA,WAAQ,IAAD,EACYT,KAAKC,OAAdS,EADH,EACGA,EAAGC,EADN,EACMA,EACLC,EAAOhB,EAAEiB,IACbjB,EAAEkB,KAAKJ,EAAGC,EAAa,KAAVf,EAAEQ,MAA0B,KAAXR,EAAES,QAChC,EACAT,EAAEkB,KAAK,EAAG,EAAa,KAAVlB,EAAEQ,MAA0B,KAAXR,EAAES,QAChC,EApBS,IAwBPL,KAAKQ,WACPZ,EAAEmB,QAAQL,EAAGC,EAAGC,GAChBZ,KAAKC,OAAOe,IAAIhB,KAAKM,UACrBN,KAAKM,SAASU,IACZpB,EAAEiB,IAAIjB,EAAEqB,MAAMrB,EAAEsB,WAAa,IAAKR,EAAI,GAAIC,EAAI,IAAK,EAAG,GAAI,IAAM,KAChEf,EAAEiB,IAAIjB,EAAEqB,MAAMrB,EAAEsB,WAAa,IAAKP,EAAI,GAAID,EAAI,IAAK,EAAG,GAAI,IAAM,QAIjEA,GAjCQ,IAiCOA,EAAId,EAAEQ,MAjCb,MAkCRO,GAlCQ,IAkCOA,EAAIf,EAAES,OAlCb,MAoCTL,KAAKQ,UAAW,IAtCG,KA2CzBZ,EAAEuB,MAAQ,WACRvB,EAAEwB,aAAa,IAAK,KACpBxB,EAAEyB,UAAUzB,EAAE0B,IAAK,KACnBzB,EAAS,CACPD,EAAE2B,MAAM3B,EAAEW,OAAO,EAAG,IAAK,GAAI,IAC7BX,EAAE2B,MAAM3B,EAAEW,OAAO,GAAI,KAAM,GAAI,KAEjCX,EAAE4B,WAAW3B,EAAO,IACpBC,EAAY2B,MAAMC,KAAK,CAAEC,OAlDX,MAkD8B,kBAAM,IAAI5B,KACtDH,EAAEgC,YAGJhC,EAAEa,KAAO,WACPb,EAAEiC,KACAjC,EAAEkC,UAAF,MAAAlC,EAAC,EAAcC,GAAd,QAAsBD,EAAEiB,IAAIjB,EAAEmC,IAAInC,EAAEsB,WAAa,MAAO,EAAG,EAAG,EAAG,OAEpEpB,EAAUkC,SAAQ,SAAApC,GAAC,OAAIA,EAAEa,UACrBX,EAAUmC,QAAO,SAAArC,GAAC,OAAKA,EAAEY,YAAUmB,OAASO,KAC9CtC,EAAEuC,WAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACEzC,OAAQA,EACR0C,KAAMD,EAASE,SACfC,YAAY","file":"component---src-pages-sketch-2019-03-16-js-d05bfff43cfedd581758.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const P_COUNT = 500;\n  const P_SIZE = 30;\n\n  let colors = [];\n  let particles = [];\n\n  class Particle {\n    constructor() {\n      this.vector = p.createVector(\n        p.randomGaussian(p.width * 0.666, P_SIZE),\n        p.randomGaussian(p.height * 0.666, P_SIZE)\n      );\n      this.velocity = p.createVector(p.random(-1, 1), p.random(-1, 1));\n      this.onCanvas = true;\n    }\n    draw() {\n      const { x, y } = this.vector;\n      const size = p.map(\n        p.dist(x, y, p.width * 0.666, p.height * 0.666),\n        0,\n        p.dist(0, 0, p.width * 0.666, p.height * 0.666),\n        1,\n        P_SIZE\n      );\n\n      if (this.onCanvas) {\n        p.ellipse(x, y, size);\n        this.vector.add(this.velocity);\n        this.velocity.add(\n          p.map(p.noise(p.frameCount / 100, x / 10, y / 10), 0, 1, -0.05, 0.05),\n          p.map(p.noise(p.frameCount / 100, y / 10, x / 10), 0, 1, -0.05, 0.05)\n        );\n      }\n      if (\n        (x < -P_SIZE || x > p.width + P_SIZE) &&\n        (y < -P_SIZE || y > p.height + P_SIZE)\n      ) {\n        this.onCanvas = false;\n      }\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 100);\n    colors = [\n      p.color(p.random(0, 50), 50, 25),\n      p.color(p.random(50, 100), 50, 75),\n    ];\n    p.background(colors[1]);\n    particles = Array.from({ length: P_COUNT }, () => new Particle());\n    p.noStroke();\n  };\n\n  p.draw = function() {\n    p.fill(\n      p.lerpColor(...colors, p.map(p.sin(p.frameCount / 100), -1, 1, 0, 1))\n    );\n    particles.forEach(p => p.draw());\n    if (particles.filter(p => !p.onCanvas).length > P_COUNT / 2) {\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Refresh page for a different color variation\"\n  />\n);\n"],"sourceRoot":""}
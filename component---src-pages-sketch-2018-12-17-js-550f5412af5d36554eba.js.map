{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/17.js"],"names":["sketch","p","triangleRatio","Math","sqrt","myTriangle","x","y","radius","triangle","setup","createCanvas","angleMode","DEGREES","noStroke","draw","background","map","mouseX","width","overlap","mouseY","height","push","fill","noise","translate","pop","rotate","touchMoved","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description"],"mappings":"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","file":"component---src-pages-sketch-2018-12-17-js-550f5412af5d36554eba.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const triangleRatio = Math.sqrt(5) / 2;\n\n  function myTriangle(x, y, radius) {\n    p.triangle(\n      x,\n      y - radius,\n      x - triangleRatio * radius,\n      y + radius / 2,\n      x + triangleRatio * radius,\n      y + radius / 2\n    );\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.angleMode(p.DEGREES);\n    p.noStroke();\n  };\n\n  p.draw = function() {\n    p.background(\"white\");\n    const radius = p.map(p.mouseX, 0, p.width, 30, 120, true);\n    const overlap = p.map(p.mouseY, 0, p.height, radius / 2, radius * 2, true);\n    for (let y = p.height / 2; y <= p.height + radius * 3; y += radius * 3) {\n      for (\n        let x = p.width / 2;\n        x <= p.width + radius * 3;\n        x += triangleRatio * radius * 2\n      ) {\n        p.push();\n        p.fill(`rgba(0, 0, 0, ${p.noise(1)})`);\n        p.translate(x, y - radius / 2);\n        myTriangle(0, 0, overlap);\n        p.pop();\n        p.push();\n        p.fill(`rgba(0, 0, 0, ${p.noise(2)})`);\n        p.translate(x, y + radius / 2);\n        p.rotate(180);\n        myTriangle(0, 0, overlap);\n        p.pop();\n        p.push();\n        p.fill(`rgba(0, 0, 0, ${p.noise(3)})`);\n        p.translate(x + triangleRatio * radius, y + radius);\n        myTriangle(0, 0, overlap);\n        p.pop();\n        p.push();\n        p.fill(`rgba(0, 0, 0, ${p.noise(4)})`);\n        p.translate(x + triangleRatio * radius, y + radius * 2);\n        p.rotate(180);\n        myTriangle(0, 0, overlap);\n        p.pop();\n        if (y > p.height / 2) {\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(5)})`);\n          p.translate(x, p.height - y - radius / 2);\n          myTriangle(0, 0, overlap);\n          p.pop();\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(6)})`);\n          p.translate(x, p.height - y + radius / 2);\n          p.rotate(180);\n          myTriangle(0, 0, overlap);\n          p.pop();\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(7)})`);\n          p.translate(x + triangleRatio * radius, p.height - y + radius);\n          myTriangle(0, 0, overlap);\n          p.pop();\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(8)})`);\n          p.translate(x + triangleRatio * radius, p.height - y + radius * 2);\n          p.rotate(180);\n          myTriangle(0, 0, overlap);\n          p.pop();\n        }\n        if (x > p.width / 2) {\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(9)})`);\n          p.translate(p.width - x, y - radius / 2);\n          myTriangle(0, 0, overlap);\n          p.pop();\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(10)})`);\n          p.translate(p.width - x, y + radius / 2);\n          p.rotate(180);\n          myTriangle(0, 0, overlap);\n          p.pop();\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(11)})`);\n          p.translate(p.width - x + triangleRatio * radius, y + radius);\n          myTriangle(0, 0, overlap);\n          p.pop();\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(12)})`);\n          p.translate(p.width - x + triangleRatio * radius, y + radius * 2);\n          p.rotate(180);\n          myTriangle(0, 0, overlap);\n          p.pop();\n        }\n        if (y > p.height / 2 && x > p.width / 2) {\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(13)})`);\n          p.translate(p.width - x, p.height - y - radius / 2);\n          myTriangle(0, 0, overlap);\n          p.pop();\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(14)})`);\n          p.translate(p.width - x, p.height - y + radius / 2);\n          p.rotate(180);\n          myTriangle(0, 0, overlap);\n          p.pop();\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(15)})`);\n          p.translate(\n            p.width - x + triangleRatio * radius,\n            p.height - y + radius\n          );\n          myTriangle(0, 0, overlap);\n          p.pop();\n          p.push();\n          p.fill(`rgba(0, 0, 0, ${p.noise(16)})`);\n          p.translate(\n            p.width - x + triangleRatio * radius,\n            p.height - y + radius * 2\n          );\n          p.rotate(180);\n          myTriangle(0, 0, overlap);\n          p.pop();\n        }\n      }\n    }\n  };\n\n  p.touchMoved = function() {\n    if (\n      p.mouseX >= 0 &&\n      p.mouseY >= 0 &&\n      p.mouseX <= p.width &&\n      p.mouseY <= p.height\n    ) {\n      return false;\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Move pointer or finger over sketch.\" />\n);\n"],"sourceRoot":""}
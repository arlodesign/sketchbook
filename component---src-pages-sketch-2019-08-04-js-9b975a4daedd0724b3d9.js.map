{"version":3,"sources":["webpack:///./src/pages/sketch/2019/08/04.js"],"names":["RENDER","process","DEV","sketch","p","margin","color1","color2","HUE","random","setup","frameRate","pixelDensity","createCanvas","background","noFill","strokeWeight","colorMode","HSB","width","color","createLoop","gif","render","open","noiseRadius","draw","_p$animLoop","animLoop","noise1D","theta","push","translate","height","stroke","lerpColor","map","sin","bezier","pop","DURATION","frameCount","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description"],"mappings":"+HAIMA,UAASC,GAAYC,MAAO,GAG5BC,EAAS,SAASC,GACtB,IAEIC,EACAC,EACAC,EAJEC,EAAMJ,EAAEK,OAAO,KAMrBL,EAAEM,MAAQ,WACRN,EAAEO,UAAU,IAERX,GACFI,EAAEQ,aAAa,GAGjBR,EAAES,aAAa,IAAK,KACpBT,EAAEU,WAAWN,EAAK,GAAI,GACtBJ,EAAEW,SACFX,EAAEY,aAAa,IACfZ,EAAEa,UAAUb,EAAEc,IAAK,KAEnBb,EAASD,EAAEe,MAAQ,GACnBb,EAASF,EAAEgB,MAAMZ,EAAK,IAAK,GAAI,IAC/BD,EAASH,EAAEgB,MAAM,IAAMZ,EAAK,GAAI,IAAK,IAErCJ,EAAEiB,WA1BW,GA0BU,CACrBC,MAAKtB,GAAS,CAAEuB,QAAQ,EAAOC,MAAM,GACrCC,YAAa,KAIjBrB,EAAEsB,KAAO,WAAW,IAAAC,EACSvB,EAAEwB,SAArBC,EADUF,EACVE,QAASC,EADCH,EACDG,MACjB1B,EAAE2B,OACF3B,EAAE4B,UAAU5B,EAAEe,MAAQ,EAAGf,EAAE6B,OAAS,GACpC7B,EAAE8B,OAAO9B,EAAE+B,UAAU7B,EAAQC,EAAQH,EAAEgC,IAAIhC,EAAEiC,IAAIP,IAAS,EAAG,EAAG,EAAG,KACnE1B,EAAEkC,SACElC,EAAEe,MAAQ,EAAId,GAAUwB,GAASzB,EAAEe,MAAQ,EAAId,KAC/CD,EAAE6B,OAAS,EAAI5B,GAAUwB,GAASzB,EAAE6B,OAAS,EAAI5B,GACnD,EACA,EACA,EACA,GACCD,EAAEe,MAAQ,EAAId,GAAUwB,EAAQzB,EAAEe,MAAQ,EAAId,IAC9CD,EAAE6B,OAAS,EAAI5B,GAAUwB,EAAQzB,EAAE6B,OAAS,EAAI5B,IAEnDD,EAAEmC,OAEDvC,GAA2BwC,OAAjBpC,EAAEqC,YAAgCrC,EAAEsC,WAIpCC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAc7C,OAAQA,EAAQ8C,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2019-08-04-js-9b975a4daedd0724b3d9.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\nconst DURATION = 60;\n\nconst sketch = function(p) {\n  const HUE = p.random(100);\n\n  let margin;\n  let color1;\n  let color2;\n\n  p.setup = function() {\n    p.frameRate(30);\n\n    if (RENDER) {\n      p.pixelDensity(1);\n    }\n\n    p.createCanvas(660, 840);\n    p.background(HUE, 20, 1);\n    p.noFill();\n    p.strokeWeight(0.5);\n    p.colorMode(p.HSB, 100);\n\n    margin = p.width / 20;\n    color1 = p.color(HUE, 100, 80, 50);\n    color2 = p.color(100 - HUE, 50, 100, 50);\n\n    p.createLoop(DURATION, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 1,\n    });\n  };\n\n  p.draw = function() {\n    const { noise1D, theta } = p.animLoop;\n    p.push();\n    p.translate(p.width / 2, p.height / 2);\n    p.stroke(p.lerpColor(color1, color2, p.map(p.sin(theta), -1, 1, 0, 1)));\n    p.bezier(\n      (-p.width / 2 + margin) * noise1D(-p.width / 2 + margin),\n      (-p.height / 2 + margin) * noise1D(-p.height / 2 + margin),\n      0,\n      0,\n      0,\n      0,\n      (p.width / 2 - margin) * noise1D(p.width / 2 - margin),\n      (p.height / 2 - margin) * noise1D(p.height / 2 - margin)\n    );\n    p.pop();\n\n    !RENDER && p.frameCount === DURATION * 30 && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
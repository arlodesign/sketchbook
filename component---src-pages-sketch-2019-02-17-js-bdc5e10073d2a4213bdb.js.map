{"version":3,"sources":["webpack:///./src/pages/sketch/2019/02/17.js","webpack:///./src/lib/addNoise.js"],"names":["sketch","p","points","getVectors","position","createVector","randomGaussian","width","height","velocity","random","acceleration","setup","createCanvas","Array","fill","map","_","background","draw","forEach","i","add","x","y","points2","reached","shortest","dist","reachedIndex","unreachedIndex","point","point2","i2","THIS_DIST","stroke","cos","frameCount","line","filter","length","addNoise","noLoop","location","path","pathname","intensity","PTS","console","log","push","noStroke","ellipse","pixelDensity","pop"],"mappings":"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","file":"component---src-pages-sketch-2019-02-17-js-bdc5e10073d2a4213bdb.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport addNoise from \"~lib/addNoise\";\n\nconst sketch = function(p) {\n  let points = [];\n\n  function getVectors() {\n    return {\n      position: p.createVector(\n        p.randomGaussian(p.width / 2, p.width / 15),\n        p.randomGaussian(p.height / 2, p.height / 15)\n      ),\n      velocity: p.createVector(p.random(-0.1, 0.1), p.random(-0.1, 0.1)),\n      acceleration: p.createVector(p.random(-0.1, 0.1), p.random(-0.1, 0.1)),\n    };\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    points = new Array(50).fill().map(_ => getVectors());\n    p.background(0);\n  };\n\n  p.draw = function() {\n    points.forEach(({ position, velocity, acceleration }, i) => {\n      points[i].position = position.add(velocity.add(acceleration));\n      if (\n        position.x < 0 ||\n        position.x > p.width ||\n        position.y < 0 ||\n        position.y > p.height\n      ) {\n        points[i] = getVectors();\n      }\n    });\n    let points2 = points.map(p => ({\n      position: p.position,\n      reached: false,\n    }));\n    points2[0].reached = true;\n    while (points2.filter(point => point.reached).length < points2.length) {\n      const MAX = p.dist(0, 0, p.width, p.height) * 2;\n      let shortest = MAX;\n      let reachedIndex;\n      let unreachedIndex;\n      points2.forEach((point, i) => {\n        if (!point.reached) return;\n        points2.forEach((point2, i2) => {\n          if (point2.reached) return;\n          const THIS_DIST = p.dist(\n            point.position.x,\n            point.position.y,\n            point2.position.x,\n            point2.position.y\n          );\n          if (THIS_DIST < shortest) {\n            shortest = THIS_DIST;\n            reachedIndex = i;\n            unreachedIndex = i2;\n          }\n        });\n      });\n      p.stroke(\n        255 * p.cos(p.frameCount / 100),\n        p.map(\n          p.dist(\n            p.width / 2,\n            p.height / 2,\n            points2[unreachedIndex].position.x,\n            points2[unreachedIndex].position.y\n          ),\n          0,\n          p.dist(0, 0, p.width / 2, p.height / 2),\n          64,\n          0\n        )\n      );\n      p.line(\n        points2[reachedIndex].position.x,\n        points2[reachedIndex].position.y,\n        points2[unreachedIndex].position.x,\n        points2[unreachedIndex].position.y\n      );\n      points2[unreachedIndex].reached = true;\n    }\n    addNoise(p, 0.02);\n    if (p.frameCount > 800) {\n      p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} />\n);\n","const addNoise = (p, intensity = 0.5) => {\n  const PTS = p.width * p.height * 0.02;\n\n  console.log(PTS);\n\n  p.push();\n  for (let i = 0; i < PTS; i++) {\n    p.fill(\n      i % 2\n        ? `rgba(0, 0, 0, ${intensity})`\n        : `rgba(255, 255, 255, ${intensity})`\n    );\n    p.noStroke();\n    p.ellipse(\n      p.randomGaussian(p.width / 2, p.width / 3),\n      p.randomGaussian(p.height / 2, p.height / 3),\n      1 / (p.pixelDensity() / 2)\n    );\n  }\n  p.pop();\n};\n\nexport default addNoise;\n"],"sourceRoot":""}
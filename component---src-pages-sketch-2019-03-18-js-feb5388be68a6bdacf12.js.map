{"version":3,"sources":["webpack:///./src/pages/sketch/2019/03/18.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js"],"names":["sketch","p","particles","restartedMovers","Particle","i","this","stroke","location","createVector","polarToCartesian","width","height","random","TWO_PI","velocity","acceleration","p5","Vector","random2D","draw","add","strokeWeight","map","dist","x","y","SIZE","beginShape","vertex","endShape","setup","createCanvas","background","Array","from","length","_","forEach","m","filter","onScreen","constructor","noLoop","path","pathname","description","polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","module","exports","Constructor","protoProps","staticProps","prototype"],"mappings":"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","file":"component---src-pages-sketch-2019-03-18-js-feb5388be68a6bdacf12.js","sourcesContent":["import React from \"react\";\nimport p5 from \"p5\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  const SIZE = 100;\n\n  let particles = [];\n  let restartedMovers = 0;\n\n  class Particle {\n    constructor(i) {\n      this.i = i || this.i;\n      this.stroke = this.i % 2 ? 255 : 0;\n      this.location = p.createVector(\n        ...polarToCartesian(\n          p.width / 2,\n          p.height / 2,\n          p.random(p.TWO_PI),\n          p.random(p.width / 4),\n          true\n        )\n      );\n      this.velocity = p.createVector(p.random(-1, 1), p.random(-1, 1));\n      this.acceleration = p5.Vector.random2D();\n    }\n    draw() {\n      this.acceleration = p.createVector(p.random(-1, 1), p.random(-1, 1));\n      this.velocity.add(this.acceleration);\n\n      p.strokeWeight(\n        p.map(\n          p.dist(p.width / 2, p.height / 2, this.location.x, this.location.y),\n          0,\n          p.dist(p.width / 2, p.height / 2, p.width / 2, 0),\n          SIZE,\n          SIZE / 10,\n          true\n        )\n      );\n      p.stroke(this.stroke);\n\n      p.beginShape();\n      p.vertex(this.location.x, this.location.y);\n      this.location.add(this.velocity);\n      p.vertex(this.location.x, this.location.y);\n      p.endShape();\n    }\n    get onScreen() {\n      const { x, y } = this.location;\n      return x > 0 && x < p.width && y > 0 && y < p.height;\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(255);\n    particles = Array.from({ length: 1000 }, (_, i) => new Particle(i));\n  };\n\n  p.draw = function() {\n    particles.forEach(m => m.draw());\n    particles\n      .filter(m => !m.onScreen)\n      .forEach(m => {\n        m.constructor();\n        restartedMovers++;\n      });\n\n    restartedMovers > 10000 && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;"],"sourceRoot":""}
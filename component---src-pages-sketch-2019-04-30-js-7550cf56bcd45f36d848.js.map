{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/30.js","webpack:///./src/lib/shuffle.js"],"names":["sketch","p","iterations","points","h","hue","random","divisors","shuffle","map","d","setup","createCanvas","background","colorMode","HSB","blendMode","SOFT_LIGHT","curveTightness","strokeWeight","draw","newPoints","stroke","console","log","i","noise","frameCount","x","curvePoint","cos","width","y","height","push","min","length","line","noLoop","location","path","pathname","description","a","j","Math","floor"],"mappings":"uIAIMA,EAAS,SAASC,GACtB,IAAIC,EAAa,EACbC,EAAS,GACTC,EAAI,EACJC,EAAMJ,EAAEK,OAAO,IACfC,EAAWC,YAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAIC,KAAI,SAAAC,GAAC,OAAQ,IAAJA,MAE5DT,EAAEU,MAAQ,WACRV,EAAEW,aAAa,IAAK,KACpBX,EAAEY,WAAW,KACbZ,EAAEa,UAAUb,EAAEc,IAAK,KACnBd,EAAEe,UAAUf,EAAEgB,YACdhB,EAAEiB,eAAe,GACjBjB,EAAEkB,aAAa,KAGjBlB,EAAEmB,KAAO,WACP,IAAIC,EAAY,GAChBpB,EAAEqB,OAAOjB,EAAM,GAAKH,EAAY,IAAK,IACrCqB,QAAQC,IAAInB,GAEZ,IACE,IAAIoB,EAAI,EAAI,EACZA,EAAI,EACJA,GAAKxB,EAAEyB,MAAMzB,EAAE0B,WAAa,IAAKvB,EAAI,MAAQA,EAAI,KACjD,CACA,IAAMwB,EAAI3B,EAAE4B,WACV5B,EAAEQ,IAAIR,EAAE6B,IAAI7B,EAAE0B,WAAapB,EAAS,KAAM,EAAG,EAAG,EAAGN,EAAE8B,OACrD3B,EACAA,EACAH,EAAEQ,IAAIR,EAAE6B,IAAI7B,EAAE0B,WAAapB,EAAS,KAAM,EAAG,EAAG,EAAGN,EAAE8B,OACrDN,GAEIO,EAAI/B,EAAE4B,WAAW,EAAG,EAAG5B,EAAEgC,OAAQhC,EAAEgC,OAAQR,GAEjDJ,EAAUa,KAAK,CAAEN,IAAGI,MAGtB,IAAK,IAAIP,EAAI,EAAGA,EAAIxB,EAAEkC,IAAIhC,EAAOiC,OAAQf,EAAUe,QAASX,IAC1DxB,EAAEoC,KAAKlC,EAAOsB,GAAGG,EAAGzB,EAAOsB,GAAGO,EAAGX,EAAUI,GAAGG,EAAGP,EAAUI,GAAGO,GAC9D/B,EAAEoC,KACAlC,EAAOsB,GAAGG,EACV3B,EAAEgC,OAAS9B,EAAOsB,GAAGO,EACrBX,EAAUI,GAAGG,EACb3B,EAAEgC,OAASZ,EAAUI,GAAGO,GAE1B/B,EAAEoC,KACApC,EAAE8B,MAAQ5B,EAAOsB,GAAGG,EACpBzB,EAAOsB,GAAGO,EACV/B,EAAE8B,MAAQV,EAAUI,GAAGG,EACvBP,EAAUI,GAAGO,GAEf/B,EAAEoC,KACApC,EAAE8B,MAAQ5B,EAAOsB,GAAGG,EACpB3B,EAAEgC,OAAS9B,EAAOsB,GAAGO,EACrB/B,EAAE8B,MAAQV,EAAUI,GAAGG,EACvB3B,EAAEgC,OAASZ,EAAUI,GAAGO,GAI5B7B,EAASkB,IACTjB,EAEQH,EAAE8B,QACR3B,EAAI,EACJD,EAAS,KACTD,EACa,GAAKD,EAAEqC,YAKX,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcvC,OAAQA,EAAQwC,KAAMD,EAASE,SAAUC,YAAY,O,iCC7EtD,SAASlC,EAAQmC,GAC9B,IAAK,IAAIlB,EAAIkB,EAAEP,OAAS,EAAGX,EAAI,EAAGA,IAAK,CACrC,IAAMmB,EAAIC,KAAKC,MAAMD,KAAKvC,UAAYmB,EAAI,IADL,EAEtB,CAACkB,EAAEC,GAAID,EAAElB,IAAvBkB,EAAElB,GAFkC,KAE9BkB,EAAEC,GAF4B,KAIvC,OAAOD,EALT","file":"component---src-pages-sketch-2019-04-30-js-7550cf56bcd45f36d848.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport shuffle from \"~lib/shuffle\";\n\nconst sketch = function(p) {\n  let iterations = 0;\n  let points = [];\n  let h = 0;\n  let hue = p.random(33);\n  let divisors = shuffle([1, 2, 3, 5, 8, 13, 21, 34].map(d => d * 100));\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(192);\n    p.colorMode(p.HSB, 100);\n    p.blendMode(p.SOFT_LIGHT);\n    p.curveTightness(5);\n    p.strokeWeight(10);\n  };\n\n  p.draw = function() {\n    let newPoints = [];\n    p.stroke(hue + 33 * iterations, 100, 50);\n    console.log(hue);\n\n    for (\n      let i = 1 / 3;\n      i < 1;\n      i += p.noise(p.frameCount / 200, h / 200) / (h / 200)\n    ) {\n      const x = p.curvePoint(\n        p.map(p.cos(p.frameCount / divisors[0]), -1, 1, 0, p.width),\n        h,\n        h,\n        p.map(p.cos(p.frameCount / divisors[1]), -1, 1, 0, p.width),\n        i\n      );\n      const y = p.curvePoint(0, 0, p.height, p.height, i);\n\n      newPoints.push({ x, y });\n    }\n\n    for (let i = 0; i < p.min(points.length, newPoints.length); i++) {\n      p.line(points[i].x, points[i].y, newPoints[i].x, newPoints[i].y);\n      p.line(\n        points[i].x,\n        p.height - points[i].y,\n        newPoints[i].x,\n        p.height - newPoints[i].y\n      );\n      p.line(\n        p.width - points[i].x,\n        points[i].y,\n        p.width - newPoints[i].x,\n        newPoints[i].y\n      );\n      p.line(\n        p.width - points[i].x,\n        p.height - points[i].y,\n        p.width - newPoints[i].x,\n        p.height - newPoints[i].y\n      );\n    }\n\n    points = newPoints;\n    h++;\n\n    if (h > p.width) {\n      h = 0;\n      points = [];\n      iterations++;\n      iterations > 2 && p.noLoop();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n","export default function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n"],"sourceRoot":""}
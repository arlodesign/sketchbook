{"version":3,"sources":["webpack:///./src/pages/sketch/2019/07/26.js"],"names":["RENDER","process","DEV","sketch","p","setup","pixelDensity","frameRate","createCanvas","rectMode","CENTER","noStroke","createLoop","gif","render","open","noiseRadius","draw","blendMode","BLEND","background","EXCLUSION","translate","width","height","forEach","c","i","fill","x","y","nx","map","sin","animLoop","theta","noise2D","ny","cos","ns","push","scale","rect","pop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_3__","path","pathname","description"],"mappings":"sIAIMA,UAASC,GAAYC,MAAO,GAE5BC,EAAS,SAASC,GACtBA,EAAEC,MAAQ,WACJL,IACFI,EAAEE,aAAa,GACfF,EAAEG,UAAU,KAGdH,EAAEI,aAAa,IAAK,KACpBJ,EAAEK,SAASL,EAAEM,QACbN,EAAEO,WAEFP,EAAEQ,WAAW,EAAG,CACdC,MAAKb,GAAS,CAAEc,QAAQ,EAAOC,MAAM,GACrCC,YAAa,KAIjBZ,EAAEa,KAAO,WACPb,EAAEc,UAAUd,EAAEe,OACdf,EAAEgB,WAAW,GACbhB,EAAEc,UAAUd,EAAEiB,WAEdjB,EAAEkB,UAAUlB,EAAEmB,MAAQ,EAAGnB,EAAEoB,OAAS,GAEpC,CAAC,MAAO,QAAS,QAAQC,QAAQ,SAACC,EAAGC,GACnCvB,EAAEwB,KAAKF,GACP,IAAK,IAAIG,GAAK,EAAGA,GAAK,EAAGA,IACvB,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,IAAK,CAC5B,IAAMC,EAAK3B,EAAE4B,IACX5B,EAAE6B,IAAI7B,EAAE8B,SAASC,QAChB,EACD,EACA,EACA/B,EAAE8B,SAASE,QAAQP,EAAGF,GAAK,GAEvBU,EAAKjC,EAAE4B,IACX5B,EAAEkC,IAAIlC,EAAE8B,SAASC,QAChB,EACD,EACA,EACA/B,EAAE8B,SAASE,QAAQN,EAAGH,GAAK,GAEvBY,EAAKnC,EAAE4B,IACX5B,EAAEkC,IAAIlC,EAAE8B,SAASC,QAChB,EACD,EACA,EACA/B,EAAE8B,SAASE,QAAQP,EAAGC,IAExB1B,EAAEoC,OACFpC,EAAEkB,UAAU,GAAKO,EAAIE,EAAI,GAAKD,EAAIO,GAClCjC,EAAEqC,MAAMF,EAAIA,GACZnC,EAAEsC,KAAK,EAAG,EAAG,GAAI,IACjBtC,EAAEuC,WAOGC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAc9C,OAAQA,EAAQ+C,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2019-07-26-js-8d77307d5b75b1604101.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst RENDER = process.env.DEV && false;\n\nconst sketch = function(p) {\n  p.setup = function() {\n    if (RENDER) {\n      p.pixelDensity(1);\n      p.frameRate(30);\n    }\n\n    p.createCanvas(660, 840);\n    p.rectMode(p.CENTER);\n    p.noStroke();\n\n    p.createLoop(5, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 1,\n    });\n  };\n\n  p.draw = function() {\n    p.blendMode(p.BLEND);\n    p.background(0);\n    p.blendMode(p.EXCLUSION);\n\n    p.translate(p.width / 2, p.height / 2);\n\n    [\"red\", \"green\", \"blue\"].forEach((c, i) => {\n      p.fill(c);\n      for (let x = -3; x <= 3; x++) {\n        for (let y = -3; y <= 3; y++) {\n          const nx = p.map(\n            p.sin(p.animLoop.theta),\n            -1,\n            1,\n            3,\n            p.animLoop.noise2D(x, i) + 1\n          );\n          const ny = p.map(\n            p.cos(p.animLoop.theta),\n            -1,\n            1,\n            3,\n            p.animLoop.noise2D(y, i) + 1\n          );\n          const ns = p.map(\n            p.cos(p.animLoop.theta),\n            -1,\n            1,\n            1,\n            p.animLoop.noise2D(x, y)\n          );\n          p.push();\n          p.translate(50 * x * nx, 50 * y * ny);\n          p.scale(ns, ns);\n          p.rect(0, 0, 50, 50);\n          p.pop();\n        }\n      }\n    });\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}
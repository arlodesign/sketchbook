{"version":3,"sources":["webpack:///./src/pages/sketch/2019/02/15.js"],"names":["sketch","p","setup","createCanvas","WEBGL","stroke","strokeWeight","noFill","noiseDetail","rectMode","CENTER","camera","width","height","draw","background","x","y","points","col","N","noise","frameCount","push","map","forEach","beginShape","point","vertex","endShape","i","length","j","location","path","pathname"],"mappings":"siBAGA,IAAMA,EAAS,SAASC,GAItBA,EAAEC,MAAQ,WACRD,EAAEE,aAAa,IAAK,IAAKF,EAAEG,OAC3BH,EAAEI,OAAO,KACTJ,EAAEK,aAAa,IACfL,EAAEM,SACFN,EAAEO,YAAY,EAAG,IACjBP,EAAEQ,SAASR,EAAES,QACbT,EAAEU,QACCV,EAAEW,MAAQ,GACVX,EAAEY,OAAS,EAXF,KAaTZ,EAAEW,MAAQ,GACVX,EAAEY,OAAS,EACZ,EACA,EACA,EACA,IAIJZ,EAAEa,KAAO,WACPb,EAAEc,WAAW,GAIb,IAHA,IAAIC,EAzBY,EAyBIf,EAAEW,MAAQ,EAC1BK,EA1BY,EA0BIhB,EAAEY,OAAS,EAC3BK,EAAS,GACNF,EAAI,GAAG,CAEZ,IADA,IAAIG,EAAM,GACHF,EAAI,GAAG,CACZ,IAAMG,EAAInB,EAAEoB,MACT,KAADL,EACC,KAADC,EACAhB,EAAEqB,WAAa,KAEjBH,EAAII,KAAK,CAACP,EAAGC,EAAGhB,EAAEuB,IAAIJ,EAAG,EAAG,GAnCpB,WAoCRH,GArCY,EAuCdC,EAAOK,KAAKJ,GACZH,GAxCc,EAyCdC,EAzCc,EAyCEhB,EAAEY,OAAS,EAE7BK,EAAOO,SAAQ,SAAAN,GACblB,EAAEyB,aACFP,EAAIM,SAAQ,SAAAE,GAAK,OAAI1B,EAAE2B,OAAF,MAAA3B,EAAC,EAAW0B,OACjC1B,EAAE4B,cAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAO,GAAGa,OAAQD,IAAK,CACzC7B,EAAEyB,aACF,IAAK,IAAIM,EAAI,EAAGA,EAAId,EAAOa,OAAQC,IACjC/B,EAAE2B,OAAF,MAAA3B,EAAC,EAAWiB,EAAOc,GAAGF,KAExB7B,EAAE4B,cAKO,0BAAGI,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcjC,OAAQA,EAAQkC,KAAMD,EAASE","file":"component---src-pages-sketch-2019-02-15-js-9eb056cf2002bba86da8.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  const GRID_SIZE = 5;\n  const MAX_Z = 400;\n\n  p.setup = function() {\n    p.createCanvas(660, 840, p.WEBGL);\n    p.stroke(255);\n    p.strokeWeight(0.5);\n    p.noFill();\n    p.noiseDetail(4, 0.5);\n    p.rectMode(p.CENTER);\n    p.camera(\n      -p.width / 4,\n      -p.height / 4,\n      MAX_Z,\n      -p.width / 4,\n      -p.height / 4,\n      0,\n      0,\n      1,\n      0\n    );\n  };\n\n  p.draw = function() {\n    p.background(0);\n    let x = GRID_SIZE - p.width / 2;\n    let y = GRID_SIZE - p.height / 2;\n    let points = [];\n    while (x < 0) {\n      let col = [];\n      while (y < 0) {\n        const N = p.noise(\n          x * (GRID_SIZE / 1000),\n          y * (GRID_SIZE / 1000),\n          p.frameCount / 250\n        );\n        col.push([x, y, p.map(N, 0, 1, -MAX_Z, MAX_Z)]);\n        y += GRID_SIZE;\n      }\n      points.push(col);\n      x += GRID_SIZE;\n      y = GRID_SIZE - p.height / 2;\n    }\n    points.forEach(col => {\n      p.beginShape();\n      col.forEach(point => p.vertex(...point));\n      p.endShape();\n    });\n    for (let i = 0; i < points[0].length; i++) {\n      p.beginShape();\n      for (let j = 0; j < points.length; j++) {\n        p.vertex(...points[j][i]);\n      }\n      p.endShape();\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/18.js"],"names":["sketch","p","centerX","centerY","size","speed","jump","scalar","angle","drawn","drawCount","setup","createCanvas","background","noFill","strokeWeight","random","width","height","draw","x","cos","y","sin","noiseVal","noise","stroke","bezier","noLoop","__webpack_exports__","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_sketch_layout__WEBPACK_IMPORTED_MODULE_2__","path","pathname","description"],"mappings":"8HAGMA,EAAS,SAASC,GACtB,IAGIC,EACAC,EACAC,EACAC,EANAC,EAAO,EACPC,EAAS,EACTC,EAAQ,EAKRC,GAAQ,EACRC,EAAY,EAEhBT,EAAEU,MAAQ,WACRV,EAAEW,aAAa,IAAK,KACpBX,EAAEY,WAAW,GACbZ,EAAEa,SACFb,EAAEc,aAAa,IACfX,EAAOH,EAAEe,OAAO,IAAK,KACrBX,EAAQJ,EAAEe,OAAO,EAAG,IACpBd,EAAUD,EAAEgB,MAAQ,GACpBd,EAAUF,EAAEe,OAAO,EAAGf,EAAEiB,SAG1BjB,EAAEkB,KAAO,WACP,IAAMC,EAAIlB,EAAUD,EAAEoB,IAAIb,GAASD,EAC7Be,EAAInB,EAAUF,EAAEsB,IAAIf,GAASD,EAC7BiB,EAAWvB,EAAEwB,MAAML,EAAGE,GACxBF,EAAI,GAAKE,EAAI,GAAKF,EAAInB,EAAEgB,OAASK,EAAIrB,EAAEiB,SACzCT,GAAQ,EACRC,IACAT,EAAEyB,OAAF,uBAAgCF,EAAhC,KACAvB,EAAE0B,OACAzB,EACAC,EACAD,EAAUK,EAASiB,EACnBrB,EAAUI,EAASiB,EACnBJ,EAAIb,EAASiB,EACbF,EAAIf,EAASiB,EACbJ,EACAE,KAGJd,GAASH,GACG,IAAMC,IACZG,GAAuB,IAAdC,GACXT,EAAE2B,SAEJlB,EAAY,EACZH,GAAUF,EACVA,GAASA,EAAQD,EACjBE,OAKSuB,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAclC,OAAQA,EAAQmC,KAAMJ,EAASK,SAAUC,YAAY","file":"component---src-pages-sketch-2018-12-18-js-09cf4ae7f9322d68a143.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  let jump = 0;\n  let scalar = 0;\n  let angle = 0;\n  let centerX;\n  let centerY;\n  let size;\n  let speed;\n  let drawn = false;\n  let drawCount = 0;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.background(0);\n    p.noFill();\n    p.strokeWeight(0.7);\n    size = p.random(300, 500);\n    speed = p.random(5, 10);\n    centerX = p.width + 50;\n    centerY = p.random(0, p.height);\n  };\n\n  p.draw = function() {\n    const x = centerX + p.cos(angle) * scalar;\n    const y = centerY + p.sin(angle) * scalar;\n    const noiseVal = p.noise(x, y);\n    if (x > 0 && y > 0 && x < p.width && y < p.height) {\n      drawn = true;\n      drawCount++;\n      p.stroke(`rgba(255, 255, 255, ${noiseVal})`);\n      p.bezier(\n        centerX,\n        centerY,\n        centerX + scalar * noiseVal,\n        centerY + scalar * noiseVal,\n        x + scalar * noiseVal,\n        y + scalar * noiseVal,\n        x,\n        y\n      );\n    }\n    angle += speed;\n    if (angle / 360 > jump) {\n      if (drawn && drawCount === 0) {\n        p.noLoop();\n      }\n      drawCount = 0;\n      scalar += speed;\n      speed += speed / size;\n      jump++;\n    }\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Be patient. Reload page for a different variation.\" />\n);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/sketch/2019/01/16.js"],"names":["sketch","p","circleCount","drawing","circles","viewGuides","speeds","Array","fill","map","_","i","guideColor","alpha","color","setup","createCanvas","ceil","random","createImage","width","height","thisSpeed","filter","s","push","r","HALF_PI","speed","TWO_PI","size","direction","lastPoint","draw","background","frameRate","image","axis","x","y","forEach","c","X","cos","Y","sin","ALPHA","noFill","stroke","strokeWeight","ellipse","noStroke","l","set","floor","lerp","updatePixels","mousePressed","location","path","pathname","description"],"mappings":"mJAGMA,EAAS,SAASC,GACtB,IAAIC,EAGAC,EAFAC,EAAU,GACVC,GAAa,EAEbC,EAAS,IAAIC,MAAM,IAAIC,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OAAWA,EAAI,GAAK,MAG1D,SAASC,EAAWC,GAClB,OAAOZ,EAAEa,MAAM,IAAK,EAAG,EAAGD,GAG5BZ,EAAEc,MAAQ,WACRd,EAAEe,aAAa,IAAK,KACpBd,EAAcD,EAAEgB,KAAKhB,EAAEiB,OAAO,IAAM,EACpCf,EAAUF,EAAEkB,YAAYlB,EAAEmB,MAAOnB,EAAEoB,QACnC,IAJmB,eAIVV,GACP,IAAMW,EAAYrB,EAAEiB,OAAOZ,GAC3BA,EAASA,EAAOiB,QAAO,SAAAC,GAAC,OAAIA,IAAMF,KAClClB,EAAQqB,KAAK,CACXC,EAAe,EAAZzB,EAAE0B,QACLC,MAAON,EAAYrB,EAAE4B,OACrBC,KAAO7B,EAAEmB,MAAQlB,EAAeD,EAAEiB,OAAO,GAAK,GAC9Ca,UAAW9B,EAAEiB,OAAO,CAAC,GAAI,IACzBc,UAAW,QARNrB,EAAI,EAAGA,EAAIT,EAAaS,IAAM,KAazCV,EAAEgC,KAAO,WACPhC,EAAEiC,WAAW,KACbjC,EAAEkC,UAAU9B,EAAa,GAAK,IAC9BJ,EAAEmC,MAAMjC,EAAS,EAAG,GACpB,IAAIkC,EAAO,CACTC,EAAGrC,EAAEmB,MAAQ,EACbmB,EAAGtC,EAAEoB,OAAS,GAEhBjB,EAAQoC,SAAQ,SAACC,EAAG9B,GAClB,IAAM+B,EAAIL,EAAKC,EAAIrC,EAAE0C,IAAIF,EAAEf,IAAMe,EAAEX,KAAO,GACpCc,EAAIP,EAAKE,EAAItC,EAAE4C,IAAIJ,EAAEf,IAAMe,EAAEX,KAAO,GAC1C,GAAIzB,EAAY,CACd,IAAMyC,EAAQ7C,EAAEQ,IAAIE,EAAG,EAAGT,EAAc,EAAG,GAAS,KACpDD,EAAE8C,SACF9C,EAAE+C,OAAO,IAAK,IAAK,IAAKF,GACxB7C,EAAEgD,aAAa,GACfhD,EAAEiD,QAAQb,EAAKC,EAAGD,EAAKE,EAAGE,EAAEX,MAC5B7B,EAAE+C,OAAOpC,EAAWkC,IACpB7C,EAAEgD,aAAa,GACfhD,EAAEiD,QAAQb,EAAKC,EAAGD,EAAKE,EAAGE,EAAEX,MAC5B7B,EAAEkD,WACFlD,EAAEO,KAAK,IAAK,IAAK,IAAKsC,GACtB7C,EAAEiD,QAAQR,EAAGE,EAAGjC,IAAMT,EAAc,EAAI,GAAK,GAC7CD,EAAEO,KAAKI,EAAWkC,IAClB7C,EAAEiD,QAAQR,EAAGE,EAAGjC,IAAMT,EAAc,EAAI,EAAI,GAE9C,GAAIS,IAAMT,EAAc,GAAKuC,EAAET,WACzBU,GAAK,GAAKA,GAAKzC,EAAEmB,OAASwB,GAAK,GAAKA,GAAK3C,EAAEoB,OAAQ,CACrD,IAAK,IAAI+B,EAAI,EAAGA,EAAI,EAAGA,GAAK,IAC1BjD,EAAQkD,IACNpD,EAAEqD,MAAMrD,EAAEsD,KAAKb,EAAGD,EAAET,UAAUM,EAAGc,IACjCnD,EAAEqD,MAAMrD,EAAEsD,KAAKX,EAAGH,EAAET,UAAUO,EAAGa,IACjCnD,EAAEa,MAAM,IAGZX,EAAQqD,eAGZnB,EAAO,CACLC,EAAGI,EACHH,EAAGK,GAELxC,EAAQO,GAAGqB,UAAYK,EACvBjC,EAAQO,GAAGe,GAAKe,EAAEb,MAAQxB,EAAQO,GAAGoB,cAIzC9B,EAAEwD,aAAe,WACfpD,GAAcA,IAIH,0BAAGqD,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE1D,OAAQA,EACR2D,KAAMD,EAASE,SACfC,YAAY","file":"component---src-pages-sketch-2019-01-16-js-29ef18fafbfd53e3ea16.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\n\nconst sketch = function(p) {\n  let circleCount;\n  let circles = [];\n  let viewGuides = false;\n  let drawing;\n  let speeds = new Array(30).fill().map((_, i) => (i + 1) / 30);\n  let speed;\n\n  function guideColor(alpha) {\n    return p.color(255, 0, 0, alpha);\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    circleCount = p.ceil(p.random(5)) + 1;\n    drawing = p.createImage(p.width, p.height);\n    for (let i = 0; i < circleCount; i++) {\n      const thisSpeed = p.random(speeds);\n      speeds = speeds.filter(s => s !== thisSpeed);\n      circles.push({\n        r: p.HALF_PI * 3,\n        speed: thisSpeed / p.TWO_PI,\n        size: (p.width / circleCount) * p.random(0.5, 1),\n        direction: p.random([1, -1]),\n        lastPoint: null,\n      });\n    }\n  };\n\n  p.draw = function() {\n    p.background(255);\n    p.frameRate(viewGuides ? 15 : 30);\n    p.image(drawing, 0, 0);\n    let axis = {\n      x: p.width / 2,\n      y: p.height / 2,\n    };\n    circles.forEach((c, i) => {\n      const X = axis.x + p.cos(c.r) * (c.size / 2);\n      const Y = axis.y + p.sin(c.r) * (c.size / 2);\n      if (viewGuides) {\n        const ALPHA = p.map(i, 0, circleCount - 1, 255 / 5, 255);\n        p.noFill();\n        p.stroke(255, 255, 255, ALPHA);\n        p.strokeWeight(5);\n        p.ellipse(axis.x, axis.y, c.size);\n        p.stroke(guideColor(ALPHA));\n        p.strokeWeight(1);\n        p.ellipse(axis.x, axis.y, c.size);\n        p.noStroke();\n        p.fill(255, 255, 255, ALPHA);\n        p.ellipse(X, Y, i === circleCount - 1 ? 12 : 6);\n        p.fill(guideColor(ALPHA));\n        p.ellipse(X, Y, i === circleCount - 1 ? 6 : 3);\n      }\n      if (i === circleCount - 1 && c.lastPoint) {\n        if (X >= 0 && X <= p.width && Y >= 0 && Y <= p.height) {\n          for (let l = 0; l < 1; l += 0.01) {\n            drawing.set(\n              p.floor(p.lerp(X, c.lastPoint.x, l)),\n              p.floor(p.lerp(Y, c.lastPoint.y, l)),\n              p.color(0)\n            );\n          }\n          drawing.updatePixels();\n        }\n      }\n      axis = {\n        x: X,\n        y: Y,\n      };\n      circles[i].lastPoint = axis;\n      circles[i].r += c.speed * circles[i].direction;\n    });\n  };\n\n  p.mousePressed = function() {\n    viewGuides = !viewGuides;\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"\n      Reload page for a different variation. Click or tap sketch to toggle\n      guides.\n    \"\n  />\n);\n"],"sourceRoot":""}
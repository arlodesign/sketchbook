{"version":3,"sources":["webpack:///./src/pages/sketch/2019/06/02.js","webpack:///./src/lib/polarToCartesian.js"],"names":["sketch","p","particles","Particle","x","y","hue","this","velocity","createVector","random","position","move","prev","add","map","noise","frameCount","mult","display","stroke","cos","strokeWeight","dist","width","height","line","setup","createCanvas","a","TWO_PI","push","polarToCartesian","background","draw","forEach","particle","location","path","pathname","description","href","polarToCartesianX","center","angle","distance","Math","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray"],"mappings":"8lCAKA,IAAMA,EAAS,SAASC,GACtB,IACIC,EAAY,GAEVC,EAJmB,WAKvB,WAAYC,EAAGC,EAAGC,GAChBC,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,EAETE,KAAKC,SAAWP,EAAEQ,aAAaR,EAAES,QAAQ,EAAG,GAAIT,EAAES,QAAQ,EAAG,IAC7DH,KAAKI,SAAWV,EAAEQ,aAAaF,KAAKH,EAAGG,KAAKF,GAVvB,2BAavBO,KAAA,WACEL,KAAKM,KAAO,CAAET,EAAGG,KAAKI,SAASP,EAAGC,EAAGE,KAAKI,SAASN,GACnDE,KAAKC,SAASM,IACZb,EAAEQ,aACAR,EAAEc,IACAd,EAAEe,MACAT,KAAKI,SAASP,EAAI,IAClBG,KAAKI,SAASN,EAAI,IAClBJ,EAAEgB,WAAa,KAEjB,EACA,GACC,GACD,IAEFhB,EAAEc,IACAd,EAAEe,MACAT,KAAKI,SAASP,EAAI,IAClBG,KAAKI,SAASN,EAAI,IAClBJ,EAAEgB,WAAa,KAEjB,EACA,GACC,GACD,MAINV,KAAKC,SAASU,KAxCD,SAyCbX,KAAKI,SAASG,IAAIP,KAAKC,WA1CF,EA6CvBW,QAAA,WAAW,IAAD,EACSZ,KAAKI,SAAdP,EADA,EACAA,EAAGC,EADH,EACGA,EACXJ,EAAEmB,OAAOnB,EAAEc,IAAId,EAAEoB,IAAIpB,EAAEgB,WAAa,MAAO,EAAG,EAAG,EAAG,MACpDhB,EAAEqB,aACArB,EAAEc,IACAd,EAAEsB,KAAKnB,EAAGC,EAAGJ,EAAEuB,MAAQ,EAAGvB,EAAEwB,OAAS,GACrC,EACAxB,EAAEsB,KAAK,EAAG,EAAGtB,EAAEuB,MAAQ,EAAGvB,EAAEwB,OAAS,GACrC,EACA,KAGJxB,EAAEyB,KAAKnB,KAAKM,KAAKT,EAAGG,KAAKM,KAAKR,EAAGD,EAAGC,IAzDf,KA6DzBJ,EAAE0B,MAAQ,WACR1B,EAAE2B,aAAa,IAAK,KACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI5B,EAAE6B,OAAQD,GAAK5B,EAAE6B,OAAS,GAC5C5B,EAAU6B,KAAV,EACM5B,EADN,EAEO6B,YAAiB/B,EAAEuB,MAAQ,EAAGvB,EAAEwB,OAAS,EAAGI,EAAG,IAAI,MAI5D5B,EAAEgC,WAAW,IAGfhC,EAAEiC,KAAO,WACPhC,EAAUiC,SAAQ,SAAAC,GAChBA,EAASxB,OACTwB,EAASjB,eAKA,0BAAGkB,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACErC,OAAQA,EACRsC,KAAMD,EAASE,SACfC,YACE,uEAEE,uBAFF,cAGc,IACZ,YAAC,IAAD,CAAMC,KAAK,gCAAX,gBAJF,S,kCC3FN,0GAAMC,EAAoB,SAACC,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKzB,IAAIuB,GAASC,GAE9BE,EAAoB,SAACJ,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKE,IAAIJ,GAASC,GAsB9BI,EAA0B,SAC9BC,EACAC,EACAP,EACAQ,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMlD,EAAI8C,EAAUJ,KAAKzB,IAAIuB,GAASQ,EAChC/C,EAAI8C,EAAUL,KAAKE,IAAIJ,GAASS,EACtC,OAAOC,EAAU,CAAClD,EAAGC,GAAK,CAAED,IAAGC,MAIlB2B,IAzBU,SACvBkB,EACAC,EACAP,EACAC,EACAS,QACG,IADHA,OAAU,GAEV,IAAMlD,EAAIsC,EAAkBQ,EAASN,EAAOC,GACtCxC,EAAI0C,EAAkBI,EAASP,EAAOC,GAC5C,OAAOS,EAAU,CAAClD,EAAGC,GAAK,CAAED,IAAGC","file":"component---src-pages-sketch-2019-06-02-js-fc0d94f10d1e16dcd4f5.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport Link from \"~components/link\";\nimport polarToCartesian from \"~lib/polarToCartesian\";\n\nconst sketch = function(p) {\n  let multiplier = 0.97;\n  let particles = [];\n\n  class Particle {\n    constructor(x, y, hue) {\n      this.x = x;\n      this.y = y;\n\n      this.velocity = p.createVector(p.random(-1, 1), p.random(-1, 1));\n      this.position = p.createVector(this.x, this.y);\n    }\n\n    move() {\n      this.prev = { x: this.position.x, y: this.position.y };\n      this.velocity.add(\n        p.createVector(\n          p.map(\n            p.noise(\n              this.position.x / 300,\n              this.position.y / 200,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          ),\n          p.map(\n            p.noise(\n              this.position.x / 200,\n              this.position.y / 300,\n              p.frameCount / 400\n            ),\n            0,\n            1,\n            -0.1,\n            0.1\n          )\n        )\n      );\n      this.velocity.mult(multiplier, multiplier);\n      this.position.add(this.velocity);\n    }\n\n    display() {\n      const { x, y } = this.position;\n      p.stroke(p.map(p.cos(p.frameCount / 500), -1, 1, 0, 255));\n      p.strokeWeight(\n        p.map(\n          p.dist(x, y, p.width / 2, p.height / 2),\n          0,\n          p.dist(0, 0, p.width / 2, p.height / 2),\n          5,\n          10\n        )\n      );\n      p.line(this.prev.x, this.prev.y, x, y);\n    }\n  }\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    for (let a = 0; a < p.TWO_PI; a += p.TWO_PI / 50) {\n      particles.push(\n        new Particle(\n          ...polarToCartesian(p.width / 2, p.height / 2, a, 10, true)\n        )\n      );\n    }\n    p.background(0);\n  };\n\n  p.draw = function() {\n    particles.forEach(particle => {\n      particle.move();\n      particle.display();\n    });\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description={\n      <>\n        Reload page for a different variation.\n        <br />\n        Inspired by{\" \"}\n        <Link href=\"https://github.com/wangyasai\">Yasaiâ€™s work</Link>.\n      </>\n    }\n  />\n);\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\n\n/**\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} angle\n * @param {number} distance\n * @param {bool} asArray\n */\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n"],"sourceRoot":""}
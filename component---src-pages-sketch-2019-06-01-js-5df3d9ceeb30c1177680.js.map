{"version":3,"sources":["webpack:///./src/lib/lerpLine.js","webpack:///./src/pages/sketch/2019/06/01.js","webpack:///./src/lib/shuffle.js"],"names":["p","x1","y1","x2","y2","rate","showFirstDot","Error","l","random","point","lerp","sketch","bg","margin","HUE","divisors","shuffle","map","d","alpha","setup","createCanvas","colorMode","HSB","color","background","noFill","floor","width","draw","marginX","sin","frameCount","midLerpVal","leftY","cos","height","rightY","midX","midY","leftLerpLineVal","dist","rightLerpLineVal","stroke","lerpLine","push","noStroke","fill","rect","noLoop","text","pop","location","path","pathname","description","a","i","length","j","Math"],"mappings":"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","file":"component---src-pages-sketch-2019-06-01-js-5df3d9ceeb30c1177680.js","sourcesContent":["export default function(p, x1, y1, x2, y2, rate, showFirstDot = true) {\n  if (rate <= 0)\n    throw new Error(\"rate for lerpLine() must be greater than zero\");\n\n  for (let l = 0; l < 1; l += rate) {\n    if (l === 0 && !showFirstDot) continue;\n    p.random() > l && p.point(p.lerp(x1, x2, l), p.lerp(y1, y2, l));\n  }\n}\n","import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport shuffle from \"~lib/shuffle\";\nimport lerpLine from \"~lib/lerpLine\";\n\nconst sketch = function(p) {\n  const HUE = p.random(100);\n  const FRAME_COUNTDOWN = 10000;\n\n  let divisors = shuffle([2, 3, 5, 8, 13, 21, 34].map(d => d * 25));\n  let alpha = 20;\n  let bg;\n  let margin;\n\n  p.setup = function() {\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 100);\n    bg = p.color(100 - HUE, 10, 15);\n    p.background(bg);\n    p.noFill();\n    margin = p.floor(p.width * 0.15);\n  };\n\n  p.draw = function() {\n    const marginX = p.map(\n      p.sin(p.frameCount / divisors[0]),\n      -1,\n      1,\n      margin,\n      margin * 0.05\n    );\n    const midLerpVal = p.map(\n      p.sin(p.frameCount / divisors[1]),\n      -1,\n      1,\n      0.3,\n      0.7\n    );\n    const leftY = p.map(\n      p.cos(p.frameCount / divisors[2]),\n      -1,\n      1,\n      p.height - margin,\n      margin\n    );\n    const rightY = p.map(\n      p.cos(p.frameCount / divisors[3]),\n      -1,\n      1,\n      margin,\n      p.height - margin\n    );\n    const midX = p.lerp(marginX, p.width - marginX, midLerpVal);\n    const midY = p.lerp(leftY, rightY, midLerpVal);\n    const leftLerpLineVal =\n      p.map(p.cos(p.frameCount / divisors[4]), -1, 1, 1.5, 2) /\n      p.dist(midX, midY, marginX, leftY);\n    const rightLerpLineVal =\n      p.map(p.cos(p.frameCount / divisors[4]), -1, 1, 1.5, 2) /\n      p.dist(midX, midY, p.width - marginX, rightY);\n\n    p.stroke(\n      HUE,\n      p.map(p.cos(p.frameCount / divisors[5]), -1, 1, 40, 80),\n      p.map(p.cos(p.frameCount / divisors[6]), -1, 1, 0, 100),\n      alpha\n    );\n    lerpLine(p, midX, midY, marginX, leftY, leftLerpLineVal);\n    lerpLine(p, midX, midY, p.width - marginX, rightY, rightLerpLineVal, false);\n\n    p.push();\n    p.noStroke();\n    p.fill(bg);\n    p.rect(0, 0, p.width, margin);\n    if (p.frameCount > FRAME_COUNTDOWN) {\n      alpha -= 0.01;\n      alpha < 0 && p.noLoop();\n    } else {\n      p.fill(0, 0, 100);\n      p.text(FRAME_COUNTDOWN - p.frameCount, 10, 20);\n    }\n    p.pop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout\n    sketch={sketch}\n    path={location.pathname}\n    description=\"Reload page for a different variation.\"\n  />\n);\n","export default function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n"],"sourceRoot":""}
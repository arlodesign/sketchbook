{"version":3,"sources":["webpack:///./src/pages/sketch/2020/02/01.js"],"names":["sketch","p","RENDER","getURLParams","render","MULTIPLIERS","shuffle","floor","random","HUES","setup","pixelDensity","frameRate","createCanvas","colorMode","HSB","noSmooth","background","strokeCap","SQUARE","blendMode","HARD_LIGHT","createLoop","gif","open","noiseRadius","draw","animLoop","theta","noise","progress","endA","width","sin","height","endB","cos","endC","translate","stroke","strokeWeight","line","frameCount","console","info","DURATION","noLoop","location","path","pathname","description"],"mappings":"6FAAA,yDAIMA,EAAS,SAASC,GACtB,IAAMC,EAASD,EAAEE,eAAeC,OAG1BC,EAAcJ,EAAEK,QAAQ,CAC5BL,EAAEM,MAAMN,EAAEO,OAAO,EAAG,IACpBP,EAAEM,MAAMN,EAAEO,OAAO,EAAG,IACpBP,EAAEM,MAAMN,EAAEO,OAAO,EAAG,IACpBP,EAAEM,MAAMN,EAAEO,OAAO,EAAG,IACpBP,EAAEM,MAAMN,EAAEO,OAAO,EAAG,OAEhBC,EAAOR,EAAEK,QAAQ,CACrBL,EAAEO,OAAO,EAAI,GACbP,EAAEO,OAAO,EAAI,EAAG,EAAI,GACpBP,EAAEO,OAAO,EAAI,EAAG,KAIlBP,EAAES,MAAQ,WACRT,EAAEU,aAAa,GACfV,EAAEW,UAjBS,IAkBXX,EAAEY,aAAa,IAAK,KACpBZ,EAAEa,UAAUb,EAAEc,IAAK,GACnBd,EAAEe,WACFf,EAAEgB,WAAWR,EAAK,GAAI,GAAK,IAC3BR,EAAEiB,UAAUjB,EAAEkB,QACdlB,EAAEmB,UAAUnB,EAAEoB,YACdpB,EAAEqB,WAzBa,GAyBQ,CACrBC,MAAKrB,GAAS,CAAEE,QAAQ,EAAOoB,MAAM,GACrCC,YAAa,MAIjBxB,EAAEyB,KAAO,WAAY,IAAD,EACiBzB,EAAE0B,SAA7BC,EADU,EACVA,MAAOC,EADG,EACHA,MAAOC,EADJ,EACIA,SAElBC,EAAO,CACT9B,EAAE+B,MAAQF,EACV7B,EAAEgC,IAAIL,EAAQvB,EAAY,KAAOJ,EAAEiC,OAAS,EAtBjC,MAwBTC,EAAO,CACTlC,EAAE+B,MAAQF,EACV7B,EAAEmC,IAAIR,EAAQvB,EAAY,KAAOJ,EAAEiC,OAAS,EA1BjC,MA4BTG,EAAO,CACTpC,EAAE+B,MAAQF,EACV7B,EAAEgC,IAAIL,EAAQvB,EAAY,KAAOJ,EAAEiC,OAAS,EA9BjC,MAiCbjC,EAAEqC,UAAU,EAAGrC,EAAEiC,OAAS,GAE1BjC,EAAEsC,OAAO9B,EAAK,GAAI,GAAK,GAAK,IAC5BR,EAAEuC,aAAa,GACfX,IAAU,GAAK5B,EAAEwC,KAAF,MAAAxC,EAAC,CAAMA,EAAE+B,MAAQF,GAAW7B,EAAEiC,OAAS,EArCzC,KAqCG,OAAqDG,IAErEpC,EAAEsC,OAAO9B,EAAK,GAAI,GAAK,GAAK,IAC5BR,EAAEuC,aAAa,GACfvC,EAAEmC,IAAIR,EAAQvB,EAAY,IAAM,GAC9BJ,EAAEwC,KAAF,MAAAxC,EAAC,CAAMA,EAAE+B,MAAQF,GAAW7B,EAAEiC,OAAS,EA1C5B,KA0CV,OAAqDH,IAExD9B,EAAEsC,OAAO9B,EAAK,GAAI,GAAK,GAAK,IAC5BR,EAAEuC,aAAa,GACfvC,EAAEgC,IAAIL,EAAQvB,EAAY,IAAM,GAC9BJ,EAAEwC,KAAF,MAAAxC,EAAC,CAAMA,EAAE+B,MAAQF,GAAW7B,EAAEiC,OAAS,EA/C5B,KA+CV,OAAqDC,IAExDlC,EAAEyC,WAAa,KAAQ,GACrBC,QAAQC,KAAQ3C,EAAEyC,WAAFzC,YAEjBC,GAA2B2C,OAAjB5C,EAAEyC,YAAkCzC,EAAE6C,WAItC,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc/C,OAAQA,EAAQgD,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2020-02-01-js-4728c380bbeff447c389.js","sourcesContent":["import React from \"react\";\nimport SketchLayout from \"~components/sketch-layout\";\nimport \"p5.createloop\";\n\nconst sketch = function(p) {\n  const RENDER = p.getURLParams().render;\n  const DURATION = 40;\n  const RATE = 60;\n  const MULTIPLIERS = p.shuffle([\n    p.floor(p.random(1, 3)),\n    p.floor(p.random(3, 5)),\n    p.floor(p.random(5, 7)),\n    p.floor(p.random(7, 9)),\n    p.floor(p.random(9, 11)),\n  ]);\n  const HUES = p.shuffle([\n    p.random(1 / 3),\n    p.random(1 / 3, 2 / 3),\n    p.random(2 / 3, 1),\n  ]);\n  const MARGIN = 200;\n\n  p.setup = function() {\n    p.pixelDensity(2);\n    p.frameRate(RATE);\n    p.createCanvas(660, 840);\n    p.colorMode(p.HSB, 1);\n    p.noSmooth();\n    p.background(HUES[0], 0.4, 0.3);\n    p.strokeCap(p.SQUARE);\n    p.blendMode(p.HARD_LIGHT);\n    p.createLoop(DURATION, {\n      gif: RENDER ? { render: false, open: true } : false,\n      noiseRadius: 0.3,\n    });\n  };\n\n  p.draw = function() {\n    const { theta, noise, progress } = p.animLoop;\n\n    let endA = [\n      p.width * progress,\n      p.sin(theta * MULTIPLIERS[0]) * (p.height / 2 - MARGIN),\n    ];\n    let endB = [\n      p.width * progress,\n      p.cos(theta * MULTIPLIERS[1]) * (p.height / 2 - MARGIN),\n    ];\n    let endC = [\n      p.width * progress,\n      p.sin(theta * MULTIPLIERS[2]) * (p.height / 2 - MARGIN),\n    ];\n\n    p.translate(0, p.height / 2);\n\n    p.stroke(HUES[0], 0.4, 0.3, 0.7);\n    p.strokeWeight(3);\n    noise() > 0 && p.line(p.width * progress, -p.height / 2 + MARGIN, ...endC);\n\n    p.stroke(HUES[1], 0.3, 0.9, 0.7);\n    p.strokeWeight(1);\n    p.cos(theta * MULTIPLIERS[3]) > 0 &&\n      p.line(p.width * progress, -p.height / 2 + MARGIN, ...endA);\n\n    p.stroke(HUES[2], 0.7, 0.4, 0.7);\n    p.strokeWeight(2);\n    p.sin(theta * MULTIPLIERS[4]) > 0 &&\n      p.line(p.width * progress, -p.height / 2 + MARGIN, ...endB);\n\n    p.frameCount % 100 === 0 &&\n      console.info(`${p.frameCount} / ${DURATION * RATE}`);\n\n    !RENDER && p.frameCount === DURATION * RATE && p.noLoop();\n  };\n};\n\nexport default ({ location }) => (\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\n);\n"],"sourceRoot":""}